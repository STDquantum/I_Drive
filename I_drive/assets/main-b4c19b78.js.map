{"version":3,"mappings":";;;AAWA,MAAM,cAAc,MAAM;AAClB,kBAAU;AACT,qBAAY,MAAM,KAAK;AAChC;AAEA,MAAM,OAA4B;AAAA,EAChC,WAAW;AAAA,EACX,SAAS;AAAA,EACT,MAAM;AAAA,EACN,aAAa;AAAA,EACb,UAAU;AAAA,IACR;AAAA,MACE,MAAM;AAAA,MACN,KAAK,GAAG,YAAa;AAAA,IACvB;AAAA,EACF;AACF;ACzBA,MAAM,kBAAkB,MAAMA;ACC9B,MAAM,SAAS,MAAM;AACnB,QAAM,EAAE,MAAM,SAAS,aAAa,gBAAgB;AAEpD,SAEIC,kCAAA,IAAAC,4BAAA,YAAAC,uCAAC,OAAI,aAAU,gEACb;AAAA,IAAAF,sCAAC,SAAI,WAAU,SACb,gDAAC,MAAK,MAAI,SACR,UAACA,kCAAA,iBACC,gDAAC,OAAI,aAAU,0BAAyB,KAAI,QAAO,KAAK,KAAM,IAChE,GACF,EACF;AAAA,IACAA,sCAAC,SAAI,WAAU,oBACZ,mBAAS,IAAI,CAAC,GAAG,MAChBA,kCAAA;AAAA,MAAC;AAAA;AAAA,QAEC,MAAM,EAAE;AAAA,QACR,WAAU;AAAA,QAET,UAAE;AAAA;AAAA,MAJE;AAAA,IAMR,IACH;AAAA,IACF,GACF;AAEJ;;;;;ACvBA,MAAM,SAAS,CAAC,EAAE,eAAwC;AACxD,QAAM,EAAE,WAAW,YAAY,IAAI,gBAAgB;AAEnD,SAEIE,kCAAA,KAAAD,4BAAA;AAAA,IAAAC,uCAACC,KAAO,gBAAgB,EAAE,OAAOC,SAAO,KACtC;AAAA,MAACJ,sCAAA,UAAK,MAAK,KAAK;AAAA,MAChBA,sCAAC,WAAO,UAAU;AAAA,MACjBA,kCAAA,cAAK,MAAK,eAAc,SAAS,aAAa;AAAA,MAC9CA,kCAAA,cAAK,MAAK,YAAW,SAAQ,WAAU;AAAA,MACxCA,kCAAA;AAAA,QAAC;AAAA;AAAA,UACC,MAAK;AAAA,UACL,SAAQ;AAAA;AAAA,MACV;AAAA,OACF;AAAA,0CACC,QAAO;AAAA,IACPA,sCAAA,SAAI,WAAU,6BAA6B,SAAS;AAAA,EACvD;AAEJ;AAEA,OAAO,YAAY;AAAA,EACjB,UAAU,UAAU,KAAK;AAC3B;ACzBO,MAAM,eAA8C;AAAA,EACzD,MAAM;AAAA,EACN,UAAU;AAAA,IACR;AAAA,MACE,MAAM;AAAA,MACN,YAAY;AAAA,QACV,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,MAAM;AAAA,QACN,IAAI,CAAC,SAAS,MAAM;AAAA,QACpB,UAAU;AAAA,QACV,OAAO;AAAA,MACT;AAAA,MACA,UAAU;AAAA,QACR,MAAM;AAAA,QACN,aAAa;AAAA,UACX;AAAA,YACE,CAAC,QAAQ,OAAO;AAAA,YAChB,CAAC,QAAQ,OAAO;AAAA,YAChB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,MAAM;AAAA,YAChB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,QAAQ,OAAO;AAAA,YAChB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,QAAQ,OAAO;AAAA,YAChB,CAAC,QAAQ,OAAO;AAAA,YAChB,CAAC,QAAQ,OAAO;AAAA,YAChB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,QAAQ,OAAO;AAAA,YAChB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,IAAI,OAAO;AAAA,YACZ,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,QAAQ,OAAO;AAAA,YAChB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,MAAM;AAAA,YAChB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,MAAM;AAAA,YAChB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,QAAQ,MAAM;AAAA,YACf,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,QAAQ,OAAO;AAAA,YAChB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,QAAQ,OAAO;AAAA,YAChB,CAAC,SAAS,MAAM;AAAA,YAChB,CAAC,SAAS,MAAM;AAAA,YAChB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,MAAM;AAAA,YAChB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,KAAK;AAAA,YACf,CAAC,SAAS,MAAM;AAAA,YAChB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,MAAM;AAAA,YAChB,CAAC,QAAQ,OAAO;AAAA,YAChB,CAAC,QAAQ,OAAO;AAAA,YAChB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,QAAQ,OAAO;AAAA,YAChB,CAAC,SAAS,MAAM;AAAA,YAChB,CAAC,SAAS,MAAM;AAAA,YAChB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,MAAM;AAAA,YAChB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,MAAM;AAAA,YAChB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,QAAQ,OAAO;AAAA,YAChB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,MAAM;AAAA,YAChB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,MAAM;AAAA,YAChB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,QAAQ,OAAO;AAAA,YAChB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,QAAQ,OAAO;AAAA,UAClB;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,IACA;AAAA,MACE,MAAM;AAAA,MACN,YAAY;AAAA,QACV,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,MAAM;AAAA,QACN,IAAI,CAAC,SAAS,OAAO;AAAA,QACrB,UAAU;AAAA,QACV,OAAO;AAAA,MACT;AAAA,MACA,UAAU;AAAA,QACR,MAAM;AAAA,QACN,aAAa;AAAA,UACX;AAAA,YACE,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,QAAQ,OAAO;AAAA,YAChB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,QAAQ,MAAM;AAAA,YACf,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,MAAM;AAAA,YAChB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,MAAM;AAAA,YAChB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,QAAQ,OAAO;AAAA,YAChB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,MAAM;AAAA,YAChB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,MAAM;AAAA,YAChB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,QAAQ,OAAO;AAAA,YAChB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,MAAM;AAAA,YAChB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,MAAM;AAAA,YAChB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,MAAM;AAAA,YAChB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,MAAM;AAAA,YAChB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,MAAM;AAAA,YAChB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,QAAQ,OAAO;AAAA,YAChB,CAAC,QAAQ,OAAO;AAAA,YAChB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,MAAM;AAAA,YAChB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,MAAM;AAAA,YAChB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,O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AU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,MAAM;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,MAAM;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,MAAM;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,MAAM;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,UAAU,MAAM;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,UAAU,MAAM;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,MAAM;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,MAAM;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,MAAM;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,MAAM;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,SAAS,MAAM;AAAA,YAChB,CAAC,UAAU,MAAM;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,MAAM;AAAA,YACjB,CAAC,UAAU,MAAM;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,MAAM;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,MAAM;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,MAAM;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,MAAM;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA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AAAA,YACjB,CAAC,QAAQ,OAAO;AAAA,YAChB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,MAAM;AAAA,YAChB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,MAAM;AAAA,YAChB,CAAC,SAAS,OAAO;AAAA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lB,CAAC,UAAU,MAAM;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,SAAS,MAAM;AAAA,YAChB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,MAAM;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,SAAS,MAAM;AAAA,YAChB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,MAAM;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,C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ClB,CAAC,UAAU,MAAM;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,MAAM;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,MAAM;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,MAAM;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,MAAM;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,MAAM;AAAA,YACjB,CAAC,UAAU,MAAM;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,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B,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,MAAM;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,MAAM;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,MAAM;AAAA,YACjB,CAAC,UAAU,MAAM;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,MAAM;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,MAAM;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,MAAM;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,MAAM;AAAA,UACnB;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,IACA;AAAA,MACE,MAAM;AAAA,MACN,YAAY;AAAA,QACV,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,MAAM;AAAA,QACN,IAAI,CAAC,UAAU,OAAO;AAAA,QACtB,UAAU;AAAA,QACV,OAAO;AAAA,MACT;AAAA,MACA,UAAU;AAAA,QACR,MAAM;AAAA,QACN,aAAa;AAAA,UACX;AAAA,YACE,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,MAAM;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,MAAM;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,MAAM;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,UAAU,MAAM;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,MAAM;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA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A,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,MAAM;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,MAAM;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,MAAM;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,OAAO,OAAO;AAAA,YACf,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,MAAM;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,MAAM;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,MAAM;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,MAAM;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,UAAU,MAAM;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,UACpB;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,IACA;AAAA,MACE,MAAM;AAAA,MACN,YAAY;AAAA,QACV,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,MAAM;AAAA,QACN,IAAI,CAAC,UAAU,OAAO;AAAA,QACtB,UAAU;AAAA,QACV,OAAO;AAAA,MACT;AAAA,MACA,UAAU;AAAA,QACR,MAAM;AAAA,QACN,aAAa;AAAA,UACX;AAAA,YACE,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,MAAM;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,MAAM;AAAA,YACjB,CAAC,UAAU,MAAM;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,MAAM;AAAA,YACjB,CAAC,UAAU,MAAM;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,MAAM;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,MAAM;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,UACpB;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,IACA;AAAA,MACE,MAAM;AAAA,MACN,YAAY;AAAA,QACV,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,MAAM;AAAA,QACN,IAAI,CAAC,UAAU,OAAO;AAAA,QACtB,UAAU;AAAA,QACV,OAAO;AAAA,MACT;AAAA,MACA,UAAU;AAAA,QACR,MAAM;AAAA,QACN,aAAa;AAAA,UACX;AAAA,YACE,CAAC,UAAU,MAAM;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,UAAU,MAAM;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,SAAS,MAAM;AAAA,YAChB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,MAAM;AAAA,YACjB,CAAC,UAAU,MAAM;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,MAAM;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,MAAM;AAAA,UACnB;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,IACA;AAAA,MACE,MAAM;AAAA,MACN,YAAY;AAAA,QACV,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,MAAM;AAAA,QACN,IAAI,CAAC,UAAU,KAAK;AAAA,QACpB,UAAU;AAAA,QACV,OAAO;AAAA,MACT;AAAA,MACA,UAAU;AAAA,QACR,MAAM;AAAA,QACN,aAAa;AAAA,UACX;AAAA,YACE,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,MAAM;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,MAAM;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,MAAM;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,KAAK;AAAA,YAChB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,MAAM;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,KAAK;AAAA,YAChB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,UACpB;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,IACA;AAAA,MACE,MAAM;AAAA,MACN,YAAY;AAAA,QACV,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,MAAM;AAAA,QACN,IAAI,CAAC,UAAU,OAAO;AAAA,QACtB,UAAU;AAAA,QACV,OAAO;AAAA,MACT;AAAA,MACA,UAAU;AAAA,QACR,MAAM;AAAA,QACN,aAAa;AAAA,UACX;AAAA,YACE,CAAC,UAAU,MAAM;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,MAAM;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,SAAS,MAAM;AAAA,YAChB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,MAAM;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,MAAM;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,MAAM;AAAA,YACjB,CAAC,UAAU,MAAM;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,SAAS,OAAO;AAAA,YACjB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU,OAAO;AAAA,YAClB,CAAC,UAAU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","names":["siteMetadata","jsx","Fragment","jsxs","Helmet","styles","mapboxPolyline.decode","activities","cities","useState","lazy","Suspense","React.createElement","StartSvg","EndSvg","lights","useRef","useCallback","viewState","useEffect","Map","year","title","runDate","useReducer","ReactDOM","HelmetProvider","NotFound"],"sources":["../../src/static/site-metadata.ts","../../src/hooks/useSiteMetadata.ts","../../src/components/Header/index.tsx","../../src/components/Layout/index.tsx","../../src/static/run_countries.ts","../../src/static/city.ts","../../src/utils/utils.ts","../../src/components/Stat/index.tsx","../../src/hooks/useActivities.ts","../../src/hooks/useHover.ts","../../assets/index.tsx","../../src/utils/svgUtils.tsx","../../src/components/YearStat/index.tsx","../../src/components/LocationStat/CitiesStat.tsx","../../src/components/LocationStat/LocationSummary.tsx","../../src/components/LocationStat/PeriodStat.tsx","../../src/components/LocationStat/index.tsx","../../assets/end.svg","../../assets/start.svg","../../src/components/RunMap/RunMarker.tsx","../../src/components/RunMap/RunMapButtons.tsx","../../src/components/RunMap/LightsControl.tsx","../../src/components/RunMap/index.tsx","../../src/components/RunTable/RunRow.tsx","../../src/components/RunTable/index.tsx","../../src/components/SVGStat/index.tsx","../../src/components/YearsStat/index.tsx","../../src/pages/index.tsx","../../src/pages/404.tsx","../../src/main.tsx"],"sourcesContent":["interface ISiteMetadataResult {\n  siteTitle: string;\n  siteUrl: string;\n  description: string;\n  logo: string;\n  navLinks: {\n    name: string;\n    url: string;\n  }[];\n}\n\nconst getBasePath = () => {\n  const baseUrl = import.meta.env.BASE_URL;\n  return baseUrl === '/' ? '' : baseUrl;\n};\n\nconst data: ISiteMetadataResult = {\n  siteTitle: '我的轨迹',\n  siteUrl: 'https://stdquantum.github.io/I_Drive',\n  logo: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQTtc69JxHNcmN1ETpMUX4dozAgAN6iPjWalQ&usqp=CAU',\n  description: '记录我的轨迹',\n  navLinks: [\n    {\n      name: 'Summary',\n      url: `${getBasePath()}/summary`,\n    },\n  ],\n};\n\nexport default data;\n","import siteMetadata from '@/static/site-metadata';\n\nconst useSiteMetadata = () => siteMetadata;\n\nexport default useSiteMetadata;\n","import { Link } from 'react-router-dom';\nimport useSiteMetadata from '@/hooks/useSiteMetadata';\n\nconst Header = () => {\n  const { logo, siteUrl, navLinks } = useSiteMetadata();\n\n  return (\n    <>\n      <nav className=\"mt-12 flex w-full items-center justify-between pl-6 lg:px-16\">\n        <div className=\"w-1/4\">\n          <Link to={siteUrl}>\n            <picture>\n              <img className=\"h-16 w-16 rounded-full\" alt=\"logo\" src={logo} />\n            </picture>\n          </Link>\n        </div>\n        <div className=\"w-3/4 text-right\">\n          {navLinks.map((n, i) => (\n            <a\n              key={i}\n              href={n.url}\n              className=\"mr-3 text-lg lg:mr-4 lg:text-base\"\n            >\n              {n.name}\n            </a>\n          ))}\n        </div>\n      </nav>\n    </>\n  );\n};\n\nexport default Header;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport Header from '@/components/Header';\nimport useSiteMetadata from '@/hooks/useSiteMetadata';\nimport styles from './style.module.css';\n\nconst Layout = ({ children }: React.PropsWithChildren) => {\n  const { siteTitle, description } = useSiteMetadata();\n\n  return (\n    <>\n      <Helmet bodyAttributes={{ class: styles.body }}>\n        <html lang=\"en\" />\n        <title>{siteTitle}</title>\n        <meta name=\"description\" content={description} />\n        <meta name=\"keywords\" content=\"running\" />\n        <meta\n          name=\"viewport\"\n          content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"\n        />\n      </Helmet>\n      <Header />\n      <div className=\"mb-16 p-4 lg:flex lg:p-16\">{children}</div>\n    </>\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","import { FeatureCollection, LineString, Polygon, MultiPolygon } from 'geojson';\nimport { MAIN_COLOR } from '@/utils/const';\n\nexport type RPGeometry = LineString | Polygon | MultiPolygon;\n\nexport const chinaGeojson: FeatureCollection<RPGeometry> = {\n  type: 'FeatureCollection',\n  features: [\n    {\n      type: 'Feature',\n      properties: {\n        id: '65',\n        size: '550',\n        name: '新疆维吾尔自治区',\n        cp: [84.9023, 42.148],\n        childNum: 18,\n        color: MAIN_COLOR,\n      },\n      geometry: {\n        type: 'Polygon',\n        coordinates: [\n          [\n            [96.416, 42.7588],\n            [96.416, 42.7148],\n            [95.9766, 42.4951],\n            [96.0645, 42.3193],\n            [96.2402, 42.2314],\n            [95.9766, 41.9238],\n            [95.2734, 41.6162],\n            [95.1855, 41.792],\n            [94.5703, 41.4844],\n            [94.043, 41.0889],\n            [93.8672, 40.6934],\n            [93.0762, 40.6494],\n            [92.6367, 39.6387],\n            [92.373, 39.3311],\n            [92.373, 39.1113],\n            [92.373, 39.0234],\n            [90.1758, 38.4961],\n            [90.3516, 38.2324],\n            [90.6152, 38.3203],\n            [90.5273, 37.8369],\n            [91.0547, 37.4414],\n            [91.3184, 37.0898],\n            [90.7031, 36.7822],\n            [90.791, 36.6064],\n            [91.0547, 36.5186],\n            [91.0547, 36.0791],\n            [90.8789, 36.0352],\n            [90, 36.2549],\n            [89.9121, 36.0791],\n            [89.7363, 36.0791],\n            [89.209, 36.2988],\n            [88.7695, 36.3428],\n            [88.5938, 36.4746],\n            [87.3633, 36.4307],\n            [86.2207, 36.167],\n            [86.1328, 35.8594],\n            [85.6055, 35.6836],\n            [85.0781, 35.7275],\n            [84.1992, 35.376],\n            [83.1445, 35.4199],\n            [82.8809, 35.6836],\n            [82.4414, 35.7275],\n            [82.002, 35.332],\n            [81.6504, 35.2441],\n            [80.4199, 35.4199],\n            [80.2441, 35.2881],\n            [80.332, 35.1563],\n            [80.2441, 35.2002],\n            [79.8926, 34.8047],\n            [79.8047, 34.4971],\n            [79.1016, 34.4531],\n            [79.0137, 34.3213],\n            [78.2227, 34.7168],\n            [78.0469, 35.2441],\n            [78.0469, 35.5078],\n            [77.4316, 35.4639],\n            [76.8164, 35.6396],\n            [76.5527, 35.8594],\n            [76.2012, 35.8154],\n            [75.9375, 36.0352],\n            [76.0254, 36.4746],\n            [75.8496, 36.6943],\n            [75.498, 36.7383],\n            [75.4102, 36.958],\n            [75.0586, 37.002],\n            [74.8828, 36.9141],\n            [74.7949, 37.0459],\n            [74.5313, 37.0898],\n            [74.5313, 37.2217],\n            [74.8828, 37.2217],\n            [75.1465, 37.4414],\n            [74.8828, 37.5732],\n            [74.9707, 37.749],\n            [74.8828, 38.4521],\n            [74.3555, 38.6719],\n            [74.1797, 38.6719],\n            [74.0918, 38.54],\n            [73.8281, 38.584],\n            [73.7402, 38.8477],\n            [73.8281, 38.9795],\n            [73.4766, 39.375],\n            [73.916, 39.5068],\n            [73.916, 39.6826],\n            [73.8281, 39.7705],\n            [74.0039, 40.0342],\n            [74.8828, 40.3418],\n            [74.7949, 40.5176],\n            [75.2344, 40.4297],\n            [75.5859, 40.6494],\n            [75.7617, 40.2979],\n            [76.377, 40.3857],\n            [76.9043, 41.001],\n            [77.6074, 41.001],\n            [78.1348, 41.2207],\n            [78.1348, 41.3965],\n            [80.1563, 42.0557],\n            [80.2441, 42.2754],\n            [80.1563, 42.627],\n            [80.2441, 42.8467],\n            [80.5078, 42.8906],\n            [80.4199, 43.0664],\n            [80.7715, 43.1982],\n            [80.4199, 44.165],\n            [80.4199, 44.6045],\n            [79.9805, 44.8242],\n            [79.9805, 44.9561],\n            [81.7383, 45.3955],\n            [82.0898, 45.2197],\n            [82.5293, 45.2197],\n            [82.2656, 45.6592],\n            [83.0566, 47.2412],\n            [83.6719, 47.0215],\n            [84.7266, 47.0215],\n            [84.9023, 46.8896],\n            [85.5176, 47.0654],\n            [85.6934, 47.2852],\n            [85.5176, 48.1201],\n            [85.7813, 48.4277],\n            [86.5723, 48.5596],\n            [86.8359, 48.8232],\n            [86.748, 48.9551],\n            [86.8359, 49.1309],\n            [87.8027, 49.1748],\n            [87.8906, 48.999],\n            [87.7148, 48.9111],\n            [88.0664, 48.7354],\n            [87.9785, 48.6035],\n            [88.5059, 48.3838],\n            [88.6816, 48.1641],\n            [89.1211, 47.9883],\n            [89.5605, 48.0322],\n            [89.7363, 47.8564],\n            [90.0879, 47.8564],\n            [90.3516, 47.6807],\n            [90.5273, 47.2412],\n            [90.8789, 46.9775],\n            [91.0547, 46.582],\n            [90.8789, 46.3184],\n            [91.0547, 46.0107],\n            [90.7031, 45.7471],\n            [90.7031, 45.5273],\n            [90.8789, 45.2197],\n            [91.582, 45.0879],\n            [93.5156, 44.9561],\n            [94.7461, 44.3408],\n            [95.3613, 44.2969],\n            [95.3613, 44.0332],\n            [95.5371, 43.9014],\n            [95.8887, 43.2422],\n            [96.3281, 42.9346],\n            [96.416, 42.7588],\n          ],\n        ],\n      },\n    },\n    {\n      type: 'Feature',\n      properties: {\n        id: '54',\n        size: '550',\n        name: '西藏自治区',\n        cp: [87.8695, 31.6846],\n        childNum: 7,\n        color: MAIN_COLOR,\n      },\n      geometry: {\n        type: 'Polygon',\n        coordinates: [\n          [\n            [79.0137, 34.3213],\n            [79.1016, 34.4531],\n            [79.8047, 34.4971],\n            [79.8926, 34.8047],\n            [80.2441, 35.2002],\n            [80.332, 35.1563],\n            [80.2441, 35.2881],\n            [80.4199, 35.4199],\n            [81.6504, 35.2441],\n            [82.002, 35.332],\n            [82.4414, 35.7275],\n            [82.8809, 35.6836],\n            [83.1445, 35.4199],\n            [84.1992, 35.376],\n            [85.0781, 35.7275],\n            [85.6055, 35.6836],\n            [86.1328, 35.8594],\n            [86.2207, 36.167],\n            [87.3633, 36.4307],\n            [88.5938, 36.4746],\n            [88.7695, 36.3428],\n            [89.209, 36.2988],\n            [89.7363, 36.0791],\n            [89.3848, 36.0352],\n            [89.4727, 35.9033],\n            [89.7363, 35.7715],\n            [89.7363, 35.4199],\n            [89.4727, 35.376],\n            [89.4727, 35.2441],\n            [89.5605, 34.8926],\n            [89.8242, 34.8486],\n            [89.7363, 34.6729],\n            [89.8242, 34.3652],\n            [89.6484, 34.0137],\n            [90.0879, 33.4863],\n            [90.7031, 33.1348],\n            [91.4063, 33.1348],\n            [91.9336, 32.8271],\n            [92.1973, 32.8271],\n            [92.2852, 32.7393],\n            [92.9883, 32.7393],\n            [93.5156, 32.4756],\n            [93.7793, 32.5635],\n            [94.1309, 32.4316],\n            [94.6582, 32.6074],\n            [95.1855, 32.4316],\n            [95.0098, 32.2998],\n            [95.1855, 32.3438],\n            [95.2734, 32.2119],\n            [95.3613, 32.168],\n            [95.3613, 31.9922],\n            [95.4492, 31.8164],\n            [95.8008, 31.6846],\n            [95.9766, 31.8164],\n            [96.1523, 31.5967],\n            [96.2402, 31.9482],\n            [96.5039, 31.7285],\n            [96.8555, 31.6846],\n            [96.7676, 31.9922],\n            [97.2949, 32.0801],\n            [97.3828, 32.5635],\n            [97.7344, 32.5195],\n            [98.1738, 32.3438],\n            [98.4375, 31.8604],\n            [98.877, 31.4209],\n            [98.6133, 31.2012],\n            [98.9648, 30.7617],\n            [99.1406, 29.2676],\n            [98.9648, 29.1357],\n            [98.9648, 28.8281],\n            [98.7891, 28.8721],\n            [98.7891, 29.0039],\n            [98.7012, 28.916],\n            [98.6133, 28.5205],\n            [98.7891, 28.3447],\n            [98.7012, 28.2129],\n            [98.3496, 28.125],\n            [98.2617, 28.3887],\n            [98.1738, 28.125],\n            [97.5586, 28.5205],\n            [97.2949, 28.0811],\n            [97.3828, 27.9053],\n            [97.0313, 27.7295],\n            [96.5039, 28.125],\n            [95.7129, 28.2568],\n            [95.3613, 28.125],\n            [95.2734, 27.9492],\n            [94.2188, 27.5537],\n            [93.8672, 27.0264],\n            [93.6035, 26.9385],\n            [92.1094, 26.8506],\n            [92.0215, 27.4658],\n            [91.582, 27.5537],\n            [91.582, 27.9053],\n            [91.4063, 28.0371],\n            [91.0547, 27.8613],\n            [90.7031, 28.0811],\n            [89.8242, 28.2129],\n            [89.6484, 28.1689],\n            [89.1211, 27.5977],\n            [89.1211, 27.334],\n            [89.0332, 27.2021],\n            [88.7695, 27.4219],\n            [88.8574, 27.9932],\n            [88.6816, 28.125],\n            [88.1543, 27.9053],\n            [87.8906, 27.9492],\n            [87.7148, 27.8174],\n            [87.0996, 27.8174],\n            [86.748, 28.125],\n            [86.5723, 28.125],\n            [86.4844, 27.9053],\n            [86.1328, 28.125],\n            [86.0449, 27.9053],\n            [85.6934, 28.3447],\n            [85.6055, 28.2568],\n            [85.166, 28.3447],\n            [85.166, 28.6523],\n            [84.9023, 28.5645],\n            [84.4629, 28.7402],\n            [84.2871, 28.8721],\n            [84.1992, 29.2236],\n            [84.1113, 29.2676],\n            [83.584, 29.1797],\n            [83.2324, 29.5752],\n            [82.1777, 30.0586],\n            [82.0898, 30.3223],\n            [81.3867, 30.3662],\n            [81.2109, 30.0146],\n            [81.0352, 30.2344],\n            [80.0684, 30.5859],\n            [79.7168, 30.9375],\n            [79.0137, 31.0693],\n            [78.75, 31.333],\n            [78.8379, 31.5967],\n            [78.6621, 31.8164],\n            [78.75, 31.9043],\n            [78.4863, 32.124],\n            [78.3984, 32.5195],\n            [78.75, 32.6953],\n            [78.9258, 32.3438],\n            [79.2773, 32.5635],\n            [79.1016, 33.1787],\n            [78.6621, 33.6621],\n            [78.6621, 34.1016],\n            [78.9258, 34.1455],\n            [79.0137, 34.3213],\n          ],\n        ],\n      },\n    },\n    {\n      type: 'Feature',\n      properties: {\n        id: '15',\n        size: '450',\n        name: '内蒙古自治区',\n        cp: [112.5977, 46.3408],\n        childNum: 12,\n        color: MAIN_COLOR,\n      },\n      geometry: {\n        type: 'Polygon',\n        coordinates: [\n          [\n            [97.207, 42.8027],\n            [99.4922, 42.583],\n            [100.8105, 42.6709],\n            [101.7773, 42.4951],\n            [102.041, 42.2314],\n            [102.7441, 42.1436],\n            [103.3594, 41.8799],\n            [103.8867, 41.792],\n            [104.502, 41.8799],\n            [104.502, 41.6602],\n            [105.0293, 41.5723],\n            [105.7324, 41.9238],\n            [107.4023, 42.4512],\n            [109.4238, 42.4512],\n            [110.3906, 42.7588],\n            [111.0059, 43.3301],\n            [111.9727, 43.6816],\n            [111.9727, 43.8135],\n            [111.4453, 44.3848],\n            [111.7969, 45],\n            [111.9727, 45.0879],\n            [113.6426, 44.7363],\n            [114.1699, 44.9561],\n            [114.5215, 45.3955],\n            [115.6641, 45.4395],\n            [116.1914, 45.7031],\n            [116.2793, 45.9668],\n            [116.543, 46.2744],\n            [117.334, 46.3623],\n            [117.4219, 46.582],\n            [117.7734, 46.5381],\n            [118.3008, 46.7578],\n            [118.7402, 46.7139],\n            [118.916, 46.7578],\n            [119.0918, 46.6699],\n            [119.707, 46.626],\n            [119.9707, 46.7139],\n            [119.707, 47.1973],\n            [118.4766, 47.9883],\n            [117.8613, 48.0322],\n            [117.334, 47.6807],\n            [116.8066, 47.9004],\n            [116.1914, 47.8564],\n            [115.9277, 47.6807],\n            [115.5762, 47.9004],\n            [115.4883, 48.1641],\n            [115.8398, 48.252],\n            [115.8398, 48.5596],\n            [116.7188, 49.834],\n            [117.7734, 49.5264],\n            [118.5645, 49.9219],\n            [119.2676, 50.0977],\n            [119.3555, 50.3174],\n            [119.1797, 50.3613],\n            [119.5313, 50.7568],\n            [119.5313, 50.8887],\n            [119.707, 51.0645],\n            [120.1465, 51.6797],\n            [120.6738, 51.9434],\n            [120.7617, 52.1191],\n            [120.7617, 52.251],\n            [120.5859, 52.3389],\n            [120.6738, 52.5146],\n            [120.4102, 52.6465],\n            [120.0586, 52.6025],\n            [120.0586, 52.7344],\n            [120.8496, 53.2617],\n            [121.4648, 53.3496],\n            [121.8164, 53.042],\n            [121.2012, 52.5586],\n            [121.6406, 52.4268],\n            [121.7285, 52.2949],\n            [121.9922, 52.2949],\n            [122.168, 52.5146],\n            [122.6953, 52.251],\n            [122.6074, 52.0752],\n            [122.959, 51.3281],\n            [123.3105, 51.2402],\n            [123.6621, 51.3721],\n            [124.3652, 51.2842],\n            [124.541, 51.3721],\n            [124.8926, 51.3721],\n            [125.0684, 51.6357],\n            [125.332, 51.6357],\n            [126.0352, 51.0205],\n            [125.7715, 50.7568],\n            [125.7715, 50.5371],\n            [125.332, 50.1416],\n            [125.1563, 49.834],\n            [125.2441, 49.1748],\n            [124.8047, 49.1309],\n            [124.4531, 48.1201],\n            [124.2773, 48.5156],\n            [122.4316, 47.373],\n            [123.0469, 46.7139],\n            [123.3984, 46.8896],\n            [123.3984, 46.9775],\n            [123.4863, 46.9775],\n            [123.5742, 46.8457],\n            [123.5742, 46.8896],\n            [123.5742, 46.6699],\n            [123.0469, 46.582],\n            [123.2227, 46.2305],\n            [122.7832, 46.0107],\n            [122.6953, 45.7031],\n            [122.4316, 45.8789],\n            [122.2559, 45.791],\n            [121.8164, 46.0107],\n            [121.7285, 45.7471],\n            [121.9043, 45.7031],\n            [122.2559, 45.2637],\n            [122.0801, 44.8682],\n            [122.3438, 44.2529],\n            [123.1348, 44.4727],\n            [123.4863, 43.7256],\n            [123.3105, 43.5059],\n            [123.6621, 43.374],\n            [123.5742, 43.0225],\n            [123.3105, 42.9785],\n            [123.1348, 42.8027],\n            [122.7832, 42.7148],\n            [122.3438, 42.8467],\n            [122.3438, 42.6709],\n            [121.9922, 42.7148],\n            [121.7285, 42.4512],\n            [121.4648, 42.4951],\n            [120.498, 42.0996],\n            [120.1465, 41.7041],\n            [119.8828, 42.1875],\n            [119.5313, 42.3633],\n            [119.3555, 42.2754],\n            [119.2676, 41.7041],\n            [119.4434, 41.6162],\n            [119.2676, 41.3086],\n            [118.3887, 41.3086],\n            [118.125, 41.748],\n            [118.3008, 41.792],\n            [118.3008, 42.0996],\n            [118.125, 42.0557],\n            [117.9492, 42.2314],\n            [118.0371, 42.4072],\n            [117.7734, 42.627],\n            [117.5098, 42.583],\n            [117.334, 42.4512],\n            [116.8945, 42.4072],\n            [116.8066, 42.0117],\n            [116.2793, 42.0117],\n            [116.0156, 41.792],\n            [115.9277, 41.9238],\n            [115.2246, 41.5723],\n            [114.9609, 41.6162],\n            [114.873, 42.0996],\n            [114.5215, 42.1436],\n            [114.1699, 41.792],\n            [114.2578, 41.5723],\n            [113.9063, 41.4404],\n            [113.9941, 41.2207],\n            [113.9063, 41.1328],\n            [114.082, 40.7373],\n            [114.082, 40.5176],\n            [113.8184, 40.5176],\n            [113.5547, 40.3418],\n            [113.2031, 40.3857],\n            [112.7637, 40.166],\n            [112.3242, 40.2539],\n            [111.9727, 39.5947],\n            [111.4453, 39.6387],\n            [111.3574, 39.4189],\n            [111.0938, 39.375],\n            [111.0938, 39.5947],\n            [110.6543, 39.2871],\n            [110.127, 39.4629],\n            [110.2148, 39.2871],\n            [109.8633, 39.2432],\n            [109.9512, 39.1553],\n            [108.9844, 38.3203],\n            [109.0723, 38.0127],\n            [108.8965, 37.9688],\n            [108.8086, 38.0127],\n            [108.7207, 37.7051],\n            [108.1934, 37.6172],\n            [107.666, 37.8809],\n            [107.3145, 38.1006],\n            [106.7871, 38.1885],\n            [106.5234, 38.3203],\n            [106.9629, 38.9795],\n            [106.7871, 39.375],\n            [106.3477, 39.2871],\n            [105.9082, 38.7158],\n            [105.8203, 37.793],\n            [104.3262, 37.4414],\n            [103.4473, 37.8369],\n            [103.3594, 38.0127],\n            [103.5352, 38.1445],\n            [103.4473, 38.3643],\n            [104.2383, 38.9795],\n            [104.0625, 39.4189],\n            [103.3594, 39.3311],\n            [103.0078, 39.1113],\n            [102.4805, 39.2432],\n            [101.8652, 39.1113],\n            [102.041, 38.8916],\n            [101.7773, 38.6719],\n            [101.3379, 38.7598],\n            [101.25, 39.0234],\n            [100.9863, 38.9355],\n            [100.8105, 39.4189],\n            [100.5469, 39.4189],\n            [100.0195, 39.7705],\n            [99.4922, 39.8584],\n            [100.1074, 40.2539],\n            [100.1953, 40.6494],\n            [99.9316, 41.001],\n            [99.2285, 40.8691],\n            [99.0527, 40.6934],\n            [98.9648, 40.7813],\n            [98.7891, 40.6055],\n            [98.5254, 40.7373],\n            [98.6133, 40.6494],\n            [98.3496, 40.5615],\n            [98.3496, 40.9131],\n            [97.4707, 41.4844],\n            [97.8223, 41.6162],\n            [97.8223, 41.748],\n            [97.207, 42.8027],\n          ],\n        ],\n      },\n    },\n    {\n      type: 'Feature',\n      properties: {\n        id: '63',\n        size: '800',\n        name: '青海省',\n        cp: [95.2402, 35.4199],\n        childNum: 8,\n        color: MAIN_COLOR,\n      },\n      geometry: {\n        type: 'Polygon',\n        coordinates: [\n          [\n            [89.7363, 36.0791],\n            [89.9121, 36.0791],\n            [90, 36.2549],\n            [90.8789, 36.0352],\n            [91.0547, 36.0791],\n            [91.0547, 36.5186],\n            [90.791, 36.6064],\n            [90.7031, 36.7822],\n            [91.3184, 37.0898],\n            [91.0547, 37.4414],\n            [90.5273, 37.8369],\n            [90.6152, 38.3203],\n            [90.3516, 38.2324],\n            [90.1758, 38.4961],\n            [92.373, 39.0234],\n            [92.373, 39.1113],\n            [93.1641, 39.1992],\n            [93.1641, 38.9795],\n            [93.6914, 38.9355],\n            [93.8672, 38.7158],\n            [94.3066, 38.7598],\n            [94.5703, 38.3643],\n            [95.0098, 38.4082],\n            [95.4492, 38.2764],\n            [95.7129, 38.3643],\n            [96.2402, 38.1006],\n            [96.416, 38.2324],\n            [96.6797, 38.1885],\n            [96.6797, 38.4521],\n            [97.1191, 38.584],\n            [97.0313, 39.1992],\n            [98.1738, 38.8037],\n            [98.3496, 39.0234],\n            [98.6133, 38.9355],\n            [98.7891, 39.0674],\n            [99.1406, 38.9355],\n            [99.8438, 38.3643],\n            [100.1953, 38.2764],\n            [100.0195, 38.4521],\n            [100.1074, 38.4961],\n            [100.459, 38.2764],\n            [100.7227, 38.2324],\n            [101.1621, 37.8369],\n            [101.5137, 37.8809],\n            [101.7773, 37.6172],\n            [101.9531, 37.7051],\n            [102.1289, 37.4414],\n            [102.5684, 37.1777],\n            [102.4805, 36.958],\n            [102.6563, 36.8262],\n            [102.5684, 36.7383],\n            [102.832, 36.3428],\n            [103.0078, 36.2549],\n            [102.9199, 36.0791],\n            [102.9199, 35.9033],\n            [102.6563, 35.7715],\n            [102.832, 35.5957],\n            [102.4805, 35.5957],\n            [102.3047, 35.4199],\n            [102.3926, 35.2002],\n            [101.9531, 34.8486],\n            [101.9531, 34.6289],\n            [102.2168, 34.4092],\n            [102.1289, 34.2773],\n            [101.6895, 34.1016],\n            [100.9863, 34.3652],\n            [100.8105, 34.2773],\n            [101.25, 33.6621],\n            [101.5137, 33.7061],\n            [101.6016, 33.5303],\n            [101.7773, 33.5303],\n            [101.6895, 33.3105],\n            [101.7773, 33.2227],\n            [101.6016, 33.1348],\n            [101.1621, 33.2227],\n            [101.25, 32.6953],\n            [100.7227, 32.6514],\n            [100.7227, 32.5195],\n            [100.3711, 32.7393],\n            [100.1074, 32.6514],\n            [100.1074, 32.8711],\n            [99.8438, 33.0029],\n            [99.7559, 32.7393],\n            [99.2285, 32.915],\n            [99.2285, 33.0469],\n            [98.877, 33.1787],\n            [98.4375, 34.0576],\n            [97.8223, 34.1895],\n            [97.6465, 34.1016],\n            [97.7344, 33.9258],\n            [97.3828, 33.8818],\n            [97.4707, 33.5742],\n            [97.7344, 33.3984],\n            [97.3828, 32.8711],\n            [97.4707, 32.6953],\n            [97.7344, 32.5195],\n            [97.3828, 32.5635],\n            [97.2949, 32.0801],\n            [96.7676, 31.9922],\n            [96.8555, 31.6846],\n            [96.5039, 31.7285],\n            [96.2402, 31.9482],\n            [96.1523, 31.5967],\n            [95.9766, 31.8164],\n            [95.8008, 31.6846],\n            [95.4492, 31.8164],\n            [95.3613, 31.9922],\n            [95.3613, 32.168],\n            [95.2734, 32.2119],\n            [95.1855, 32.3438],\n            [95.0098, 32.2998],\n            [95.1855, 32.4316],\n            [94.6582, 32.6074],\n            [94.1309, 32.4316],\n            [93.7793, 32.5635],\n            [93.5156, 32.4756],\n            [92.9883, 32.7393],\n            [92.2852, 32.7393],\n            [92.1973, 32.8271],\n            [91.9336, 32.8271],\n            [91.4063, 33.1348],\n            [90.7031, 33.1348],\n            [90.0879, 33.4863],\n            [89.6484, 34.0137],\n            [89.8242, 34.3652],\n            [89.7363, 34.6729],\n            [89.8242, 34.8486],\n            [89.5605, 34.8926],\n            [89.4727, 35.2441],\n            [89.4727, 35.376],\n            [89.7363, 35.4199],\n            [89.7363, 35.7715],\n            [89.4727, 35.9033],\n            [89.3848, 36.0352],\n            [89.7363, 36.0791],\n          ],\n        ],\n      },\n    },\n    {\n      type: 'Feature',\n      properties: {\n        id: '51',\n        size: '900',\n        name: '四川省',\n        cp: [101.9199, 30.1904],\n        childNum: 21,\n        color: MAIN_COLOR,\n      },\n      geometry: {\n        type: 'Polygon',\n        coordinates: [\n          [\n            [101.7773, 33.5303],\n            [101.8652, 33.5742],\n            [101.9531, 33.4424],\n            [101.8652, 33.0908],\n            [102.4805, 33.4424],\n            [102.2168, 33.9258],\n            [102.9199, 34.3213],\n            [103.0957, 34.1895],\n            [103.1836, 33.7939],\n            [104.1504, 33.6182],\n            [104.2383, 33.3984],\n            [104.4141, 33.3105],\n            [104.3262, 33.2227],\n            [104.4141, 33.0469],\n            [104.3262, 32.8711],\n            [104.4141, 32.7393],\n            [105.2051, 32.6074],\n            [105.3809, 32.7393],\n            [105.3809, 32.8711],\n            [105.4688, 32.915],\n            [105.5566, 32.7393],\n            [106.084, 32.8711],\n            [106.084, 32.7393],\n            [106.3477, 32.6514],\n            [107.0508, 32.6953],\n            [107.1387, 32.4756],\n            [107.2266, 32.4316],\n            [107.4023, 32.5195],\n            [108.0176, 32.168],\n            [108.2813, 32.2559],\n            [108.5449, 32.2119],\n            [108.3691, 32.168],\n            [108.2813, 31.9043],\n            [108.5449, 31.6846],\n            [108.1934, 31.5088],\n            [107.9297, 30.8496],\n            [107.4902, 30.8496],\n            [107.4023, 30.7617],\n            [107.4902, 30.6299],\n            [107.0508, 30.0146],\n            [106.7871, 30.0146],\n            [106.6113, 30.3223],\n            [106.2598, 30.1904],\n            [105.8203, 30.4541],\n            [105.6445, 30.2783],\n            [105.5566, 30.1025],\n            [105.7324, 29.8828],\n            [105.293, 29.5313],\n            [105.4688, 29.3115],\n            [105.7324, 29.2676],\n            [105.8203, 28.96],\n            [106.2598, 28.8721],\n            [106.3477, 28.5205],\n            [105.9961, 28.7402],\n            [105.6445, 28.4326],\n            [105.9082, 28.125],\n            [106.1719, 28.125],\n            [106.3477, 27.8174],\n            [105.6445, 27.6416],\n            [105.5566, 27.7734],\n            [105.293, 27.7295],\n            [105.2051, 27.9932],\n            [105.0293, 28.0811],\n            [104.8535, 27.9053],\n            [104.4141, 27.9492],\n            [104.3262, 28.0371],\n            [104.4141, 28.125],\n            [104.4141, 28.2568],\n            [104.2383, 28.4326],\n            [104.4141, 28.6084],\n            [103.8867, 28.6523],\n            [103.7988, 28.3008],\n            [103.4473, 28.125],\n            [103.4473, 27.7734],\n            [102.9199, 27.29],\n            [103.0078, 26.3672],\n            [102.6563, 26.1914],\n            [102.5684, 26.3672],\n            [102.1289, 26.1035],\n            [101.8652, 26.0596],\n            [101.6016, 26.2354],\n            [101.6895, 26.3672],\n            [101.4258, 26.5869],\n            [101.4258, 26.8066],\n            [101.4258, 26.7188],\n            [101.1621, 27.0264],\n            [101.1621, 27.1582],\n            [100.7227, 27.8613],\n            [100.3711, 27.8174],\n            [100.2832, 27.7295],\n            [100.0195, 28.125],\n            [100.1953, 28.3447],\n            [99.668, 28.8281],\n            [99.4043, 28.5205],\n            [99.4043, 28.1689],\n            [99.2285, 28.3008],\n            [99.1406, 29.2676],\n            [98.9648, 30.7617],\n            [98.6133, 31.2012],\n            [98.877, 31.4209],\n            [98.4375, 31.8604],\n            [98.1738, 32.3438],\n            [97.7344, 32.5195],\n            [97.4707, 32.6953],\n            [97.3828, 32.8711],\n            [97.7344, 33.3984],\n            [97.4707, 33.5742],\n            [97.3828, 33.8818],\n            [97.7344, 33.9258],\n            [97.6465, 34.1016],\n            [97.8223, 34.1895],\n            [98.4375, 34.0576],\n            [98.877, 33.1787],\n            [99.2285, 33.0469],\n            [99.2285, 32.915],\n            [99.7559, 32.7393],\n            [99.8438, 33.0029],\n            [100.1074, 32.8711],\n            [100.1074, 32.6514],\n            [100.3711, 32.7393],\n            [100.7227, 32.5195],\n            [100.7227, 32.6514],\n            [101.25, 32.6953],\n            [101.1621, 33.2227],\n            [101.6016, 33.1348],\n            [101.7773, 33.2227],\n            [101.6895, 33.3105],\n            [101.7773, 33.5303],\n          ],\n        ],\n      },\n    },\n    {\n      type: 'Feature',\n      properties: {\n        id: '23',\n        size: '700',\n        name: '黑龙江省',\n        cp: [126.1445, 48.7156],\n        childNum: 13,\n        color: MAIN_COLOR,\n      },\n      geometry: {\n        type: 'Polygon',\n        coordinates: [\n          [\n            [121.4648, 53.3496],\n            [123.6621, 53.5693],\n            [124.8926, 53.0859],\n            [125.0684, 53.2178],\n            [125.5957, 53.0859],\n            [125.6836, 52.9102],\n            [126.123, 52.7783],\n            [126.0352, 52.6025],\n            [126.2109, 52.5146],\n            [126.3867, 52.2949],\n            [126.3867, 52.207],\n            [126.5625, 52.1631],\n            [126.4746, 51.9434],\n            [126.9141, 51.3721],\n            [126.8262, 51.2842],\n            [127.002, 51.3281],\n            [126.9141, 51.1084],\n            [127.2656, 50.7568],\n            [127.3535, 50.2734],\n            [127.6172, 50.2295],\n            [127.5293, 49.8779],\n            [127.793, 49.6143],\n            [128.7598, 49.5703],\n            [129.1113, 49.3506],\n            [129.4629, 49.4385],\n            [130.2539, 48.8672],\n            [130.6934, 48.8672],\n            [130.5176, 48.6475],\n            [130.8691, 48.2959],\n            [130.6934, 48.1201],\n            [131.0449, 47.6807],\n            [132.5391, 47.7246],\n            [132.627, 47.9443],\n            [133.0664, 48.1201],\n            [133.5059, 48.1201],\n            [134.209, 48.3838],\n            [135.0879, 48.4277],\n            [134.7363, 48.252],\n            [134.5605, 47.9883],\n            [134.7363, 47.6807],\n            [134.5605, 47.4609],\n            [134.3848, 47.4609],\n            [134.209, 47.2852],\n            [134.209, 47.1533],\n            [133.8574, 46.5381],\n            [133.9453, 46.2744],\n            [133.5059, 45.835],\n            [133.418, 45.5713],\n            [133.2422, 45.5273],\n            [133.0664, 45.1318],\n            [132.8906, 45.0439],\n            [131.9238, 45.3516],\n            [131.5723, 45.0439],\n            [131.0449, 44.8682],\n            [131.3086, 44.0771],\n            [131.2207, 43.7256],\n            [131.3086, 43.4619],\n            [130.8691, 43.418],\n            [130.5176, 43.6377],\n            [130.3418, 43.9893],\n            [129.9902, 43.8574],\n            [129.9023, 44.0332],\n            [129.8145, 43.9014],\n            [129.2871, 43.8135],\n            [129.1992, 43.5938],\n            [128.8477, 43.5498],\n            [128.4961, 44.165],\n            [128.4082, 44.4727],\n            [128.0566, 44.3408],\n            [128.0566, 44.1211],\n            [127.7051, 44.1211],\n            [127.5293, 44.6045],\n            [127.0898, 44.6045],\n            [127.002, 44.7803],\n            [127.0898, 45],\n            [126.9141, 45.1318],\n            [126.5625, 45.2637],\n            [126.0352, 45.1758],\n            [125.7715, 45.3076],\n            [125.6836, 45.5273],\n            [125.0684, 45.3955],\n            [124.8926, 45.5273],\n            [124.3652, 45.4395],\n            [124.0137, 45.7471],\n            [123.9258, 46.2305],\n            [123.2227, 46.2305],\n            [123.0469, 46.582],\n            [123.5742, 46.6699],\n            [123.5742, 46.8896],\n            [123.5742, 46.8457],\n            [123.4863, 46.9775],\n            [123.3984, 46.9775],\n            [123.3984, 46.8896],\n            [123.0469, 46.7139],\n            [122.4316, 47.373],\n            [124.2773, 48.5156],\n            [124.4531, 48.1201],\n            [124.8047, 49.1309],\n            [125.2441, 49.1748],\n            [125.1563, 49.834],\n            [125.332, 50.1416],\n            [125.7715, 50.5371],\n            [125.7715, 50.7568],\n            [126.0352, 51.0205],\n            [125.332, 51.6357],\n            [125.0684, 51.6357],\n            [124.8926, 51.3721],\n            [124.541, 51.3721],\n            [124.3652, 51.2842],\n            [123.6621, 51.3721],\n            [123.3105, 51.2402],\n            [122.959, 51.3281],\n            [122.6074, 52.0752],\n            [122.6953, 52.251],\n            [122.168, 52.5146],\n            [121.9922, 52.2949],\n            [121.7285, 52.2949],\n            [121.6406, 52.4268],\n            [121.2012, 52.5586],\n            [121.8164, 53.042],\n            [121.4648, 53.3496],\n          ],\n        ],\n      },\n    },\n    {\n      type: 'Feature',\n      properties: {\n        id: '62',\n        size: '690',\n        name: '甘肃省',\n        cp: [99.7129, 38.166],\n        childNum: 14,\n        color: MAIN_COLOR,\n      },\n      geometry: {\n        type: 'Polygon',\n        coordinates: [\n          [\n            [96.416, 42.7148],\n            [97.207, 42.8027],\n            [97.8223, 41.748],\n            [97.8223, 41.6162],\n            [97.4707, 41.4844],\n            [98.3496, 40.9131],\n            [98.3496, 40.5615],\n            [98.6133, 40.6494],\n            [98.5254, 40.7373],\n            [98.7891, 40.6055],\n            [98.9648, 40.7813],\n            [99.0527, 40.6934],\n            [99.2285, 40.8691],\n            [99.9316, 41.001],\n            [100.1953, 40.6494],\n            [100.1074, 40.2539],\n            [99.4922, 39.8584],\n            [100.0195, 39.7705],\n            [100.5469, 39.4189],\n            [100.8105, 39.4189],\n            [100.9863, 38.9355],\n            [101.25, 39.0234],\n            [101.3379, 38.7598],\n            [101.7773, 38.6719],\n            [102.041, 38.8916],\n            [101.8652, 39.1113],\n            [102.4805, 39.2432],\n            [103.0078, 39.1113],\n            [103.3594, 39.3311],\n            [104.0625, 39.4189],\n            [104.2383, 38.9795],\n            [103.4473, 38.3643],\n            [103.5352, 38.1445],\n            [103.3594, 38.0127],\n            [103.4473, 37.8369],\n            [104.3262, 37.4414],\n            [104.5898, 37.4414],\n            [104.5898, 37.2217],\n            [104.8535, 37.2217],\n            [105.293, 36.8262],\n            [105.2051, 36.6943],\n            [105.4688, 36.123],\n            [105.293, 35.9912],\n            [105.3809, 35.7715],\n            [105.7324, 35.7275],\n            [105.8203, 35.5518],\n            [105.9961, 35.4639],\n            [105.9082, 35.4199],\n            [105.9961, 35.4199],\n            [106.084, 35.376],\n            [106.2598, 35.4199],\n            [106.3477, 35.2441],\n            [106.5234, 35.332],\n            [106.4355, 35.6836],\n            [106.6992, 35.6836],\n            [106.9629, 35.8154],\n            [106.875, 36.123],\n            [106.5234, 36.2549],\n            [106.5234, 36.4746],\n            [106.4355, 36.5625],\n            [106.6113, 36.7822],\n            [106.6113, 37.0898],\n            [107.3145, 37.0898],\n            [107.3145, 36.9141],\n            [108.7207, 36.3428],\n            [108.6328, 35.9912],\n            [108.5449, 35.8594],\n            [108.6328, 35.5518],\n            [108.5449, 35.2881],\n            [107.7539, 35.2881],\n            [107.7539, 35.1123],\n            [107.8418, 35.0244],\n            [107.666, 34.9365],\n            [107.2266, 34.8926],\n            [106.9629, 35.0684],\n            [106.6113, 35.0684],\n            [106.5234, 34.7607],\n            [106.3477, 34.585],\n            [106.6992, 34.3213],\n            [106.5234, 34.2773],\n            [106.6113, 34.1455],\n            [106.4355, 33.9258],\n            [106.5234, 33.5303],\n            [105.9961, 33.6182],\n            [105.7324, 33.3984],\n            [105.9961, 33.1787],\n            [105.9082, 33.0029],\n            [105.4688, 32.915],\n            [105.3809, 32.8711],\n            [105.3809, 32.7393],\n            [105.2051, 32.6074],\n            [104.4141, 32.7393],\n            [104.3262, 32.8711],\n            [104.4141, 33.0469],\n            [104.3262, 33.2227],\n            [104.4141, 33.3105],\n            [104.2383, 33.3984],\n            [104.1504, 33.6182],\n            [103.1836, 33.7939],\n            [103.0957, 34.1895],\n            [102.9199, 34.3213],\n            [102.2168, 33.9258],\n            [102.4805, 33.4424],\n            [101.8652, 33.0908],\n            [101.9531, 33.4424],\n            [101.8652, 33.5742],\n            [101.7773, 33.5303],\n            [101.6016, 33.5303],\n            [101.5137, 33.7061],\n            [101.25, 33.6621],\n            [100.8105, 34.2773],\n            [100.9863, 34.3652],\n            [101.6895, 34.1016],\n            [102.1289, 34.2773],\n            [102.2168, 34.4092],\n            [101.9531, 34.6289],\n            [101.9531, 34.8486],\n            [102.3926, 35.2002],\n            [102.3047, 35.4199],\n            [102.4805, 35.5957],\n            [102.832, 35.5957],\n            [102.6563, 35.7715],\n            [102.9199, 35.9033],\n            [102.9199, 36.0791],\n            [103.0078, 36.2549],\n            [102.832, 36.3428],\n            [102.5684, 36.7383],\n            [102.6563, 36.8262],\n            [102.4805, 36.958],\n            [102.5684, 37.1777],\n            [102.1289, 37.4414],\n            [101.9531, 37.7051],\n            [101.7773, 37.6172],\n            [101.5137, 37.8809],\n            [101.1621, 37.8369],\n            [100.7227, 38.2324],\n            [100.459, 38.2764],\n            [100.1074, 38.4961],\n            [100.0195, 38.4521],\n            [100.1953, 38.2764],\n            [99.8438, 38.3643],\n            [99.1406, 38.9355],\n            [98.7891, 39.0674],\n            [98.6133, 38.9355],\n            [98.3496, 39.0234],\n            [98.1738, 38.8037],\n            [97.0313, 39.1992],\n            [97.1191, 38.584],\n            [96.6797, 38.4521],\n            [96.6797, 38.1885],\n            [96.416, 38.2324],\n            [96.2402, 38.1006],\n            [95.7129, 38.3643],\n            [95.4492, 38.2764],\n            [95.0098, 38.4082],\n            [94.5703, 38.3643],\n            [94.3066, 38.7598],\n            [93.8672, 38.7158],\n            [93.6914, 38.9355],\n            [93.1641, 38.9795],\n            [93.1641, 39.1992],\n            [92.373, 39.1113],\n            [92.373, 39.3311],\n            [92.6367, 39.6387],\n            [93.0762, 40.6494],\n            [93.8672, 40.6934],\n            [94.043, 41.0889],\n            [94.5703, 41.4844],\n            [95.1855, 41.792],\n            [95.2734, 41.6162],\n            [95.9766, 41.9238],\n            [96.2402, 42.2314],\n            [96.0645, 42.3193],\n            [95.9766, 42.4951],\n            [96.416, 42.7148],\n          ],\n        ],\n      },\n    },\n    {\n      type: 'Feature',\n      properties: {\n        id: '53',\n        size: '1200',\n        name: '云南省',\n        cp: [101.0652, 25.1807],\n        childNum: 16,\n        color: MAIN_COLOR,\n      },\n      geometry: {\n        type: 'Polygon',\n        coordinates: [\n          [\n            [98.1738, 28.125],\n            [98.2617, 28.3887],\n            [98.3496, 28.125],\n            [98.7012, 28.2129],\n            [98.7891, 28.3447],\n            [98.6133, 28.5205],\n            [98.7012, 28.916],\n            [98.7891, 29.0039],\n            [98.7891, 28.8721],\n            [98.9648, 28.8281],\n            [98.9648, 29.1357],\n            [99.1406, 29.2676],\n            [99.2285, 28.3008],\n            [99.4043, 28.1689],\n            [99.4043, 28.5205],\n            [99.668, 28.8281],\n            [100.1953, 28.3447],\n            [100.0195, 28.125],\n            [100.2832, 27.7295],\n            [100.3711, 27.8174],\n            [100.7227, 27.8613],\n            [101.1621, 27.1582],\n            [101.1621, 27.0264],\n            [101.4258, 26.7188],\n            [101.4258, 26.8066],\n            [101.4258, 26.5869],\n            [101.6895, 26.3672],\n            [101.6016, 26.2354],\n            [101.8652, 26.0596],\n            [102.1289, 26.1035],\n            [102.5684, 26.3672],\n            [102.6563, 26.1914],\n            [103.0078, 26.3672],\n            [102.9199, 27.29],\n            [103.4473, 27.7734],\n            [103.4473, 28.125],\n            [103.7988, 28.3008],\n            [103.8867, 28.6523],\n            [104.4141, 28.6084],\n            [104.2383, 28.4326],\n            [104.4141, 28.2568],\n            [104.4141, 28.125],\n            [104.3262, 28.0371],\n            [104.4141, 27.9492],\n            [104.8535, 27.9053],\n            [105.0293, 28.0811],\n            [105.2051, 27.9932],\n            [105.293, 27.7295],\n            [105.2051, 27.3779],\n            [104.5898, 27.334],\n            [104.4141, 27.4658],\n            [104.1504, 27.2461],\n            [103.8867, 27.4219],\n            [103.623, 27.0264],\n            [103.7109, 26.9824],\n            [103.7109, 26.7627],\n            [103.8867, 26.543],\n            [104.4141, 26.6748],\n            [104.6777, 26.4111],\n            [104.3262, 25.708],\n            [104.8535, 25.2246],\n            [104.5898, 25.0488],\n            [104.6777, 24.9609],\n            [104.502, 24.7412],\n            [104.6777, 24.3457],\n            [104.7656, 24.4775],\n            [105.0293, 24.4336],\n            [105.2051, 24.082],\n            [105.4688, 24.0381],\n            [105.5566, 24.126],\n            [105.9961, 24.126],\n            [106.1719, 23.8184],\n            [106.1719, 23.5547],\n            [105.6445, 23.4229],\n            [105.5566, 23.2031],\n            [105.293, 23.3789],\n            [104.8535, 23.1592],\n            [104.7656, 22.8516],\n            [104.3262, 22.6758],\n            [104.1504, 22.8076],\n            [103.9746, 22.5439],\n            [103.623, 22.7637],\n            [103.5352, 22.5879],\n            [103.3594, 22.8076],\n            [103.0957, 22.4561],\n            [102.4805, 22.7637],\n            [102.3047, 22.4121],\n            [101.8652, 22.3682],\n            [101.7773, 22.5],\n            [101.6016, 22.1924],\n            [101.8652, 21.6211],\n            [101.7773, 21.1377],\n            [101.6016, 21.2256],\n            [101.25, 21.1816],\n            [101.1621, 21.7529],\n            [100.6348, 21.4453],\n            [100.1074, 21.4893],\n            [99.9316, 22.0605],\n            [99.2285, 22.1484],\n            [99.4043, 22.5879],\n            [99.3164, 22.7197],\n            [99.4922, 23.0713],\n            [98.877, 23.2031],\n            [98.7012, 23.9502],\n            [98.877, 24.126],\n            [98.1738, 24.082],\n            [97.7344, 23.8623],\n            [97.5586, 23.9063],\n            [97.7344, 24.126],\n            [97.6465, 24.4336],\n            [97.5586, 24.4336],\n            [97.5586, 24.7412],\n            [97.7344, 24.8291],\n            [97.8223, 25.2686],\n            [98.1738, 25.4004],\n            [98.1738, 25.6201],\n            [98.3496, 25.5762],\n            [98.5254, 25.8398],\n            [98.7012, 25.8838],\n            [98.6133, 26.0596],\n            [98.7012, 26.1475],\n            [98.7891, 26.5869],\n            [98.7012, 27.5098],\n            [98.5254, 27.6416],\n            [98.3496, 27.5098],\n            [98.1738, 28.125],\n          ],\n        ],\n      },\n    },\n    {\n      type: 'Feature',\n      properties: {\n        id: '45',\n        size: '1450',\n        name: '广西壮族自治区',\n        cp: [107.7813, 23.6426],\n        childNum: 14,\n        color: MAIN_COLOR,\n      },\n      geometry: {\n        type: 'Polygon',\n        coordinates: [\n          [\n            [104.502, 24.7412],\n            [104.6777, 24.6094],\n            [105.2051, 24.9609],\n            [105.9961, 24.6533],\n            [106.1719, 24.7852],\n            [106.1719, 24.9609],\n            [106.875, 25.1807],\n            [107.0508, 25.2686],\n            [106.9629, 25.4883],\n            [107.2266, 25.6201],\n            [107.4902, 25.2246],\n            [107.7539, 25.2246],\n            [107.8418, 25.1367],\n            [108.1055, 25.2246],\n            [108.1934, 25.4443],\n            [108.3691, 25.5322],\n            [108.6328, 25.3125],\n            [108.6328, 25.5762],\n            [109.0723, 25.5322],\n            [108.9844, 25.752],\n            [109.3359, 25.708],\n            [109.5117, 26.0156],\n            [109.7754, 25.8838],\n            [109.9512, 26.1914],\n            [110.2148, 25.9717],\n            [110.5664, 26.3232],\n            [111.1816, 26.3232],\n            [111.2695, 26.2354],\n            [111.2695, 25.8838],\n            [111.4453, 25.8398],\n            [111.0059, 25.0049],\n            [111.0938, 24.9609],\n            [111.3574, 25.1367],\n            [111.5332, 24.6533],\n            [111.709, 24.7852],\n            [112.0605, 24.7412],\n            [111.8848, 24.6533],\n            [112.0605, 24.3457],\n            [111.8848, 24.2139],\n            [111.8848, 23.9941],\n            [111.7969, 23.8184],\n            [111.6211, 23.8184],\n            [111.6211, 23.6865],\n            [111.3574, 23.4668],\n            [111.4453, 23.0273],\n            [111.2695, 22.8076],\n            [110.7422, 22.5439],\n            [110.7422, 22.2803],\n            [110.6543, 22.1484],\n            [110.3027, 22.1484],\n            [110.3027, 21.8848],\n            [109.9512, 21.8408],\n            [109.8633, 21.665],\n            [109.7754, 21.6211],\n            [109.7754, 21.4014],\n            [109.5996, 21.4453],\n            [109.1602, 21.3574],\n            [109.248, 20.874],\n            [109.0723, 20.9619],\n            [109.0723, 21.5332],\n            [108.7207, 21.5332],\n            [108.6328, 21.665],\n            [108.2813, 21.4893],\n            [107.8418, 21.6211],\n            [107.4023, 21.6211],\n            [107.0508, 21.7969],\n            [107.0508, 21.9287],\n            [106.6992, 22.0166],\n            [106.6113, 22.4121],\n            [106.7871, 22.7637],\n            [106.6992, 22.8955],\n            [105.9082, 22.9395],\n            [105.5566, 23.0713],\n            [105.5566, 23.2031],\n            [105.6445, 23.4229],\n            [106.1719, 23.5547],\n            [106.1719, 23.8184],\n            [105.9961, 24.126],\n            [105.5566, 24.126],\n            [105.4688, 24.0381],\n            [105.2051, 24.082],\n            [105.0293, 24.4336],\n            [104.7656, 24.4775],\n            [104.6777, 24.3457],\n            [104.502, 24.7412],\n          ],\n        ],\n      },\n    },\n    {\n      type: 'Feature',\n      properties: {\n        id: '43',\n        size: '1700',\n        name: '湖南省',\n        cp: [111.5332, 27.3779],\n        childNum: 14,\n        color: MAIN_COLOR,\n      },\n      geometry: {\n        type: 'Polygon',\n        coordinates: [\n          [\n            [109.248, 28.4766],\n            [109.248, 29.1357],\n            [109.5117, 29.6191],\n            [109.6875, 29.6191],\n            [109.7754, 29.751],\n            [110.4785, 29.6631],\n            [110.6543, 29.751],\n            [110.4785, 30.0146],\n            [110.8301, 30.1465],\n            [111.7969, 29.9268],\n            [112.2363, 29.5313],\n            [112.5, 29.6191],\n            [112.6758, 29.5752],\n            [112.9395, 29.7949],\n            [113.0273, 29.751],\n            [112.9395, 29.4873],\n            [113.0273, 29.4434],\n            [113.5547, 29.8389],\n            [113.5547, 29.707],\n            [113.7305, 29.5752],\n            [113.6426, 29.3115],\n            [113.7305, 29.0918],\n            [113.9063, 29.0479],\n            [114.1699, 28.8281],\n            [114.082, 28.5645],\n            [114.2578, 28.3447],\n            [113.7305, 27.9492],\n            [113.6426, 27.5977],\n            [113.6426, 27.3779],\n            [113.8184, 27.29],\n            [113.7305, 27.1143],\n            [113.9063, 26.9385],\n            [113.9063, 26.6309],\n            [114.082, 26.5869],\n            [113.9941, 26.1914],\n            [114.2578, 26.1475],\n            [113.9941, 26.0596],\n            [113.9063, 25.4443],\n            [113.6426, 25.3125],\n            [113.2031, 25.5322],\n            [112.8516, 25.3564],\n            [113.0273, 25.2246],\n            [113.0273, 24.9609],\n            [112.8516, 24.917],\n            [112.5879, 25.1367],\n            [112.2363, 25.1807],\n            [112.1484, 24.873],\n            [112.0605, 24.7412],\n            [111.709, 24.7852],\n            [111.5332, 24.6533],\n            [111.3574, 25.1367],\n            [111.0938, 24.9609],\n            [111.0059, 25.0049],\n            [111.4453, 25.8398],\n            [111.2695, 25.8838],\n            [111.2695, 26.2354],\n            [111.1816, 26.3232],\n            [110.5664, 26.3232],\n            [110.2148, 25.9717],\n            [109.9512, 26.1914],\n            [109.7754, 25.8838],\n            [109.5117, 26.0156],\n            [109.4238, 26.2793],\n            [109.248, 26.3232],\n            [109.4238, 26.5869],\n            [109.3359, 26.7188],\n            [109.5117, 26.8066],\n            [109.5117, 27.0264],\n            [109.3359, 27.1582],\n            [108.8965, 27.0264],\n            [108.8086, 27.1143],\n            [109.4238, 27.5977],\n            [109.3359, 27.9053],\n            [109.3359, 28.2568],\n            [109.248, 28.4766],\n          ],\n        ],\n      },\n    },\n    {\n      type: 'Feature',\n      properties: {\n        id: '61',\n        size: '1150',\n        name: '陕西省',\n        cp: [109.5996, 35.7396],\n        childNum: 10,\n        color: MAIN_COLOR,\n      },\n      geometry: {\n        type: 'Polygon',\n        coordinates: [\n          [\n            [105.4688, 32.915],\n            [105.9082, 33.0029],\n            [105.9961, 33.1787],\n            [105.7324, 33.3984],\n            [105.9961, 33.6182],\n            [106.5234, 33.5303],\n            [106.4355, 33.9258],\n            [106.6113, 34.1455],\n            [106.5234, 34.2773],\n            [106.6992, 34.3213],\n            [106.3477, 34.585],\n            [106.5234, 34.7607],\n            [106.6113, 35.0684],\n            [106.9629, 35.0684],\n            [107.2266, 34.8926],\n            [107.666, 34.9365],\n            [107.8418, 35.0244],\n            [107.7539, 35.1123],\n            [107.7539, 35.2881],\n            [108.5449, 35.2881],\n            [108.6328, 35.5518],\n            [108.5449, 35.8594],\n            [108.6328, 35.9912],\n            [108.7207, 36.3428],\n            [107.3145, 36.9141],\n            [107.3145, 37.0898],\n            [107.3145, 37.6172],\n            [107.666, 37.8809],\n            [108.1934, 37.6172],\n            [108.7207, 37.7051],\n            [108.8086, 38.0127],\n            [108.8965, 37.9688],\n            [109.0723, 38.0127],\n            [108.9844, 38.3203],\n            [109.9512, 39.1553],\n            [109.8633, 39.2432],\n            [110.2148, 39.2871],\n            [110.127, 39.4629],\n            [110.6543, 39.2871],\n            [111.0938, 39.5947],\n            [111.0938, 39.375],\n            [111.1816, 39.2432],\n            [110.918, 38.7158],\n            [110.8301, 38.4961],\n            [110.4785, 38.1885],\n            [110.4785, 37.9688],\n            [110.8301, 37.6611],\n            [110.3906, 37.002],\n            [110.4785, 36.123],\n            [110.5664, 35.6396],\n            [110.2148, 34.8926],\n            [110.2148, 34.6729],\n            [110.3906, 34.585],\n            [110.4785, 34.2334],\n            [110.6543, 34.1455],\n            [110.6543, 33.8379],\n            [111.0059, 33.5303],\n            [111.0059, 33.2666],\n            [110.7422, 33.1348],\n            [110.5664, 33.2666],\n            [110.3027, 33.1787],\n            [109.5996, 33.2666],\n            [109.4238, 33.1348],\n            [109.7754, 33.0469],\n            [109.7754, 32.915],\n            [110.127, 32.7393],\n            [110.127, 32.6074],\n            [109.6875, 32.6074],\n            [109.5117, 32.4316],\n            [109.5996, 31.7285],\n            [109.248, 31.7285],\n            [109.0723, 31.9482],\n            [108.5449, 32.2119],\n            [108.2813, 32.2559],\n            [108.0176, 32.168],\n            [107.4023, 32.5195],\n            [107.2266, 32.4316],\n            [107.1387, 32.4756],\n            [107.0508, 32.6953],\n            [106.3477, 32.6514],\n            [106.084, 32.7393],\n            [106.084, 32.8711],\n            [105.5566, 32.7393],\n            [105.4688, 32.915],\n          ],\n        ],\n      },\n    },\n    {\n      type: 'Feature',\n      properties: {\n        id: '44',\n        size: '1600',\n        name: '广东省',\n        cp: [113.4668, 22.8076],\n        childNum: 21,\n        color: MAIN_COLOR,\n      },\n      geometry: {\n        type: 'Polygon',\n        coordinates: [\n          [\n            [109.7754, 21.4014],\n            [109.7754, 21.6211],\n            [109.8633, 21.665],\n            [109.9512, 21.8408],\n            [110.3027, 21.8848],\n            [110.3027, 22.1484],\n            [110.6543, 22.1484],\n            [110.7422, 22.2803],\n            [110.7422, 22.5439],\n            [111.2695, 22.8076],\n            [111.4453, 23.0273],\n            [111.3574, 23.4668],\n            [111.6211, 23.6865],\n            [111.6211, 23.8184],\n            [111.7969, 23.8184],\n            [111.8848, 23.9941],\n            [111.8848, 24.2139],\n            [112.0605, 24.3457],\n            [111.8848, 24.6533],\n            [112.0605, 24.7412],\n            [112.1484, 24.873],\n            [112.2363, 25.1807],\n            [112.5879, 25.1367],\n            [112.8516, 24.917],\n            [113.0273, 24.9609],\n            [113.0273, 25.2246],\n            [112.8516, 25.3564],\n            [113.2031, 25.5322],\n            [113.6426, 25.3125],\n            [113.9063, 25.4443],\n            [113.9941, 25.2686],\n            [114.6094, 25.4004],\n            [114.7852, 25.2686],\n            [114.6973, 25.1367],\n            [114.4336, 24.9609],\n            [114.1699, 24.6973],\n            [114.4336, 24.5215],\n            [115.4004, 24.7852],\n            [115.8398, 24.5654],\n            [115.752, 24.7852],\n            [115.9277, 24.917],\n            [116.2793, 24.7852],\n            [116.3672, 24.873],\n            [116.543, 24.6094],\n            [116.7188, 24.6533],\n            [116.9824, 24.1699],\n            [116.9824, 23.9063],\n            [117.1582, 23.5547],\n            [117.334, 23.2471],\n            [116.8945, 23.3789],\n            [116.6309, 23.1152],\n            [116.543, 22.8516],\n            [115.9277, 22.7197],\n            [115.6641, 22.7637],\n            [115.5762, 22.6318],\n            [115.0488, 22.6758],\n            [114.6094, 22.3682],\n            [114.3457, 22.5439],\n            [113.9941, 22.5],\n            [113.8184, 22.1924],\n            [114.3457, 22.1484],\n            [114.4336, 22.0166],\n            [114.082, 21.9287],\n            [113.9941, 21.7969],\n            [113.5547, 22.0166],\n            [113.1152, 21.8408],\n            [112.9395, 21.5771],\n            [112.4121, 21.4453],\n            [112.2363, 21.5332],\n            [111.5332, 21.4893],\n            [111.2695, 21.3574],\n            [110.7422, 21.3574],\n            [110.6543, 21.2256],\n            [110.7422, 20.918],\n            [110.4785, 20.874],\n            [110.6543, 20.2588],\n            [110.5664, 20.2588],\n            [110.3906, 20.127],\n            [110.0391, 20.127],\n            [109.8633, 20.127],\n            [109.8633, 20.3027],\n            [109.5996, 20.918],\n            [109.7754, 21.4014],\n            [109.7754, 21.4014],\n          ],\n          [\n            [113.5986, 22.1649],\n            [113.6096, 22.1265],\n            [113.5547, 22.11],\n            [113.5437, 22.2034],\n            [113.5767, 22.2034],\n            [113.5986, 22.1649],\n          ],\n        ],\n      },\n    },\n    {\n      type: 'Feature',\n      properties: {\n        id: '22',\n        size: '1120',\n        name: '吉林省',\n        cp: [125.7746, 43.5938],\n        childNum: 9,\n        color: MAIN_COLOR,\n      },\n      geometry: {\n        type: 'Polygon',\n        coordinates: [\n          [\n            [123.2227, 46.2305],\n            [123.9258, 46.2305],\n            [124.0137, 45.7471],\n            [124.3652, 45.4395],\n            [124.8926, 45.5273],\n            [125.0684, 45.3955],\n            [125.6836, 45.5273],\n            [125.7715, 45.3076],\n            [126.0352, 45.1758],\n            [126.5625, 45.2637],\n            [126.9141, 45.1318],\n            [127.0898, 45],\n            [127.002, 44.7803],\n            [127.0898, 44.6045],\n            [127.5293, 44.6045],\n            [127.7051, 44.1211],\n            [128.0566, 44.1211],\n            [128.0566, 44.3408],\n            [128.4082, 44.4727],\n            [128.4961, 44.165],\n            [128.8477, 43.5498],\n            [129.1992, 43.5938],\n            [129.2871, 43.8135],\n            [129.8145, 43.9014],\n            [129.9023, 44.0332],\n            [129.9902, 43.8574],\n            [130.3418, 43.9893],\n            [130.5176, 43.6377],\n            [130.8691, 43.418],\n            [131.3086, 43.4619],\n            [131.3086, 43.3301],\n            [131.1328, 42.9346],\n            [130.4297, 42.7148],\n            [130.6055, 42.6709],\n            [130.6055, 42.4512],\n            [130.2539, 42.7588],\n            [130.2539, 42.8906],\n            [130.166, 42.9785],\n            [129.9023, 43.0225],\n            [129.7266, 42.4951],\n            [129.375, 42.4512],\n            [128.9355, 42.0117],\n            [128.0566, 42.0117],\n            [128.3203, 41.5723],\n            [128.1445, 41.3525],\n            [127.0898, 41.5283],\n            [127.1777, 41.5723],\n            [126.9141, 41.792],\n            [126.6504, 41.6602],\n            [126.4746, 41.3965],\n            [126.123, 40.957],\n            [125.6836, 40.8691],\n            [125.5957, 40.9131],\n            [125.7715, 41.2207],\n            [125.332, 41.6602],\n            [125.332, 41.9678],\n            [125.4199, 42.0996],\n            [125.332, 42.1436],\n            [124.8926, 42.8027],\n            [124.8926, 43.0664],\n            [124.7168, 43.0664],\n            [124.4531, 42.8467],\n            [124.2773, 43.2422],\n            [123.8379, 43.4619],\n            [123.6621, 43.374],\n            [123.3105, 43.5059],\n            [123.4863, 43.7256],\n            [123.1348, 44.4727],\n            [122.3438, 44.2529],\n            [122.0801, 44.8682],\n            [122.2559, 45.2637],\n            [121.9043, 45.7031],\n            [121.7285, 45.7471],\n            [121.8164, 46.0107],\n            [122.2559, 45.791],\n            [122.4316, 45.8789],\n            [122.6953, 45.7031],\n            [122.7832, 46.0107],\n            [123.2227, 46.2305],\n          ],\n        ],\n      },\n    },\n    {\n      type: 'Feature',\n      properties: {\n        id: '13',\n        size: '1300',\n        name: '河北省',\n        cp: [115.4004, 39.4688],\n        childNum: 11,\n        color: MAIN_COLOR,\n      },\n      geometry: {\n        type: 'MultiPolygon',\n        coordinates: [\n          [\n            [\n              [114.5215, 39.5068],\n              [114.3457, 39.8584],\n              [113.9941, 39.9902],\n              [114.5215, 40.3418],\n              [114.3457, 40.3857],\n              [114.2578, 40.6055],\n              [114.082, 40.7373],\n              [113.9063, 41.1328],\n              [113.9941, 41.2207],\n              [113.9063, 41.4404],\n              [114.2578, 41.5723],\n              [114.1699, 41.792],\n              [114.5215, 42.1436],\n              [114.873, 42.0996],\n              [114.9609, 41.6162],\n              [115.2246, 41.5723],\n              [115.9277, 41.9238],\n              [116.0156, 41.792],\n              [116.2793, 42.0117],\n              [116.8066, 42.0117],\n              [116.8945, 42.4072],\n              [117.334, 42.4512],\n              [117.5098, 42.583],\n              [117.7734, 42.627],\n              [118.0371, 42.4072],\n              [117.9492, 42.2314],\n              [118.125, 42.0557],\n              [118.3008, 42.0996],\n              [118.3008, 41.792],\n              [118.125, 41.748],\n              [118.3887, 41.3086],\n              [119.2676, 41.3086],\n              [118.8281, 40.8252],\n              [119.2676, 40.5176],\n              [119.5313, 40.5615],\n              [119.707, 40.1221],\n              [119.8828, 39.9463],\n              [119.5313, 39.6826],\n              [119.4434, 39.4189],\n              [118.916, 39.0674],\n              [118.4766, 38.9355],\n              [118.125, 39.0234],\n              [118.0371, 39.1992],\n              [118.0371, 39.2432],\n              [117.8613, 39.4189],\n              [117.9492, 39.5947],\n              [117.6855, 39.5947],\n              [117.5098, 39.7705],\n              [117.5098, 39.9902],\n              [117.6855, 39.9902],\n              [117.6855, 40.0781],\n              [117.4219, 40.21],\n              [117.2461, 40.5176],\n              [117.4219, 40.6494],\n              [116.9824, 40.6934],\n              [116.6309, 41.0449],\n              [116.3672, 40.9131],\n              [116.4551, 40.7813],\n              [116.1914, 40.7813],\n              [116.1035, 40.6055],\n              [115.752, 40.5615],\n              [115.9277, 40.2539],\n              [115.4004, 39.9463],\n              [115.4883, 39.6387],\n              [115.752, 39.5068],\n              [116.1914, 39.5947],\n              [116.3672, 39.4629],\n              [116.543, 39.5947],\n              [116.8066, 39.5947],\n              [116.8945, 39.1113],\n              [116.7188, 38.9355],\n              [116.7188, 38.8037],\n              [117.2461, 38.54],\n              [117.5977, 38.6279],\n              [117.9492, 38.3203],\n              [117.4219, 37.8369],\n              [116.8066, 37.8369],\n              [116.4551, 37.4854],\n              [116.2793, 37.5732],\n              [116.2793, 37.3535],\n              [116.0156, 37.3535],\n              [115.752, 36.9141],\n              [115.3125, 36.5186],\n              [115.4883, 36.167],\n              [115.3125, 36.0791],\n              [115.1367, 36.2109],\n              [114.9609, 36.0791],\n              [114.873, 36.123],\n              [113.7305, 36.3428],\n              [113.4668, 36.6504],\n              [113.7305, 36.8701],\n              [113.7305, 37.1338],\n              [114.1699, 37.6611],\n              [113.9941, 37.7051],\n              [113.8184, 38.1445],\n              [113.5547, 38.2764],\n              [113.5547, 38.54],\n              [113.8184, 38.8037],\n              [113.8184, 38.9355],\n              [113.9063, 39.0234],\n              [114.3457, 39.0674],\n              [114.5215, 39.5068],\n            ],\n          ],\n          [\n            [\n              [117.2461, 40.0781],\n              [117.1582, 39.8145],\n              [117.1582, 39.6387],\n              [116.8945, 39.6826],\n              [116.8945, 39.8145],\n              [116.8066, 39.9902],\n              [117.2461, 40.0781],\n            ],\n          ],\n        ],\n      },\n    },\n    {\n      type: 'Feature',\n      properties: {\n        id: '42',\n        size: '1500',\n        name: '湖北省',\n        cp: [112.2363, 31.1572],\n        childNum: 17,\n        color: MAIN_COLOR,\n      },\n      geometry: {\n        type: 'Polygon',\n        coordinates: [\n          [\n            [110.2148, 31.1572],\n            [110.127, 31.377],\n            [109.6875, 31.5527],\n            [109.7754, 31.6846],\n            [109.5996, 31.7285],\n            [109.5117, 32.4316],\n            [109.6875, 32.6074],\n            [110.127, 32.6074],\n            [110.127, 32.7393],\n            [109.7754, 32.915],\n            [109.7754, 33.0469],\n            [109.4238, 33.1348],\n            [109.5996, 33.2666],\n            [110.3027, 33.1787],\n            [110.5664, 33.2666],\n            [110.7422, 33.1348],\n            [111.0059, 33.2666],\n            [111.5332, 32.6074],\n            [112.3242, 32.3438],\n            [113.2031, 32.4316],\n            [113.4668, 32.2998],\n            [113.7305, 32.4316],\n            [113.8184, 31.8604],\n            [113.9941, 31.7725],\n            [114.1699, 31.8604],\n            [114.5215, 31.7725],\n            [114.6094, 31.5527],\n            [114.7852, 31.4648],\n            [115.1367, 31.5967],\n            [115.2246, 31.4209],\n            [115.4004, 31.4209],\n            [115.5762, 31.2012],\n            [116.0156, 31.0254],\n            [115.752, 30.6738],\n            [116.1035, 30.1904],\n            [116.1035, 29.8389],\n            [115.9277, 29.707],\n            [115.4883, 29.7949],\n            [114.873, 29.3994],\n            [114.2578, 29.3555],\n            [113.9063, 29.0479],\n            [113.7305, 29.0918],\n            [113.6426, 29.3115],\n            [113.7305, 29.5752],\n            [113.5547, 29.707],\n            [113.5547, 29.8389],\n            [113.0273, 29.4434],\n            [112.9395, 29.4873],\n            [113.0273, 29.751],\n            [112.9395, 29.7949],\n            [112.6758, 29.5752],\n            [112.5, 29.6191],\n            [112.2363, 29.5313],\n            [111.7969, 29.9268],\n            [110.8301, 30.1465],\n            [110.4785, 30.0146],\n            [110.6543, 29.751],\n            [110.4785, 29.6631],\n            [109.7754, 29.751],\n            [109.6875, 29.6191],\n            [109.5117, 29.6191],\n            [109.248, 29.1357],\n            [109.0723, 29.3555],\n            [108.9844, 29.3115],\n            [108.6328, 29.8389],\n            [108.457, 29.7949],\n            [108.5449, 30.2344],\n            [108.457, 30.4102],\n            [108.6328, 30.5859],\n            [108.8086, 30.498],\n            [109.0723, 30.6299],\n            [109.1602, 30.542],\n            [109.248, 30.6299],\n            [109.4238, 30.542],\n            [109.8633, 30.8936],\n            [110.0391, 30.8057],\n            [110.2148, 31.1572],\n          ],\n        ],\n      },\n    },\n    {\n      type: 'Feature',\n      properties: {\n        id: '52',\n        size: '2000',\n        name: '贵州省',\n        cp: [106.6113, 26.9385],\n        childNum: 9,\n        color: MAIN_COLOR,\n      },\n      geometry: {\n        type: 'Polygon',\n        coordinates: [\n          [\n            [104.1504, 27.2461],\n            [104.4141, 27.4658],\n            [104.5898, 27.334],\n            [105.2051, 27.3779],\n            [105.293, 27.7295],\n            [105.5566, 27.7734],\n            [105.6445, 27.6416],\n            [106.3477, 27.8174],\n            [106.1719, 28.125],\n            [105.9082, 28.125],\n            [105.6445, 28.4326],\n            [105.9961, 28.7402],\n            [106.3477, 28.5205],\n            [106.5234, 28.5645],\n            [106.4355, 28.7842],\n            [106.5234, 28.7842],\n            [106.6113, 28.6523],\n            [106.6113, 28.5205],\n            [106.6992, 28.4766],\n            [106.875, 28.7842],\n            [107.4023, 28.8721],\n            [107.4023, 29.1797],\n            [107.5781, 29.2236],\n            [107.8418, 29.1357],\n            [107.8418, 29.0039],\n            [108.2813, 29.0918],\n            [108.3691, 28.6523],\n            [108.5449, 28.6523],\n            [108.5449, 28.3887],\n            [108.7207, 28.4766],\n            [108.7207, 28.2129],\n            [109.0723, 28.2129],\n            [109.248, 28.4766],\n            [109.3359, 28.2568],\n            [109.3359, 27.9053],\n            [109.4238, 27.5977],\n            [108.8086, 27.1143],\n            [108.8965, 27.0264],\n            [109.3359, 27.1582],\n            [109.5117, 27.0264],\n            [109.5117, 26.8066],\n            [109.3359, 26.7188],\n            [109.4238, 26.5869],\n            [109.248, 26.3232],\n            [109.4238, 26.2793],\n            [109.5117, 26.0156],\n            [109.3359, 25.708],\n            [108.9844, 25.752],\n            [109.0723, 25.5322],\n            [108.6328, 25.5762],\n            [108.6328, 25.3125],\n            [108.3691, 25.5322],\n            [108.1934, 25.4443],\n            [108.1055, 25.2246],\n            [107.8418, 25.1367],\n            [107.7539, 25.2246],\n            [107.4902, 25.2246],\n            [107.2266, 25.6201],\n            [106.9629, 25.4883],\n            [107.0508, 25.2686],\n            [106.875, 25.1807],\n            [106.1719, 24.9609],\n            [106.1719, 24.7852],\n            [105.9961, 24.6533],\n            [105.2051, 24.9609],\n            [104.6777, 24.6094],\n            [104.502, 24.7412],\n            [104.6777, 24.9609],\n            [104.5898, 25.0488],\n            [104.8535, 25.2246],\n            [104.3262, 25.708],\n            [104.6777, 26.4111],\n            [104.4141, 26.6748],\n            [103.8867, 26.543],\n            [103.7109, 26.7627],\n            [103.7109, 26.9824],\n            [103.623, 27.0264],\n            [103.8867, 27.4219],\n            [104.1504, 27.2461],\n          ],\n        ],\n      },\n    },\n    {\n      type: 'Feature',\n      properties: {\n        id: '37',\n        size: '1500',\n        name: '山东省',\n        cp: [118.7402, 36.4307],\n        childNum: 17,\n        color: MAIN_COLOR,\n      },\n      geometry: {\n        type: 'Polygon',\n        coordinates: [\n          [\n            [115.4883, 36.167],\n            [115.3125, 36.5186],\n            [115.752, 36.9141],\n            [116.0156, 37.3535],\n            [116.2793, 37.3535],\n            [116.2793, 37.5732],\n            [116.4551, 37.4854],\n            [116.8066, 37.8369],\n            [117.4219, 37.8369],\n            [117.9492, 38.3203],\n            [118.125, 38.1445],\n            [118.916, 38.1445],\n            [119.3555, 37.6611],\n            [119.0039, 37.5293],\n            [119.0039, 37.3535],\n            [119.3555, 37.1338],\n            [119.707, 37.1338],\n            [119.8828, 37.3975],\n            [120.498, 37.8369],\n            [120.5859, 38.1445],\n            [120.9375, 38.4521],\n            [121.0254, 37.8369],\n            [121.2012, 37.6611],\n            [121.9043, 37.4854],\n            [122.168, 37.6172],\n            [122.2559, 37.4854],\n            [122.6074, 37.4854],\n            [122.6953, 37.3535],\n            [122.6074, 36.9141],\n            [122.4316, 36.7822],\n            [121.8164, 36.8701],\n            [121.7285, 36.6943],\n            [121.1133, 36.6064],\n            [121.1133, 36.4307],\n            [121.377, 36.2549],\n            [120.7617, 36.167],\n            [120.9375, 35.8594],\n            [120.6738, 36.0352],\n            [119.707, 35.4639],\n            [119.9707, 34.9805],\n            [119.3555, 35.0244],\n            [119.2676, 35.1123],\n            [118.916, 35.0244],\n            [118.7402, 34.7168],\n            [118.4766, 34.6729],\n            [118.3887, 34.4092],\n            [118.2129, 34.4092],\n            [118.125, 34.6289],\n            [117.9492, 34.6729],\n            [117.5977, 34.4531],\n            [117.334, 34.585],\n            [117.2461, 34.4531],\n            [116.8066, 34.9365],\n            [116.4551, 34.8926],\n            [116.3672, 34.6289],\n            [116.1914, 34.585],\n            [115.5762, 34.585],\n            [115.4004, 34.8486],\n            [114.7852, 35.0684],\n            [115.0488, 35.376],\n            [115.2246, 35.4199],\n            [115.4883, 35.7275],\n            [116.1035, 36.0791],\n            [115.3125, 35.8154],\n            [115.4883, 36.167],\n          ],\n        ],\n      },\n    },\n    {\n      type: 'Feature',\n      properties: {\n        id: '36',\n        size: '1700',\n        name: '江西省',\n        cp: [116.0156, 27.29],\n        childNum: 11,\n        color: MAIN_COLOR,\n      },\n      geometry: {\n        type: 'Polygon',\n        coordinates: [\n          [\n            [114.2578, 28.3447],\n            [114.082, 28.5645],\n            [114.1699, 28.8281],\n            [113.9063, 29.0479],\n            [114.2578, 29.3555],\n            [114.873, 29.3994],\n            [115.4883, 29.7949],\n            [115.9277, 29.707],\n            [116.1035, 29.8389],\n            [116.2793, 29.7949],\n            [116.7188, 30.0586],\n            [116.8945, 29.9268],\n            [116.7188, 29.751],\n            [116.7188, 29.6191],\n            [117.1582, 29.707],\n            [117.0703, 29.8389],\n            [117.1582, 29.9268],\n            [117.5098, 29.6191],\n            [118.0371, 29.5752],\n            [118.2129, 29.3994],\n            [118.0371, 29.1797],\n            [118.0371, 29.0479],\n            [118.3887, 28.7842],\n            [118.4766, 28.3447],\n            [118.4766, 28.3008],\n            [118.3008, 28.0811],\n            [117.7734, 27.8174],\n            [117.5098, 27.9932],\n            [116.9824, 27.6416],\n            [117.1582, 27.29],\n            [117.0703, 27.1143],\n            [116.543, 26.8066],\n            [116.6309, 26.4551],\n            [116.3672, 26.2354],\n            [116.4551, 26.1035],\n            [116.1914, 25.8838],\n            [116.0156, 25.2686],\n            [115.8398, 25.2246],\n            [115.9277, 24.917],\n            [115.752, 24.7852],\n            [115.8398, 24.5654],\n            [115.4004, 24.7852],\n            [114.4336, 24.5215],\n            [114.1699, 24.6973],\n            [114.4336, 24.9609],\n            [114.6973, 25.1367],\n            [114.7852, 25.2686],\n            [114.6094, 25.4004],\n            [113.9941, 25.2686],\n            [113.9063, 25.4443],\n            [113.9941, 26.0596],\n            [114.2578, 26.1475],\n            [113.9941, 26.1914],\n            [114.082, 26.5869],\n            [113.9063, 26.6309],\n            [113.9063, 26.9385],\n            [113.7305, 27.1143],\n            [113.8184, 27.29],\n            [113.6426, 27.3779],\n            [113.6426, 27.5977],\n            [113.7305, 27.9492],\n            [114.2578, 28.3447],\n          ],\n        ],\n      },\n    },\n    {\n      type: 'Feature',\n      properties: {\n        id: '41',\n        size: '1700',\n        name: '河南省',\n        cp: [113.0668, 33.8818],\n        childNum: 17,\n        color: MAIN_COLOR,\n      },\n      geometry: {\n        type: 'Polygon',\n        coordinates: [\n          [\n            [110.3906, 34.585],\n            [110.8301, 34.6289],\n            [111.1816, 34.8047],\n            [111.5332, 34.8486],\n            [111.7969, 35.0684],\n            [112.0605, 35.0684],\n            [112.0605, 35.2881],\n            [112.7637, 35.2002],\n            [113.1152, 35.332],\n            [113.6426, 35.6836],\n            [113.7305, 36.3428],\n            [114.873, 36.123],\n            [114.9609, 36.0791],\n            [115.1367, 36.2109],\n            [115.3125, 36.0791],\n            [115.4883, 36.167],\n            [115.3125, 35.8154],\n            [116.1035, 36.0791],\n            [115.4883, 35.7275],\n            [115.2246, 35.4199],\n            [115.0488, 35.376],\n            [114.7852, 35.0684],\n            [115.4004, 34.8486],\n            [115.5762, 34.585],\n            [116.1914, 34.585],\n            [116.1914, 34.4092],\n            [116.543, 34.2773],\n            [116.6309, 33.9258],\n            [116.1914, 33.7061],\n            [116.0156, 33.9697],\n            [115.6641, 34.0576],\n            [115.5762, 33.9258],\n            [115.5762, 33.6621],\n            [115.4004, 33.5303],\n            [115.3125, 33.1787],\n            [114.873, 33.1348],\n            [114.873, 33.0029],\n            [115.1367, 32.8711],\n            [115.2246, 32.6074],\n            [115.5762, 32.4316],\n            [115.8398, 32.5195],\n            [115.9277, 31.7725],\n            [115.4883, 31.6846],\n            [115.4004, 31.4209],\n            [115.2246, 31.4209],\n            [115.1367, 31.5967],\n            [114.7852, 31.4648],\n            [114.6094, 31.5527],\n            [114.5215, 31.7725],\n            [114.1699, 31.8604],\n            [113.9941, 31.7725],\n            [113.8184, 31.8604],\n            [113.7305, 32.4316],\n            [113.4668, 32.2998],\n            [113.2031, 32.4316],\n            [112.3242, 32.3438],\n            [111.5332, 32.6074],\n            [111.0059, 33.2666],\n            [111.0059, 33.5303],\n            [110.6543, 33.8379],\n            [110.6543, 34.1455],\n            [110.4785, 34.2334],\n            [110.3906, 34.585],\n          ],\n        ],\n      },\n    },\n    {\n      type: 'Feature',\n      properties: {\n        id: '21',\n        size: '1500',\n        name: '辽宁省',\n        cp: [122.0438, 41.0889],\n        childNum: 14,\n        color: MAIN_COLOR,\n      },\n      geometry: {\n        type: 'Polygon',\n        coordinates: [\n          [\n            [119.2676, 41.3086],\n            [119.4434, 41.6162],\n            [119.2676, 41.7041],\n            [119.3555, 42.2754],\n            [119.5313, 42.3633],\n            [119.8828, 42.1875],\n            [120.1465, 41.7041],\n            [120.498, 42.0996],\n            [121.4648, 42.4951],\n            [121.7285, 42.4512],\n            [121.9922, 42.7148],\n            [122.3438, 42.6709],\n            [122.3438, 42.8467],\n            [122.7832, 42.7148],\n            [123.1348, 42.8027],\n            [123.3105, 42.9785],\n            [123.5742, 43.0225],\n            [123.6621, 43.374],\n            [123.8379, 43.4619],\n            [124.2773, 43.2422],\n            [124.4531, 42.8467],\n            [124.7168, 43.0664],\n            [124.8926, 43.0664],\n            [124.8926, 42.8027],\n            [125.332, 42.1436],\n            [125.4199, 42.0996],\n            [125.332, 41.9678],\n            [125.332, 41.6602],\n            [125.7715, 41.2207],\n            [125.5957, 40.9131],\n            [125.6836, 40.8691],\n            [124.541, 40.21],\n            [124.1016, 39.6826],\n            [123.3984, 39.6826],\n            [123.1348, 39.4189],\n            [123.1348, 39.0234],\n            [122.0801, 39.0234],\n            [121.5527, 38.7158],\n            [121.1133, 38.6719],\n            [120.9375, 38.9795],\n            [121.377, 39.1992],\n            [121.2012, 39.5508],\n            [122.0801, 40.3857],\n            [121.9922, 40.6934],\n            [121.7285, 40.8252],\n            [121.2012, 40.8252],\n            [120.5859, 40.21],\n            [119.8828, 39.9463],\n            [119.707, 40.1221],\n            [119.5313, 40.5615],\n            [119.2676, 40.5176],\n            [118.8281, 40.8252],\n            [119.2676, 41.3086],\n          ],\n        ],\n      },\n    },\n    {\n      type: 'Feature',\n      properties: {\n        id: '14',\n        size: '1450',\n        name: '山西省',\n        cp: [112.4121, 37.6611],\n        childNum: 11,\n        color: MAIN_COLOR,\n      },\n      geometry: {\n        type: 'Polygon',\n        coordinates: [\n          [\n            [110.918, 38.7158],\n            [111.1816, 39.2432],\n            [111.0938, 39.375],\n            [111.3574, 39.4189],\n            [111.4453, 39.6387],\n            [111.9727, 39.5947],\n            [112.3242, 40.2539],\n            [112.7637, 40.166],\n            [113.2031, 40.3857],\n            [113.5547, 40.3418],\n            [113.8184, 40.5176],\n            [114.082, 40.5176],\n            [114.082, 40.7373],\n            [114.2578, 40.6055],\n            [114.3457, 40.3857],\n            [114.5215, 40.3418],\n            [113.9941, 39.9902],\n            [114.3457, 39.8584],\n            [114.5215, 39.5068],\n            [114.3457, 39.0674],\n            [113.9063, 39.0234],\n            [113.8184, 38.9355],\n            [113.8184, 38.8037],\n            [113.5547, 38.54],\n            [113.5547, 38.2764],\n            [113.8184, 38.1445],\n            [113.9941, 37.7051],\n            [114.1699, 37.6611],\n            [113.7305, 37.1338],\n            [113.7305, 36.8701],\n            [113.4668, 36.6504],\n            [113.7305, 36.3428],\n            [113.6426, 35.6836],\n            [113.1152, 35.332],\n            [112.7637, 35.2002],\n            [112.0605, 35.2881],\n            [112.0605, 35.0684],\n            [111.7969, 35.0684],\n            [111.5332, 34.8486],\n            [111.1816, 34.8047],\n            [110.8301, 34.6289],\n            [110.3906, 34.585],\n            [110.2148, 34.6729],\n            [110.2148, 34.8926],\n            [110.5664, 35.6396],\n            [110.4785, 36.123],\n            [110.3906, 37.002],\n            [110.8301, 37.6611],\n            [110.4785, 37.9688],\n            [110.4785, 38.1885],\n            [110.8301, 38.4961],\n            [110.918, 38.7158],\n          ],\n        ],\n      },\n    },\n    {\n      type: 'Feature',\n      properties: {\n        id: '34',\n        size: '1700',\n        name: '安徽省',\n        cp: [117.2461, 32.0361],\n        childNum: 17,\n        color: MAIN_COLOR,\n      },\n      geometry: {\n        type: 'Polygon',\n        coordinates: [\n          [\n            [116.6309, 33.9258],\n            [116.543, 34.2773],\n            [116.1914, 34.4092],\n            [116.1914, 34.585],\n            [116.3672, 34.6289],\n            [116.8945, 34.4092],\n            [117.1582, 34.0576],\n            [117.5977, 34.0137],\n            [117.7734, 33.7061],\n            [118.125, 33.75],\n            [117.9492, 33.2227],\n            [118.0371, 33.1348],\n            [118.2129, 33.2227],\n            [118.3008, 32.7832],\n            [118.7402, 32.7393],\n            [118.916, 32.959],\n            [119.1797, 32.8271],\n            [119.1797, 32.4756],\n            [118.5645, 32.5635],\n            [118.6523, 32.2119],\n            [118.4766, 32.168],\n            [118.3887, 31.9482],\n            [118.916, 31.5527],\n            [118.7402, 31.377],\n            [118.8281, 31.2451],\n            [119.3555, 31.2891],\n            [119.4434, 31.1572],\n            [119.6191, 31.1133],\n            [119.6191, 31.0693],\n            [119.4434, 30.6738],\n            [119.2676, 30.6299],\n            [119.3555, 30.4102],\n            [118.916, 30.3223],\n            [118.916, 29.9707],\n            [118.7402, 29.707],\n            [118.2129, 29.3994],\n            [118.0371, 29.5752],\n            [117.5098, 29.6191],\n            [117.1582, 29.9268],\n            [117.0703, 29.8389],\n            [117.1582, 29.707],\n            [116.7188, 29.6191],\n            [116.7188, 29.751],\n            [116.8945, 29.9268],\n            [116.7188, 30.0586],\n            [116.2793, 29.7949],\n            [116.1035, 29.8389],\n            [116.1035, 30.1904],\n            [115.752, 30.6738],\n            [116.0156, 31.0254],\n            [115.5762, 31.2012],\n            [115.4004, 31.4209],\n            [115.4883, 31.6846],\n            [115.9277, 31.7725],\n            [115.8398, 32.5195],\n            [115.5762, 32.4316],\n            [115.2246, 32.6074],\n            [115.1367, 32.8711],\n            [114.873, 33.0029],\n            [114.873, 33.1348],\n            [115.3125, 33.1787],\n            [115.4004, 33.5303],\n            [115.5762, 33.6621],\n            [115.5762, 33.9258],\n            [115.6641, 34.0576],\n            [116.0156, 33.9697],\n            [116.1914, 33.7061],\n            [116.6309, 33.9258],\n          ],\n        ],\n      },\n    },\n    {\n      type: 'Feature',\n      properties: {\n        id: '35',\n        size: '2000',\n        name: '福建省',\n        cp: [118.3008, 25.9277],\n        childNum: 9,\n        color: MAIN_COLOR,\n      },\n      geometry: {\n        type: 'Polygon',\n        coordinates: [\n          [\n            [118.4766, 28.3008],\n            [118.8281, 28.2568],\n            [118.7402, 28.0371],\n            [118.916, 27.4658],\n            [119.2676, 27.4219],\n            [119.6191, 27.6855],\n            [119.7949, 27.29],\n            [120.2344, 27.4219],\n            [120.4102, 27.1582],\n            [120.7617, 27.0264],\n            [120.6738, 26.8945],\n            [120.2344, 26.8506],\n            [120.2344, 26.7188],\n            [120.4102, 26.6748],\n            [120.498, 26.3672],\n            [120.2344, 26.2793],\n            [120.4102, 26.1475],\n            [120.0586, 26.1914],\n            [119.9707, 25.9277],\n            [119.7949, 25.9277],\n            [119.9707, 25.4004],\n            [119.7949, 25.2686],\n            [119.5313, 25.1367],\n            [119.4434, 25.0049],\n            [119.2676, 25.0928],\n            [118.916, 24.8291],\n            [118.6523, 24.5215],\n            [118.4766, 24.5215],\n            [118.4766, 24.4336],\n            [118.2129, 24.3457],\n            [118.2129, 24.1699],\n            [117.8613, 23.9941],\n            [117.7734, 23.7744],\n            [117.5098, 23.5986],\n            [117.1582, 23.5547],\n            [116.9824, 23.9063],\n            [116.9824, 24.1699],\n            [116.7188, 24.6533],\n            [116.543, 24.6094],\n            [116.3672, 24.873],\n            [116.2793, 24.7852],\n            [115.9277, 24.917],\n            [115.8398, 25.2246],\n            [116.0156, 25.2686],\n            [116.1914, 25.8838],\n            [116.4551, 26.1035],\n            [116.3672, 26.2354],\n            [116.6309, 26.4551],\n            [116.543, 26.8066],\n            [117.0703, 27.1143],\n            [117.1582, 27.29],\n            [116.9824, 27.6416],\n            [117.5098, 27.9932],\n            [117.7734, 27.8174],\n            [118.3008, 28.0811],\n            [118.4766, 28.3008],\n          ],\n        ],\n      },\n    },\n    {\n      type: 'Feature',\n      properties: {\n        id: '33',\n        size: '2100',\n        name: '浙江省',\n        cp: [120.498, 29.0918],\n        childNum: 11,\n        color: MAIN_COLOR,\n      },\n      geometry: {\n        type: 'Polygon',\n        coordinates: [\n          [\n            [118.2129, 29.3994],\n            [118.7402, 29.707],\n            [118.916, 29.9707],\n            [118.916, 30.3223],\n            [119.3555, 30.4102],\n            [119.2676, 30.6299],\n            [119.4434, 30.6738],\n            [119.6191, 31.0693],\n            [119.6191, 31.1133],\n            [119.9707, 31.1572],\n            [120.498, 30.8057],\n            [120.9375, 31.0254],\n            [121.2891, 30.6738],\n            [121.9922, 30.8057],\n            [122.6953, 30.8936],\n            [122.8711, 30.7178],\n            [122.959, 30.1465],\n            [122.6074, 30.1025],\n            [122.6074, 29.9268],\n            [122.168, 29.5313],\n            [122.3438, 28.8721],\n            [121.9922, 28.8721],\n            [121.9922, 28.4326],\n            [121.7285, 28.3447],\n            [121.7285, 28.2129],\n            [121.4648, 28.2129],\n            [121.5527, 28.0371],\n            [121.2891, 27.9492],\n            [121.1133, 27.4219],\n            [120.6738, 27.334],\n            [120.6738, 27.1582],\n            [120.9375, 27.0264],\n            [120.7617, 27.0264],\n            [120.4102, 27.1582],\n            [120.2344, 27.4219],\n            [119.7949, 27.29],\n            [119.6191, 27.6855],\n            [119.2676, 27.4219],\n            [118.916, 27.4658],\n            [118.7402, 28.0371],\n            [118.8281, 28.2568],\n            [118.4766, 28.3008],\n            [118.4766, 28.3447],\n            [118.3887, 28.7842],\n            [118.0371, 29.0479],\n            [118.0371, 29.1797],\n            [118.2129, 29.3994],\n          ],\n        ],\n      },\n    },\n    {\n      type: 'Feature',\n      properties: {\n        id: '32',\n        size: '1950',\n        name: '江苏省',\n        cp: [118.8586, 32.915],\n        childNum: 13,\n        color: MAIN_COLOR,\n      },\n      geometry: {\n        type: 'Polygon',\n        coordinates: [\n          [\n            [116.3672, 34.6289],\n            [116.4551, 34.8926],\n            [116.8066, 34.9365],\n            [117.2461, 34.4531],\n            [117.334, 34.585],\n            [117.5977, 34.4531],\n            [117.9492, 34.6729],\n            [118.125, 34.6289],\n            [118.2129, 34.4092],\n            [118.3887, 34.4092],\n            [118.4766, 34.6729],\n            [118.7402, 34.7168],\n            [118.916, 35.0244],\n            [119.2676, 35.1123],\n            [119.3555, 35.0244],\n            [119.3555, 34.8486],\n            [119.707, 34.585],\n            [120.3223, 34.3652],\n            [120.9375, 33.0469],\n            [121.0254, 32.6514],\n            [121.377, 32.4756],\n            [121.4648, 32.168],\n            [121.9043, 31.9922],\n            [121.9922, 31.6846],\n            [121.9922, 31.5967],\n            [121.2012, 31.8604],\n            [121.1133, 31.7285],\n            [121.377, 31.5088],\n            [121.2012, 31.4648],\n            [120.9375, 31.0254],\n            [120.498, 30.8057],\n            [119.9707, 31.1572],\n            [119.6191, 31.1133],\n            [119.4434, 31.1572],\n            [119.3555, 31.2891],\n            [118.8281, 31.2451],\n            [118.7402, 31.377],\n            [118.916, 31.5527],\n            [118.3887, 31.9482],\n            [118.4766, 32.168],\n            [118.6523, 32.2119],\n            [118.5645, 32.5635],\n            [119.1797, 32.4756],\n            [119.1797, 32.8271],\n            [118.916, 32.959],\n            [118.7402, 32.7393],\n            [118.3008, 32.7832],\n            [118.2129, 33.2227],\n            [118.0371, 33.1348],\n            [117.9492, 33.2227],\n            [118.125, 33.75],\n            [117.7734, 33.7061],\n            [117.5977, 34.0137],\n            [117.1582, 34.0576],\n            [116.8945, 34.4092],\n            [116.3672, 34.6289],\n          ],\n        ],\n      },\n    },\n    {\n      type: 'Feature',\n      properties: {\n        id: '50',\n        size: '2380',\n        name: '重庆市',\n        cp: [107.7539, 30.1904],\n        childNum: 40,\n        color: MAIN_COLOR,\n      },\n      geometry: {\n        type: 'Polygon',\n        coordinates: [\n          [\n            [108.5449, 31.6846],\n            [108.2813, 31.9043],\n            [108.3691, 32.168],\n            [108.5449, 32.2119],\n            [109.0723, 31.9482],\n            [109.248, 31.7285],\n            [109.5996, 31.7285],\n            [109.7754, 31.6846],\n            [109.6875, 31.5527],\n            [110.127, 31.377],\n            [110.2148, 31.1572],\n            [110.0391, 30.8057],\n            [109.8633, 30.8936],\n            [109.4238, 30.542],\n            [109.248, 30.6299],\n            [109.1602, 30.542],\n            [109.0723, 30.6299],\n            [108.8086, 30.498],\n            [108.6328, 30.5859],\n            [108.457, 30.4102],\n            [108.5449, 30.2344],\n            [108.457, 29.7949],\n            [108.6328, 29.8389],\n            [108.9844, 29.3115],\n            [109.0723, 29.3555],\n            [109.248, 29.1357],\n            [109.248, 28.4766],\n            [109.0723, 28.2129],\n            [108.7207, 28.2129],\n            [108.7207, 28.4766],\n            [108.5449, 28.3887],\n            [108.5449, 28.6523],\n            [108.3691, 28.6523],\n            [108.2813, 29.0918],\n            [107.8418, 29.0039],\n            [107.8418, 29.1357],\n            [107.5781, 29.2236],\n            [107.4023, 29.1797],\n            [107.4023, 28.8721],\n            [106.875, 28.7842],\n            [106.6992, 28.4766],\n            [106.6113, 28.5205],\n            [106.6113, 28.6523],\n            [106.5234, 28.7842],\n            [106.4355, 28.7842],\n            [106.5234, 28.5645],\n            [106.3477, 28.5205],\n            [106.2598, 28.8721],\n            [105.8203, 28.96],\n            [105.7324, 29.2676],\n            [105.4688, 29.3115],\n            [105.293, 29.5313],\n            [105.7324, 29.8828],\n            [105.5566, 30.1025],\n            [105.6445, 30.2783],\n            [105.8203, 30.4541],\n            [106.2598, 30.1904],\n            [106.6113, 30.3223],\n            [106.7871, 30.0146],\n            [107.0508, 30.0146],\n            [107.4902, 30.6299],\n            [107.4023, 30.7617],\n            [107.4902, 30.8496],\n            [107.9297, 30.8496],\n            [108.1934, 31.5088],\n            [108.5449, 31.6846],\n          ],\n        ],\n      },\n    },\n    {\n      type: 'Feature',\n      properties: {\n        id: '64',\n        size: '2100',\n        name: '宁夏回族自治区',\n        cp: [105.9961, 37.3096],\n        childNum: 5,\n        color: MAIN_COLOR,\n      },\n      geometry: {\n        type: 'Polygon',\n        coordinates: [\n          [\n            [104.3262, 37.4414],\n            [105.8203, 37.793],\n            [105.9082, 38.7158],\n            [106.3477, 39.2871],\n            [106.7871, 39.375],\n            [106.9629, 38.9795],\n            [106.5234, 38.3203],\n            [106.7871, 38.1885],\n            [107.3145, 38.1006],\n            [107.666, 37.8809],\n            [107.3145, 37.6172],\n            [107.3145, 37.0898],\n            [106.6113, 37.0898],\n            [106.6113, 36.7822],\n            [106.4355, 36.5625],\n            [106.5234, 36.4746],\n            [106.5234, 36.2549],\n            [106.875, 36.123],\n            [106.9629, 35.8154],\n            [106.6992, 35.6836],\n            [106.4355, 35.6836],\n            [106.5234, 35.332],\n            [106.3477, 35.2441],\n            [106.2598, 35.4199],\n            [106.084, 35.376],\n            [105.9961, 35.4199],\n            [106.084, 35.4639],\n            [105.9961, 35.4639],\n            [105.8203, 35.5518],\n            [105.7324, 35.7275],\n            [105.3809, 35.7715],\n            [105.293, 35.9912],\n            [105.4688, 36.123],\n            [105.2051, 36.6943],\n            [105.293, 36.8262],\n            [104.8535, 37.2217],\n            [104.5898, 37.2217],\n            [104.5898, 37.4414],\n            [104.3262, 37.4414],\n          ],\n        ],\n      },\n    },\n    {\n      type: 'Feature',\n      properties: {\n        id: '46',\n        size: '4500',\n        name: '海南省',\n        cp: [109.9512, 19.2041],\n        childNum: 18,\n        color: MAIN_COLOR,\n      },\n      geometry: {\n        type: 'Polygon',\n        coordinates: [\n          [\n            [108.6328, 19.3799],\n            [109.0723, 19.6436],\n            [109.248, 19.9512],\n            [109.5996, 20.0391],\n            [110.0391, 20.127],\n            [110.3906, 20.127],\n            [110.5664, 20.2588],\n            [110.6543, 20.2588],\n            [111.0938, 19.9512],\n            [111.2695, 19.9951],\n            [110.6543, 19.1602],\n            [110.5664, 18.6768],\n            [110.2148, 18.5889],\n            [110.0391, 18.3691],\n            [109.8633, 18.3691],\n            [109.6875, 18.1055],\n            [108.9844, 18.2813],\n            [108.6328, 18.457],\n            [108.6328, 19.3799],\n          ],\n        ],\n      },\n    },\n    {\n      type: 'Feature',\n      properties: {\n        id: '71',\n        size: '3000',\n        name: '台湾省',\n        cp: [120.0254, 23.5986],\n        childNum: 1,\n        color: MAIN_COLOR,\n      },\n      geometry: {\n        type: 'Polygon',\n        coordinates: [\n          [\n            [121.9043, 25.0488],\n            [121.9922, 25.0049],\n            [121.8164, 24.7412],\n            [121.9043, 24.5654],\n            [121.6406, 24.0381],\n            [121.377, 23.1152],\n            [121.0254, 22.6758],\n            [120.8496, 22.0605],\n            [120.7617, 21.9287],\n            [120.6738, 22.3242],\n            [120.2344, 22.5879],\n            [120.0586, 23.0713],\n            [120.1465, 23.6865],\n            [121.0254, 25.0488],\n            [121.5527, 25.3125],\n            [121.9043, 25.0488],\n          ],\n        ],\n      },\n    },\n    {\n      type: 'Feature',\n      properties: {\n        id: '11',\n        size: '5000',\n        name: '北京市',\n        cp: [116.4551, 40.2539],\n        childNum: 19,\n        color: MAIN_COLOR,\n      },\n      geometry: {\n        type: 'Polygon',\n        coordinates: [\n          [\n            [117.4219, 40.21],\n            [117.334, 40.1221],\n            [117.2461, 40.0781],\n            [116.8066, 39.9902],\n            [116.8945, 39.8145],\n            [116.8945, 39.6826],\n            [116.8066, 39.5947],\n            [116.543, 39.5947],\n            [116.3672, 39.4629],\n            [116.1914, 39.5947],\n            [115.752, 39.5068],\n            [115.4883, 39.6387],\n            [115.4004, 39.9463],\n            [115.9277, 40.2539],\n            [115.752, 40.5615],\n            [116.1035, 40.6055],\n            [116.1914, 40.7813],\n            [116.4551, 40.7813],\n            [116.3672, 40.9131],\n            [116.6309, 41.0449],\n            [116.9824, 40.6934],\n            [117.4219, 40.6494],\n            [117.2461, 40.5176],\n            [117.4219, 40.21],\n          ],\n        ],\n      },\n    },\n    {\n      type: 'Feature',\n      properties: {\n        id: '12',\n        size: '5000',\n        name: '天津市',\n        cp: [117.4219, 39.4189],\n        childNum: 18,\n        color: MAIN_COLOR,\n      },\n      geometry: {\n        type: 'Polygon',\n        coordinates: [\n          [\n            [116.8066, 39.5947],\n            [116.8945, 39.6826],\n            [117.1582, 39.6387],\n            [117.1582, 39.8145],\n            [117.2461, 40.0781],\n            [117.334, 40.1221],\n            [117.4219, 40.21],\n            [117.6855, 40.0781],\n            [117.6855, 39.9902],\n            [117.5098, 39.9902],\n            [117.5098, 39.7705],\n            [117.6855, 39.5947],\n            [117.9492, 39.5947],\n            [117.8613, 39.4189],\n            [118.0371, 39.2432],\n            [118.0371, 39.1992],\n            [117.8613, 39.1113],\n            [117.5977, 38.6279],\n            [117.2461, 38.54],\n            [116.7188, 38.8037],\n            [116.7188, 38.9355],\n            [116.8945, 39.1113],\n            [116.8066, 39.5947],\n          ],\n        ],\n      },\n    },\n    {\n      type: 'Feature',\n      properties: {\n        id: '31',\n        size: '7500',\n        name: '上海市',\n        cp: [121.4648, 31.2891],\n        childNum: 19,\n        color: MAIN_COLOR,\n      },\n      geometry: {\n        type: 'Polygon',\n        coordinates: [\n          [\n            [120.9375, 31.0254],\n            [121.2012, 31.4648],\n            [121.377, 31.5088],\n            [121.1133, 31.7285],\n            [121.2012, 31.8604],\n            [121.9922, 31.5967],\n            [121.9043, 31.1572],\n            [121.9922, 30.8057],\n            [121.2891, 30.6738],\n            [120.9375, 31.0254],\n          ],\n        ],\n      },\n    },\n    {\n      type: 'Feature',\n      properties: {\n        id: '81',\n        size: '18000',\n        name: '香港特别行政区',\n        cp: [114.1178, 22.3242],\n        childNum: 1,\n        color: MAIN_COLOR,\n      },\n      geometry: {\n        type: 'Polygon',\n        coordinates: [\n          [\n            [114.6094, 22.4121],\n            [114.5215, 22.1484],\n            [114.3457, 22.1484],\n            [113.9063, 22.1484],\n            [113.8184, 22.1924],\n            [113.9063, 22.4121],\n            [114.1699, 22.5439],\n            [114.3457, 22.5439],\n            [114.4336, 22.5439],\n            [114.4336, 22.4121],\n            [114.6094, 22.4121],\n          ],\n        ],\n      },\n    },\n    {\n      type: 'Feature',\n      properties: {\n        id: '82',\n        size: '27',\n        name: '澳门特别行政区',\n        cp: [111.5547, 22.1484],\n        childNum: 1,\n        color: MAIN_COLOR,\n      },\n      geometry: {\n        type: 'Polygon',\n        coordinates: [\n          [\n            [113.5986, 22.1649],\n            [113.6096, 22.1265],\n            [113.5547, 22.11],\n            [113.5437, 22.2034],\n            [113.5767, 22.2034],\n            [113.5986, 22.1649],\n          ],\n        ],\n      },\n    },\n  ],\n};\n","interface ICity {\n  code: string;\n  name: string;\n  province: string;\n  city?: string;\n}\n\nexport const chinaCities: ICity[] = [\n  {\n    code: '130100',\n    name: '石家庄市',\n    province: '13',\n    city: '01',\n  },\n  {\n    code: '130200',\n    name: '唐山市',\n    province: '13',\n    city: '02',\n  },\n  {\n    code: '130300',\n    name: '秦皇岛市',\n    province: '13',\n    city: '03',\n  },\n  {\n    code: '130400',\n    name: '邯郸市',\n    province: '13',\n    city: '04',\n  },\n  {\n    code: '130500',\n    name: '邢台市',\n    province: '13',\n    city: '05',\n  },\n  {\n    code: '130600',\n    name: '保定市',\n    province: '13',\n    city: '06',\n  },\n  {\n    code: '130700',\n    name: '张家口市',\n    province: '13',\n    city: '07',\n  },\n  {\n    code: '130800',\n    name: '承德市',\n    province: '13',\n    city: '08',\n  },\n  {\n    code: '130900',\n    name: '沧州市',\n    province: '13',\n    city: '09',\n  },\n  {\n    code: '131000',\n    name: '廊坊市',\n    province: '13',\n    city: '10',\n  },\n  {\n    code: '131100',\n    name: '衡水市',\n    province: '13',\n    city: '11',\n  },\n  {\n    code: '140100',\n    name: '太原市',\n    province: '14',\n    city: '01',\n  },\n  {\n    code: '140200',\n    name: '大同市',\n    province: '14',\n    city: '02',\n  },\n  {\n    code: '140300',\n    name: '阳泉市',\n    province: '14',\n    city: '03',\n  },\n  {\n    code: '140400',\n    name: '长治市',\n    province: '14',\n    city: '04',\n  },\n  {\n    code: '140500',\n    name: '晋城市',\n    province: '14',\n    city: '05',\n  },\n  {\n    code: '140600',\n    name: '朔州市',\n    province: '14',\n    city: '06',\n  },\n  {\n    code: '140700',\n    name: '晋中市',\n    province: '14',\n    city: '07',\n  },\n  {\n    code: '140800',\n    name: '运城市',\n    province: '14',\n    city: '08',\n  },\n  {\n    code: '140900',\n    name: '忻州市',\n    province: '14',\n    city: '09',\n  },\n  {\n    code: '141000',\n    name: '临汾市',\n    province: '14',\n    city: '10',\n  },\n  {\n    code: '141100',\n    name: '吕梁市',\n    province: '14',\n    city: '11',\n  },\n  {\n    code: '150100',\n    name: '呼和浩特市',\n    province: '15',\n    city: '01',\n  },\n  {\n    code: '150200',\n    name: '包头市',\n    province: '15',\n    city: '02',\n  },\n  {\n    code: '150300',\n    name: '乌海市',\n    province: '15',\n    city: '03',\n  },\n  {\n    code: '150400',\n    name: '赤峰市',\n    province: '15',\n    city: '04',\n  },\n  {\n    code: '150500',\n    name: '通辽市',\n    province: '15',\n    city: '05',\n  },\n  {\n    code: '150600',\n    name: '鄂尔多斯市',\n    province: '15',\n    city: '06',\n  },\n  {\n    code: '150700',\n    name: '呼伦贝尔市',\n    province: '15',\n    city: '07',\n  },\n  {\n    code: '150800',\n    name: '巴彦淖尔市',\n    province: '15',\n    city: '08',\n  },\n  {\n    code: '150900',\n    name: '乌兰察布市',\n    province: '15',\n    city: '09',\n  },\n  {\n    code: '152200',\n    name: '兴安盟',\n    province: '15',\n    city: '22',\n  },\n  {\n    code: '152500',\n    name: '锡林郭勒盟',\n    province: '15',\n    city: '25',\n  },\n  {\n    code: '152900',\n    name: '阿拉善盟',\n    province: '15',\n    city: '29',\n  },\n  {\n    code: '210100',\n    name: '沈阳市',\n    province: '21',\n    city: '01',\n  },\n  {\n    code: '210200',\n    name: '大连市',\n    province: '21',\n    city: '02',\n  },\n  {\n    code: '210300',\n    name: '鞍山市',\n    province: '21',\n    city: '03',\n  },\n  {\n    code: '210400',\n    name: '抚顺市',\n    province: '21',\n    city: '04',\n  },\n  {\n    code: '210500',\n    name: '本溪市',\n    province: '21',\n    city: '05',\n  },\n  {\n    code: '210600',\n    name: '丹东市',\n    province: '21',\n    city: '06',\n  },\n  {\n    code: '210700',\n    name: '锦州市',\n    province: '21',\n    city: '07',\n  },\n  {\n    code: '210800',\n    name: '营口市',\n    province: '21',\n    city: '08',\n  },\n  {\n    code: '210900',\n    name: '阜新市',\n    province: '21',\n    city: '09',\n  },\n  {\n    code: '211000',\n    name: '辽阳市',\n    province: '21',\n    city: '10',\n  },\n  {\n    code: '211100',\n    name: '盘锦市',\n    province: '21',\n    city: '11',\n  },\n  {\n    code: '211200',\n    name: '铁岭市',\n    province: '21',\n    city: '12',\n  },\n  {\n    code: '211300',\n    name: '朝阳市',\n    province: '21',\n    city: '13',\n  },\n  {\n    code: '211400',\n    name: '葫芦岛市',\n    province: '21',\n    city: '14',\n  },\n  {\n    code: '220100',\n    name: '长春市',\n    province: '22',\n    city: '01',\n  },\n  {\n    code: '220200',\n    name: '吉林市',\n    province: '22',\n    city: '02',\n  },\n  {\n    code: '220300',\n    name: '四平市',\n    province: '22',\n    city: '03',\n  },\n  {\n    code: '220400',\n    name: '辽源市',\n    province: '22',\n    city: '04',\n  },\n  {\n    code: '220500',\n    name: '通化市',\n    province: '22',\n    city: '05',\n  },\n  {\n    code: '220600',\n    name: '白山市',\n    province: '22',\n    city: '06',\n  },\n  {\n    code: '220700',\n    name: '松原市',\n    province: '22',\n    city: '07',\n  },\n  {\n    code: '220800',\n    name: '白城市',\n    province: '22',\n    city: '08',\n  },\n  {\n    code: '222400',\n    name: '延边朝鲜族自治州',\n    province: '22',\n    city: '24',\n  },\n  {\n    code: '230100',\n    name: '哈尔滨市',\n    province: '23',\n    city: '01',\n  },\n  {\n    code: '230200',\n    name: '齐齐哈尔市',\n    province: '23',\n    city: '02',\n  },\n  {\n    code: '230300',\n    name: '鸡西市',\n    province: '23',\n    city: '03',\n  },\n  {\n    code: '230400',\n    name: '鹤岗市',\n    province: '23',\n    city: '04',\n  },\n  {\n    code: '230500',\n    name: '双鸭山市',\n    province: '23',\n    city: '05',\n  },\n  {\n    code: '230600',\n    name: '大庆市',\n    province: '23',\n    city: '06',\n  },\n  {\n    code: '230700',\n    name: '伊春市',\n    province: '23',\n    city: '07',\n  },\n  {\n    code: '230800',\n    name: '佳木斯市',\n    province: '23',\n    city: '08',\n  },\n  {\n    code: '230900',\n    name: '七台河市',\n    province: '23',\n    city: '09',\n  },\n  {\n    code: '231000',\n    name: '牡丹江市',\n    province: '23',\n    city: '10',\n  },\n  {\n    code: '231100',\n    name: '黑河市',\n    province: '23',\n    city: '11',\n  },\n  {\n    code: '231200',\n    name: '绥化市',\n    province: '23',\n    city: '12',\n  },\n  {\n    code: '232700',\n    name: '大兴安岭地区',\n    province: '23',\n    city: '27',\n  },\n  {\n    code: '320100',\n    name: '南京市',\n    province: '32',\n    city: '01',\n  },\n  {\n    code: '320200',\n    name: '无锡市',\n    province: '32',\n    city: '02',\n  },\n  {\n    code: '320300',\n    name: '徐州市',\n    province: '32',\n    city: '03',\n  },\n  {\n    code: '320400',\n    name: '常州市',\n    province: '32',\n    city: '04',\n  },\n  {\n    code: '320500',\n    name: '苏州市',\n    province: '32',\n    city: '05',\n  },\n  {\n    code: '320600',\n    name: '南通市',\n    province: '32',\n    city: '06',\n  },\n  {\n    code: '320700',\n    name: '连云港市',\n    province: '32',\n    city: '07',\n  },\n  {\n    code: '320800',\n    name: '淮安市',\n    province: '32',\n    city: '08',\n  },\n  {\n    code: '320900',\n    name: '盐城市',\n    province: '32',\n    city: '09',\n  },\n  {\n    code: '321000',\n    name: '扬州市',\n    province: '32',\n    city: '10',\n  },\n  {\n    code: '321100',\n    name: '镇江市',\n    province: '32',\n    city: '11',\n  },\n  {\n    code: '321200',\n    name: '泰州市',\n    province: '32',\n    city: '12',\n  },\n  {\n    code: '321300',\n    name: '宿迁市',\n    province: '32',\n    city: '13',\n  },\n  {\n    code: '330100',\n    name: '杭州市',\n    province: '33',\n    city: '01',\n  },\n  {\n    code: '330200',\n    name: '宁波市',\n    province: '33',\n    city: '02',\n  },\n  {\n    code: '330300',\n    name: '温州市',\n    province: '33',\n    city: '03',\n  },\n  {\n    code: '330400',\n    name: '嘉兴市',\n    province: '33',\n    city: '04',\n  },\n  {\n    code: '330500',\n    name: '湖州市',\n    province: '33',\n    city: '05',\n  },\n  {\n    code: '330600',\n    name: '绍兴市',\n    province: '33',\n    city: '06',\n  },\n  {\n    code: '330700',\n    name: '金华市',\n    province: '33',\n    city: '07',\n  },\n  {\n    code: '330800',\n    name: '衢州市',\n    province: '33',\n    city: '08',\n  },\n  {\n    code: '330900',\n    name: '舟山市',\n    province: '33',\n    city: '09',\n  },\n  {\n    code: '331000',\n    name: '台州市',\n    province: '33',\n    city: '10',\n  },\n  {\n    code: '331100',\n    name: '丽水市',\n    province: '33',\n    city: '11',\n  },\n  {\n    code: '340100',\n    name: '合肥市',\n    province: '34',\n    city: '01',\n  },\n  {\n    code: '340200',\n    name: '芜湖市',\n    province: '34',\n    city: '02',\n  },\n  {\n    code: '340300',\n    name: '蚌埠市',\n    province: '34',\n    city: '03',\n  },\n  {\n    code: '340400',\n    name: '淮南市',\n    province: '34',\n    city: '04',\n  },\n  {\n    code: '340500',\n    name: '马鞍山市',\n    province: '34',\n    city: '05',\n  },\n  {\n    code: '340600',\n    name: '淮北市',\n    province: '34',\n    city: '06',\n  },\n  {\n    code: '340700',\n    name: '铜陵市',\n    province: '34',\n    city: '07',\n  },\n  {\n    code: '340800',\n    name: '安庆市',\n    province: '34',\n    city: '08',\n  },\n  {\n    code: '341000',\n    name: '黄山市',\n    province: '34',\n    city: '10',\n  },\n  {\n    code: '341100',\n    name: '滁州市',\n    province: '34',\n    city: '11',\n  },\n  {\n    code: '341200',\n    name: '阜阳市',\n    province: '34',\n    city: '12',\n  },\n  {\n    code: '341300',\n    name: '宿州市',\n    province: '34',\n    city: '13',\n  },\n  {\n    code: '341500',\n    name: '六安市',\n    province: '34',\n    city: '15',\n  },\n  {\n    code: '341600',\n    name: '亳州市',\n    province: '34',\n    city: '16',\n  },\n  {\n    code: '341700',\n    name: '池州市',\n    province: '34',\n    city: '17',\n  },\n  {\n    code: '341800',\n    name: '宣城市',\n    province: '34',\n    city: '18',\n  },\n  {\n    code: '350100',\n    name: '福州市',\n    province: '35',\n    city: '01',\n  },\n  {\n    code: '350200',\n    name: '厦门市',\n    province: '35',\n    city: '02',\n  },\n  {\n    code: '350300',\n    name: '莆田市',\n    province: '35',\n    city: '03',\n  },\n  {\n    code: '350400',\n    name: '三明市',\n    province: '35',\n    city: '04',\n  },\n  {\n    code: '350500',\n    name: '泉州市',\n    province: '35',\n    city: '05',\n  },\n  {\n    code: '350600',\n    name: '漳州市',\n    province: '35',\n    city: '06',\n  },\n  {\n    code: '350700',\n    name: '南平市',\n    province: '35',\n    city: '07',\n  },\n  {\n    code: '350800',\n    name: '龙岩市',\n    province: '35',\n    city: '08',\n  },\n  {\n    code: '350900',\n    name: '宁德市',\n    province: '35',\n    city: '09',\n  },\n  {\n    code: '360100',\n    name: '南昌市',\n    province: '36',\n    city: '01',\n  },\n  {\n    code: '360200',\n    name: '景德镇市',\n    province: '36',\n    city: '02',\n  },\n  {\n    code: '360300',\n    name: '萍乡市',\n    province: '36',\n    city: '03',\n  },\n  {\n    code: '360400',\n    name: '九江市',\n    province: '36',\n    city: '04',\n  },\n  {\n    code: '360500',\n    name: '新余市',\n    province: '36',\n    city: '05',\n  },\n  {\n    code: '360600',\n    name: '鹰潭市',\n    province: '36',\n    city: '06',\n  },\n  {\n    code: '360700',\n    name: '赣州市',\n    province: '36',\n    city: '07',\n  },\n  {\n    code: '360800',\n    name: '吉安市',\n    province: '36',\n    city: '08',\n  },\n  {\n    code: '360900',\n    name: '宜春市',\n    province: '36',\n    city: '09',\n  },\n  {\n    code: '361000',\n    name: '抚州市',\n    province: '36',\n    city: '10',\n  },\n  {\n    code: '361100',\n    name: '上饶市',\n    province: '36',\n    city: '11',\n  },\n  {\n    code: '370100',\n    name: '济南市',\n    province: '37',\n    city: '01',\n  },\n  {\n    code: '370200',\n    name: '青岛市',\n    province: '37',\n    city: '02',\n  },\n  {\n    code: '370300',\n    name: '淄博市',\n    province: '37',\n    city: '03',\n  },\n  {\n    code: '370400',\n    name: '枣庄市',\n    province: '37',\n    city: '04',\n  },\n  {\n    code: '370500',\n    name: '东营市',\n    province: '37',\n    city: '05',\n  },\n  {\n    code: '370600',\n    name: '烟台市',\n    province: '37',\n    city: '06',\n  },\n  {\n    code: '370700',\n    name: '潍坊市',\n    province: '37',\n    city: '07',\n  },\n  {\n    code: '370800',\n    name: '济宁市',\n    province: '37',\n    city: '08',\n  },\n  {\n    code: '370900',\n    name: '泰安市',\n    province: '37',\n    city: '09',\n  },\n  {\n    code: '371000',\n    name: '威海市',\n    province: '37',\n    city: '10',\n  },\n  {\n    code: '371100',\n    name: '日照市',\n    province: '37',\n    city: '11',\n  },\n  {\n    code: '371300',\n    name: '临沂市',\n    province: '37',\n    city: '13',\n  },\n  {\n    code: '371400',\n    name: '德州市',\n    province: '37',\n    city: '14',\n  },\n  {\n    code: '371500',\n    name: '聊城市',\n    province: '37',\n    city: '15',\n  },\n  {\n    code: '371600',\n    name: '滨州市',\n    province: '37',\n    city: '16',\n  },\n  {\n    code: '371700',\n    name: '菏泽市',\n    province: '37',\n    city: '17',\n  },\n  {\n    code: '410100',\n    name: '郑州市',\n    province: '41',\n    city: '01',\n  },\n  {\n    code: '410200',\n    name: '开封市',\n    province: '41',\n    city: '02',\n  },\n  {\n    code: '410300',\n    name: '洛阳市',\n    province: '41',\n    city: '03',\n  },\n  {\n    code: '410400',\n    name: '平顶山市',\n    province: '41',\n    city: '04',\n  },\n  {\n    code: '410500',\n    name: '安阳市',\n    province: '41',\n    city: '05',\n  },\n  {\n    code: '410600',\n    name: '鹤壁市',\n    province: '41',\n    city: '06',\n  },\n  {\n    code: '410700',\n    name: '新乡市',\n    province: '41',\n    city: '07',\n  },\n  {\n    code: '410800',\n    name: '焦作市',\n    province: '41',\n    city: '08',\n  },\n  {\n    code: '410900',\n    name: '濮阳市',\n    province: '41',\n    city: '09',\n  },\n  {\n    code: '411000',\n    name: '许昌市',\n    province: '41',\n    city: '10',\n  },\n  {\n    code: '411100',\n    name: '漯河市',\n    province: '41',\n    city: '11',\n  },\n  {\n    code: '411200',\n    name: '三门峡市',\n    province: '41',\n    city: '12',\n  },\n  {\n    code: '411300',\n    name: '南阳市',\n    province: '41',\n    city: '13',\n  },\n  {\n    code: '411400',\n    name: '商丘市',\n    province: '41',\n    city: '14',\n  },\n  {\n    code: '411500',\n    name: '信阳市',\n    province: '41',\n    city: '15',\n  },\n  {\n    code: '411600',\n    name: '周口市',\n    province: '41',\n    city: '16',\n  },\n  {\n    code: '411700',\n    name: '驻马店市',\n    province: '41',\n    city: '17',\n  },\n  {\n    code: '420100',\n    name: '武汉市',\n    province: '42',\n    city: '01',\n  },\n  {\n    code: '420200',\n    name: '黄石市',\n    province: '42',\n    city: '02',\n  },\n  {\n    code: '420300',\n    name: '十堰市',\n    province: '42',\n    city: '03',\n  },\n  {\n    code: '420500',\n    name: '宜昌市',\n    province: '42',\n    city: '05',\n  },\n  {\n    code: '420600',\n    name: '襄阳市',\n    province: '42',\n    city: '06',\n  },\n  {\n    code: '420700',\n    name: '鄂州市',\n    province: '42',\n    city: '07',\n  },\n  {\n    code: '420800',\n    name: '荆门市',\n    province: '42',\n    city: '08',\n  },\n  {\n    code: '420900',\n    name: '孝感市',\n    province: '42',\n    city: '09',\n  },\n  {\n    code: '421000',\n    name: '荆州市',\n    province: '42',\n    city: '10',\n  },\n  {\n    code: '421100',\n    name: '黄冈市',\n    province: '42',\n    city: '11',\n  },\n  {\n    code: '421200',\n    name: '咸宁市',\n    province: '42',\n    city: '12',\n  },\n  {\n    code: '421300',\n    name: '随州市',\n    province: '42',\n    city: '13',\n  },\n  {\n    code: '422800',\n    name: '恩施土家族苗族自治州',\n    province: '42',\n    city: '28',\n  },\n  {\n    code: '430100',\n    name: '长沙市',\n    province: '43',\n    city: '01',\n  },\n  {\n    code: '430200',\n    name: '株洲市',\n    province: '43',\n    city: '02',\n  },\n  {\n    code: '430300',\n    name: '湘潭市',\n    province: '43',\n    city: '03',\n  },\n  {\n    code: '430400',\n    name: '衡阳市',\n    province: '43',\n    city: '04',\n  },\n  {\n    code: '430500',\n    name: '邵阳市',\n    province: '43',\n    city: '05',\n  },\n  {\n    code: '430600',\n    name: '岳阳市',\n    province: '43',\n    city: '06',\n  },\n  {\n    code: '430700',\n    name: '常德市',\n    province: '43',\n    city: '07',\n  },\n  {\n    code: '430800',\n    name: '张家界市',\n    province: '43',\n    city: '08',\n  },\n  {\n    code: '430900',\n    name: '益阳市',\n    province: '43',\n    city: '09',\n  },\n  {\n    code: '431000',\n    name: '郴州市',\n    province: '43',\n    city: '10',\n  },\n  {\n    code: '431100',\n    name: '永州市',\n    province: '43',\n    city: '11',\n  },\n  {\n    code: '431200',\n    name: '怀化市',\n    province: '43',\n    city: '12',\n  },\n  {\n    code: '431300',\n    name: '娄底市',\n    province: '43',\n    city: '13',\n  },\n  {\n    code: '433100',\n    name: '湘西土家族苗族自治州',\n    province: '43',\n    city: '31',\n  },\n  {\n    code: '440100',\n    name: '广州市',\n    province: '44',\n    city: '01',\n  },\n  {\n    code: '440200',\n    name: '韶关市',\n    province: '44',\n    city: '02',\n  },\n  {\n    code: '440300',\n    name: '深圳市',\n    province: '44',\n    city: '03',\n  },\n  {\n    code: '440400',\n    name: '珠海市',\n    province: '44',\n    city: '04',\n  },\n  {\n    code: '440500',\n    name: '汕头市',\n    province: '44',\n    city: '05',\n  },\n  {\n    code: '440600',\n    name: '佛山市',\n    province: '44',\n    city: '06',\n  },\n  {\n    code: '440700',\n    name: '江门市',\n    province: '44',\n    city: '07',\n  },\n  {\n    code: '440800',\n    name: '湛江市',\n    province: '44',\n    city: '08',\n  },\n  {\n    code: '440900',\n    name: '茂名市',\n    province: '44',\n    city: '09',\n  },\n  {\n    code: '441200',\n    name: '肇庆市',\n    province: '44',\n    city: '12',\n  },\n  {\n    code: '441300',\n    name: '惠州市',\n    province: '44',\n    city: '13',\n  },\n  {\n    code: '441400',\n    name: '梅州市',\n    province: '44',\n    city: '14',\n  },\n  {\n    code: '441500',\n    name: '汕尾市',\n    province: '44',\n    city: '15',\n  },\n  {\n    code: '441600',\n    name: '河源市',\n    province: '44',\n    city: '16',\n  },\n  {\n    code: '441700',\n    name: '阳江市',\n    province: '44',\n    city: '17',\n  },\n  {\n    code: '441800',\n    name: '清远市',\n    province: '44',\n    city: '18',\n  },\n  {\n    code: '441900',\n    name: '东莞市',\n    province: '44',\n    city: '19',\n  },\n  {\n    code: '442000',\n    name: '中山市',\n    province: '44',\n    city: '20',\n  },\n  {\n    code: '445100',\n    name: '潮州市',\n    province: '44',\n    city: '51',\n  },\n  {\n    code: '445200',\n    name: '揭阳市',\n    province: '44',\n    city: '52',\n  },\n  {\n    code: '445300',\n    name: '云浮市',\n    province: '44',\n    city: '53',\n  },\n  {\n    code: '450100',\n    name: '南宁市',\n    province: '45',\n    city: '01',\n  },\n  {\n    code: '450200',\n    name: '柳州市',\n    province: '45',\n    city: '02',\n  },\n  {\n    code: '450300',\n    name: '桂林市',\n    province: '45',\n    city: '03',\n  },\n  {\n    code: '450400',\n    name: '梧州市',\n    province: '45',\n    city: '04',\n  },\n  {\n    code: '450500',\n    name: '北海市',\n    province: '45',\n    city: '05',\n  },\n  {\n    code: '450600',\n    name: '防城港市',\n    province: '45',\n    city: '06',\n  },\n  {\n    code: '450700',\n    name: '钦州市',\n    province: '45',\n    city: '07',\n  },\n  {\n    code: '450800',\n    name: '贵港市',\n    province: '45',\n    city: '08',\n  },\n  {\n    code: '450900',\n    name: '玉林市',\n    province: '45',\n    city: '09',\n  },\n  {\n    code: '451000',\n    name: '百色市',\n    province: '45',\n    city: '10',\n  },\n  {\n    code: '451100',\n    name: '贺州市',\n    province: '45',\n    city: '11',\n  },\n  {\n    code: '451200',\n    name: '河池市',\n    province: '45',\n    city: '12',\n  },\n  {\n    code: '451300',\n    name: '来宾市',\n    province: '45',\n    city: '13',\n  },\n  {\n    code: '451400',\n    name: '崇左市',\n    province: '45',\n    city: '14',\n  },\n  {\n    code: '460100',\n    name: '海口市',\n    province: '46',\n    city: '01',\n  },\n  {\n    code: '460200',\n    name: '三亚市',\n    province: '46',\n    city: '02',\n  },\n  {\n    code: '460300',\n    name: '三沙市',\n    province: '46',\n    city: '03',\n  },\n  {\n    code: '460400',\n    name: '儋州市',\n    province: '46',\n    city: '04',\n  },\n  {\n    code: '510100',\n    name: '成都市',\n    province: '51',\n    city: '01',\n  },\n  {\n    code: '510300',\n    name: '自贡市',\n    province: '51',\n    city: '03',\n  },\n  {\n    code: '510400',\n    name: '攀枝花市',\n    province: '51',\n    city: '04',\n  },\n  {\n    code: '510500',\n    name: '泸州市',\n    province: '51',\n    city: '05',\n  },\n  {\n    code: '510600',\n    name: '德阳市',\n    province: '51',\n    city: '06',\n  },\n  {\n    code: '510700',\n    name: '绵阳市',\n    province: '51',\n    city: '07',\n  },\n  {\n    code: '510800',\n    name: '广元市',\n    province: '51',\n    city: '08',\n  },\n  {\n    code: '510900',\n    name: '遂宁市',\n    province: '51',\n    city: '09',\n  },\n  {\n    code: '511000',\n    name: '内江市',\n    province: '51',\n    city: '10',\n  },\n  {\n    code: '511100',\n    name: '乐山市',\n    province: '51',\n    city: '11',\n  },\n  {\n    code: '511300',\n    name: '南充市',\n    province: '51',\n    city: '13',\n  },\n  {\n    code: '511400',\n    name: '眉山市',\n    province: '51',\n    city: '14',\n  },\n  {\n    code: '511500',\n    name: '宜宾市',\n    province: '51',\n    city: '15',\n  },\n  {\n    code: '511600',\n    name: '广安市',\n    province: '51',\n    city: '16',\n  },\n  {\n    code: '511700',\n    name: '达州市',\n    province: '51',\n    city: '17',\n  },\n  {\n    code: '511800',\n    name: '雅安市',\n    province: '51',\n    city: '18',\n  },\n  {\n    code: '511900',\n    name: '巴中市',\n    province: '51',\n    city: '19',\n  },\n  {\n    code: '512000',\n    name: '资阳市',\n    province: '51',\n    city: '20',\n  },\n  {\n    code: '513200',\n    name: '阿坝藏族羌族自治州',\n    province: '51',\n    city: '32',\n  },\n  {\n    code: '513300',\n    name: '甘孜藏族自治州',\n    province: '51',\n    city: '33',\n  },\n  {\n    code: '513400',\n    name: '凉山彝族自治州',\n    province: '51',\n    city: '34',\n  },\n  {\n    code: '520100',\n    name: '贵阳市',\n    province: '52',\n    city: '01',\n  },\n  {\n    code: '520200',\n    name: '六盘水市',\n    province: '52',\n    city: '02',\n  },\n  {\n    code: '520300',\n    name: '遵义市',\n    province: '52',\n    city: '03',\n  },\n  {\n    code: '520400',\n    name: '安顺市',\n    province: '52',\n    city: '04',\n  },\n  {\n    code: '520500',\n    name: '毕节市',\n    province: '52',\n    city: '05',\n  },\n  {\n    code: '520600',\n    name: '铜仁市',\n    province: '52',\n    city: '06',\n  },\n  {\n    code: '522300',\n    name: '黔西南布依族苗族自治州',\n    province: '52',\n    city: '23',\n  },\n  {\n    code: '522600',\n    name: '黔东南苗族侗族自治州',\n    province: '52',\n    city: '26',\n  },\n  {\n    code: '522700',\n    name: '黔南布依族苗族自治州',\n    province: '52',\n    city: '27',\n  },\n  {\n    code: '530100',\n    name: '昆明市',\n    province: '53',\n    city: '01',\n  },\n  {\n    code: '530300',\n    name: '曲靖市',\n    province: '53',\n    city: '03',\n  },\n  {\n    code: '530400',\n    name: '玉溪市',\n    province: '53',\n    city: '04',\n  },\n  {\n    code: '530500',\n    name: '保山市',\n    province: '53',\n    city: '05',\n  },\n  {\n    code: '530600',\n    name: '昭通市',\n    province: '53',\n    city: '06',\n  },\n  {\n    code: '530700',\n    name: '丽江市',\n    province: '53',\n    city: '07',\n  },\n  {\n    code: '530800',\n    name: '普洱市',\n    province: '53',\n    city: '08',\n  },\n  {\n    code: '530900',\n    name: '临沧市',\n    province: '53',\n    city: '09',\n  },\n  {\n    code: '532300',\n    name: '楚雄彝族自治州',\n    province: '53',\n    city: '23',\n  },\n  {\n    code: '532500',\n    name: '红河哈尼族彝族自治州',\n    province: '53',\n    city: '25',\n  },\n  {\n    code: '532600',\n    name: '文山壮族苗族自治州',\n    province: '53',\n    city: '26',\n  },\n  {\n    code: '532800',\n    name: '西双版纳傣族自治州',\n    province: '53',\n    city: '28',\n  },\n  {\n    code: '532900',\n    name: '大理白族自治州',\n    province: '53',\n    city: '29',\n  },\n  {\n    code: '533100',\n    name: '德宏傣族景颇族自治州',\n    province: '53',\n    city: '31',\n  },\n  {\n    code: '533300',\n    name: '怒江傈僳族自治州',\n    province: '53',\n    city: '33',\n  },\n  {\n    code: '533400',\n    name: '迪庆藏族自治州',\n    province: '53',\n    city: '34',\n  },\n  {\n    code: '540100',\n    name: '拉萨市',\n    province: '54',\n    city: '01',\n  },\n  {\n    code: '540200',\n    name: '日喀则市',\n    province: '54',\n    city: '02',\n  },\n  {\n    code: '540300',\n    name: '昌都市',\n    province: '54',\n    city: '03',\n  },\n  {\n    code: '540400',\n    name: '林芝市',\n    province: '54',\n    city: '04',\n  },\n  {\n    code: '540500',\n    name: '山南市',\n    province: '54',\n    city: '05',\n  },\n  {\n    code: '540600',\n    name: '那曲市',\n    province: '54',\n    city: '06',\n  },\n  {\n    code: '542500',\n    name: '阿里地区',\n    province: '54',\n    city: '25',\n  },\n  {\n    code: '610100',\n    name: '西安市',\n    province: '61',\n    city: '01',\n  },\n  {\n    code: '610200',\n    name: '铜川市',\n    province: '61',\n    city: '02',\n  },\n  {\n    code: '610300',\n    name: '宝鸡市',\n    province: '61',\n    city: '03',\n  },\n  {\n    code: '610400',\n    name: '咸阳市',\n    province: '61',\n    city: '04',\n  },\n  {\n    code: '610500',\n    name: '渭南市',\n    province: '61',\n    city: '05',\n  },\n  {\n    code: '610600',\n    name: '延安市',\n    province: '61',\n    city: '06',\n  },\n  {\n    code: '610700',\n    name: '汉中市',\n    province: '61',\n    city: '07',\n  },\n  {\n    code: '610800',\n    name: '榆林市',\n    province: '61',\n    city: '08',\n  },\n  {\n    code: '610900',\n    name: '安康市',\n    province: '61',\n    city: '09',\n  },\n  {\n    code: '611000',\n    name: '商洛市',\n    province: '61',\n    city: '10',\n  },\n  {\n    code: '620100',\n    name: '兰州市',\n    province: '62',\n    city: '01',\n  },\n  {\n    code: '620200',\n    name: '嘉峪关市',\n    province: '62',\n    city: '02',\n  },\n  {\n    code: '620300',\n    name: '金昌市',\n    province: '62',\n    city: '03',\n  },\n  {\n    code: '620400',\n    name: '白银市',\n    province: '62',\n    city: '04',\n  },\n  {\n    code: '620500',\n    name: '天水市',\n    province: '62',\n    city: '05',\n  },\n  {\n    code: '620600',\n    name: '武威市',\n    province: '62',\n    city: '06',\n  },\n  {\n    code: '620700',\n    name: '张掖市',\n    province: '62',\n    city: '07',\n  },\n  {\n    code: '620800',\n    name: '平凉市',\n    province: '62',\n    city: '08',\n  },\n  {\n    code: '620900',\n    name: '酒泉市',\n    province: '62',\n    city: '09',\n  },\n  {\n    code: '621000',\n    name: '庆阳市',\n    province: '62',\n    city: '10',\n  },\n  {\n    code: '621100',\n    name: '定西市',\n    province: '62',\n    city: '11',\n  },\n  {\n    code: '621200',\n    name: '陇南市',\n    province: '62',\n    city: '12',\n  },\n  {\n    code: '622900',\n    name: '临夏回族自治州',\n    province: '62',\n    city: '29',\n  },\n  {\n    code: '623000',\n    name: '甘南藏族自治州',\n    province: '62',\n    city: '30',\n  },\n  {\n    code: '630100',\n    name: '西宁市',\n    province: '63',\n    city: '01',\n  },\n  {\n    code: '630200',\n    name: '海东市',\n    province: '63',\n    city: '02',\n  },\n  {\n    code: '632200',\n    name: '海北藏族自治州',\n    province: '63',\n    city: '22',\n  },\n  {\n    code: '632300',\n    name: '黄南藏族自治州',\n    province: '63',\n    city: '23',\n  },\n  {\n    code: '632500',\n    name: '海南藏族自治州',\n    province: '63',\n    city: '25',\n  },\n  {\n    code: '632600',\n    name: '果洛藏族自治州',\n    province: '63',\n    city: '26',\n  },\n  {\n    code: '632700',\n    name: '玉树藏族自治州',\n    province: '63',\n    city: '27',\n  },\n  {\n    code: '632800',\n    name: '海西蒙古族藏族自治州',\n    province: '63',\n    city: '28',\n  },\n  {\n    code: '640100',\n    name: '银川市',\n    province: '64',\n    city: '01',\n  },\n  {\n    code: '640200',\n    name: '石嘴山市',\n    province: '64',\n    city: '02',\n  },\n  {\n    code: '640300',\n    name: '吴忠市',\n    province: '64',\n    city: '03',\n  },\n  {\n    code: '640400',\n    name: '固原市',\n    province: '64',\n    city: '04',\n  },\n  {\n    code: '640500',\n    name: '中卫市',\n    province: '64',\n    city: '05',\n  },\n  {\n    code: '650100',\n    name: '乌鲁木齐市',\n    province: '65',\n    city: '01',\n  },\n  {\n    code: '650200',\n    name: '克拉玛依市',\n    province: '65',\n    city: '02',\n  },\n  {\n    code: '650400',\n    name: '吐鲁番市',\n    province: '65',\n    city: '04',\n  },\n  {\n    code: '650500',\n    name: '哈密市',\n    province: '65',\n    city: '05',\n  },\n  {\n    code: '652300',\n    name: '昌吉回族自治州',\n    province: '65',\n    city: '23',\n  },\n  {\n    code: '652700',\n    name: '博尔塔拉蒙古自治州',\n    province: '65',\n    city: '27',\n  },\n  {\n    code: '652800',\n    name: '巴音郭楞蒙古自治州',\n    province: '65',\n    city: '28',\n  },\n  {\n    code: '652900',\n    name: '阿克苏地区',\n    province: '65',\n    city: '29',\n  },\n  {\n    code: '653000',\n    name: '克孜勒苏柯尔克孜自治州',\n    province: '65',\n    city: '30',\n  },\n  {\n    code: '653100',\n    name: '喀什地区',\n    province: '65',\n    city: '31',\n  },\n  {\n    code: '653200',\n    name: '和田地区',\n    province: '65',\n    city: '32',\n  },\n  {\n    code: '654000',\n    name: '伊犁哈萨克自治州',\n    province: '65',\n    city: '40',\n  },\n  {\n    code: '654200',\n    name: '塔城地区',\n    province: '65',\n    city: '42',\n  },\n  {\n    code: '654300',\n    name: '阿勒泰地区',\n    province: '65',\n    city: '43',\n  },\n  {\n    code: '429000',\n    name: '湖北省 - 自治区直辖县级行政区划',\n    province: '42',\n    city: '90',\n  },\n  {\n    code: '469000',\n    name: '海南省 - 自治区直辖县级行政区划',\n    province: '46',\n    city: '90',\n  },\n  {\n    code: '659000',\n    name: '新疆维吾尔自治区 - 自治区直辖县级行政区划',\n    province: '65',\n    city: '90',\n  },\n  {\n    code: '419000',\n    name: '河南省 - 省直辖县级行政区划',\n    province: '41',\n    city: '90',\n  },\n  {\n    code: '110000',\n    name: '北京市',\n    province: '11',\n  },\n  {\n    code: '120000',\n    name: '天津市',\n    province: '12',\n  },\n  {\n    code: '130000',\n    name: '河北省',\n    province: '13',\n  },\n  {\n    code: '140000',\n    name: '山西省',\n    province: '14',\n  },\n  {\n    code: '150000',\n    name: '内蒙古自治区',\n    province: '15',\n  },\n  {\n    code: '210000',\n    name: '辽宁省',\n    province: '21',\n  },\n  {\n    code: '220000',\n    name: '吉林省',\n    province: '22',\n  },\n  {\n    code: '230000',\n    name: '黑龙江省',\n    province: '23',\n  },\n  {\n    code: '310000',\n    name: '上海市',\n    province: '31',\n  },\n  {\n    code: '320000',\n    name: '江苏省',\n    province: '32',\n  },\n  {\n    code: '330000',\n    name: '浙江省',\n    province: '33',\n  },\n  {\n    code: '340000',\n    name: '安徽省',\n    province: '34',\n  },\n  {\n    code: '350000',\n    name: '福建省',\n    province: '35',\n  },\n  {\n    code: '360000',\n    name: '江西省',\n    province: '36',\n  },\n  {\n    code: '370000',\n    name: '山东省',\n    province: '37',\n  },\n  {\n    code: '410000',\n    name: '河南省',\n    province: '41',\n  },\n  {\n    code: '420000',\n    name: '湖北省',\n    province: '42',\n  },\n  {\n    code: '430000',\n    name: '湖南省',\n    province: '43',\n  },\n  {\n    code: '440000',\n    name: '广东省',\n    province: '44',\n  },\n  {\n    code: '450000',\n    name: '广西壮族自治区',\n    province: '45',\n  },\n  {\n    code: '460000',\n    name: '海南省',\n    province: '46',\n  },\n  {\n    code: '500000',\n    name: '重庆市',\n    province: '50',\n  },\n  {\n    code: '510000',\n    name: '四川省',\n    province: '51',\n  },\n  {\n    code: '520000',\n    name: '贵州省',\n    province: '52',\n  },\n  {\n    code: '530000',\n    name: '云南省',\n    province: '53',\n  },\n  {\n    code: '540000',\n    name: '西藏自治区',\n    province: '54',\n  },\n  {\n    code: '610000',\n    name: '陕西省',\n    province: '61',\n  },\n  {\n    code: '620000',\n    name: '甘肃省',\n    province: '62',\n  },\n  {\n    code: '630000',\n    name: '青海省',\n    province: '63',\n  },\n  {\n    code: '640000',\n    name: '宁夏回族自治区',\n    province: '64',\n  },\n  {\n    code: '650000',\n    name: '新疆维吾尔自治区',\n    province: '65',\n  },\n  {\n    code: '710000',\n    name: '台湾省',\n    province: '71',\n  },\n  {\n    code: '810000',\n    name: '香港特别行政区',\n    province: '81',\n  },\n  {\n    code: '820000',\n    name: '澳门特别行政区',\n    province: '82',\n  },\n];\n","import * as mapboxPolyline from '@mapbox/polyline';\nimport gcoord from 'gcoord';\nimport { WebMercatorViewport } from 'viewport-mercator-project';\nimport { chinaGeojson, RPGeometry } from '@/static/run_countries';\nimport worldGeoJson from '@surbowl/world-geo-json-zh/world.zh.json';\nimport { chinaCities } from '@/static/city';\nimport { MAIN_COLOR, MUNICIPALITY_CITIES_ARR, NEED_FIX_MAP, RUN_TITLES, ACTIVITY_TYPES, RICH_TITLE, CYCLING_COLOR, HIKING_COLOR, WALKING_COLOR, SWIMMING_COLOR, RUN_COLOR, RUN_TRAIL_COLOR } from './const';\nimport { FeatureCollection, LineString } from 'geojson';\n\nexport type Coordinate = [number, number];\n\nexport type RunIds = Array<number> | [];\n\nexport interface Activity {\n  run_id: number;\n  name: string;\n  distance: number;\n  moving_time: string;\n  type: string;\n  subtype: string;\n  start_date: string;\n  start_date_local: string;\n  location_country?: string | null;\n  ending_point_pos?: string | null;\n  summary_polyline?: string | null;\n  average_heartrate?: number | null;\n  elevation_gain: number | null;\n  average_speed: number;\n  streak: number;\n}\n\nconst titleForShow = (run: Activity): string => {\n  const date = run.start_date_local.slice(0, 11);\n  const distance = (run.distance / 1000.0).toFixed(2);\n  let name = 'Run';\n  if (run.name.slice(0, 7) === 'Running') {\n    name = 'run';\n  }\n  if (run.name) {\n    name = run.name;\n  }\n  return `${name} ${date} ${distance} KM ${\n    !run.summary_polyline ? '(No map data for this run)' : ''\n  }`;\n};\n\nconst formatPace = (d: number): string => {\n  if (Number.isNaN(d)) return '0';\n  const pace = (1000.0 / 60.0) * (1.0 / d);\n  const minutes = Math.floor(pace);\n  const seconds = Math.floor((pace - minutes) * 60.0);\n  return `${minutes}'${seconds.toFixed(0).toString().padStart(2, '0')}\"`;\n};\n\nconst convertMovingTime2Sec = (moving_time: string): number => {\n  if (!moving_time) {\n    return 0;\n  }\n  // moving_time : '2 days, 12:34:56' or '12:34:56';\n  const splits = moving_time.split(', ');\n  const days = splits.length == 2 ? parseInt(splits[0]) : 0;\n  const time = splits.splice(-1)[0];\n  const [hours, minutes, seconds] = time.split(':').map(Number);\n  const totalSeconds = ((days * 24 + hours) * 60 + minutes) * 60 + seconds;\n  return totalSeconds;\n};\n\nconst formatRunTime = (moving_time: string): string => {\n  const totalSeconds = convertMovingTime2Sec(moving_time);\n  const seconds = totalSeconds % 60;\n  const minutes = (totalSeconds - seconds) / 60;\n  if (minutes === 0) {\n    return seconds + 's';\n  }\n  return minutes + 'min';\n};\n\n// for scroll to the map\nconst scrollToMap = () => {\n  const el = document.querySelector('.fl.w-100.w-70-l');\n  const rect = el?.getBoundingClientRect();\n  if (rect) {\n    window.scroll(rect.left + window.scrollX, rect.top + window.scrollY);\n  }\n};\n\nconst extractCities = (str: string): string[] => {\n  const locations = [];\n  let match;\n  const pattern = /([\\u4e00-\\u9fa5]{2,}(市|自治州|特别行政区|盟|地区))/g;\n  while ((match = pattern.exec(str)) !== null) {\n    locations.push(match[0]);\n  }\n\n  return locations;\n};\n\nconst extractDistricts = (str: string): string[] => {\n  const locations = [];\n  let match;\n  const pattern = /([\\u4e00-\\u9fa5]{2,}(区|县))/g;\n  while ((match = pattern.exec(str)) !== null) {\n    locations.push(match[0]);\n  }\n\n  return locations;\n}\n\nconst extractCoordinate = (str: string): [number, number] | null => {\n  const pattern = /'latitude': ([-]?\\d+\\.\\d+).*?'longitude': ([-]?\\d+\\.\\d+)/;\n  const match = str.match(pattern);\n\n  if (match) {\n    const latitude = parseFloat(match[1]);\n    const longitude = parseFloat(match[2]);\n    return [longitude, latitude];\n  }\n\n  return null;\n};\n\nconst cities = chinaCities.map((c) => c.name);\nconst locationCache = new Map<number, ReturnType<typeof locationForRun>>();\n// what about oversea?\nconst locationForRun = (\n  run: Activity\n): {\n  country: string;\n  province: string;\n  city: string;\n  coordinate: [number, number] | null;\n} => {\n  if (locationCache.has(run.run_id)) {\n    return locationCache.get(run.run_id)!;\n  }\n  let location = run.location_country;\n  let [city, province, country] = ['', '', ''];\n  let coordinate = null;\n  if (location) {\n    // Only for Chinese now\n    // should filter 臺灣\n    const cityMatch = extractCities(location);\n    const provinceMatch = location.match(/[\\u4e00-\\u9fa5]{2,}(省|自治区)/);\n\n    if (cityMatch) {\n      city = cities.find((value) => cityMatch.includes(value)) as string;\n\n      if (!city) {\n        city = '';\n      }\n    }\n    if (provinceMatch) {\n      [province] = provinceMatch;\n      // try to extract city coord from location_country info\n      coordinate = extractCoordinate(location);\n    }\n    const l = location.split(',');\n    // or to handle keep location format\n    let countryMatch = l[l.length - 1].match(\n      /[\\u4e00-\\u9fa5].*[\\u4e00-\\u9fa5]/\n    );\n    if (!countryMatch && l.length >= 3) {\n      countryMatch = l[2].match(/[\\u4e00-\\u9fa5].*[\\u4e00-\\u9fa5]/);\n    }\n    if (countryMatch) {\n      [country] = countryMatch;\n    }\n  }\n  if (MUNICIPALITY_CITIES_ARR.includes(city)) {\n    province = city;\n    if (location) {\n      const districtMatch = extractDistricts(location);\n      if (districtMatch.length > 0) {\n        city = districtMatch[districtMatch.length - 1];\n      }\n    }\n  }\n\n  const r = { country, province, city, coordinate };\n  locationCache.set(run.run_id, r);\n  return r;\n};\n\nconst intComma = (x = '') => {\n  if (x.toString().length <= 5) {\n    return x;\n  }\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n};\n\nconst pathForRun = (run: Activity): Coordinate[] => {\n  try {\n    if (!run.summary_polyline) {\n      return [];\n    }\n    const c = mapboxPolyline.decode(run.summary_polyline);\n    // reverse lat long for mapbox\n    c.forEach((arr) => {\n      [arr[0], arr[1]] = !NEED_FIX_MAP\n        ? [arr[1], arr[0]]\n        : gcoord.transform([arr[1], arr[0]], gcoord.GCJ02, gcoord.WGS84);\n    });\n    // try to use location city coordinate instead , if runpath is incomplete\n    if (c.length === 2 && String(c[0]) === String(c[1])) {\n      const { coordinate } = locationForRun(run);\n      if (coordinate?.[0] && coordinate?.[1]) {\n        return [coordinate, coordinate];\n      }\n    }\n    return c;\n  } catch (err) {\n    return [];\n  }\n};\n\nconst colorForRun = (run: Activity): string => {\n  switch (run.type) {\n    case 'Run':{\n      if (run.subtype === 'trail') {\n        return RUN_TRAIL_COLOR;\n      } else if (run.subtype === 'generic') {\n        return RUN_COLOR;\n      }\n      return RUN_COLOR;\n    }\n    case 'cycling':\n      return CYCLING_COLOR;\n    case 'hiking':\n      return HIKING_COLOR;\n    case 'walking':\n      return WALKING_COLOR;\n    case 'swimming':\n      return SWIMMING_COLOR;\n    default:\n      return MAIN_COLOR;\n  }\n}\n\nconst geoJsonForRuns = (runs: Activity[]): FeatureCollection<LineString> => ({\n  type: 'FeatureCollection',\n  features: runs.map((run) => {\n    const points = pathForRun(run);\n    const color = colorForRun(run);\n    return {\n      type: 'Feature',\n      properties: {\n        color: color,\n      },\n      geometry: {\n        type: 'LineString',\n        coordinates: points,\n      },\n    };\n  }),\n});\n\nconst geoJsonForMap = (): FeatureCollection<RPGeometry> => ({\n  type: 'FeatureCollection',\n  features: worldGeoJson.features.concat(chinaGeojson.features),\n});\n\nconst getActivitySport = (act: Activity): string => {\n  if (act.type === 'Run') {\n    if (act.subtype === 'generic') {\n      const runDistance = act.distance / 1000;\n      if (runDistance > 20 && runDistance < 40) {\n        return RUN_TITLES.HALF_MARATHON_RUN_TITLE;\n      } else if (runDistance >= 40) {\n        return RUN_TITLES.FULL_MARATHON_RUN_TITLE;\n      }\n      return ACTIVITY_TYPES.RUN_GENERIC_TITLE;\n    }\n    else if (act.subtype === 'trail') return ACTIVITY_TYPES.RUN_TRAIL_TITLE;\n    else if (act.subtype === 'treadmill') return ACTIVITY_TYPES.RUN_TREADMILL_TITLE;\n    else return ACTIVITY_TYPES.RUN_GENERIC_TITLE;\n  }\n  else if (act.type === 'hiking') {\n    return ACTIVITY_TYPES.HIKING_TITLE;\n  }\n  else if (act.type === 'cycling') {\n    return ACTIVITY_TYPES.CYCLING_TITLE;\n  }\n  else if (act.type === 'walking') {\n    return ACTIVITY_TYPES.WALKING_TITLE;\n  }\n  // if act.type contains 'skiing'\n  else if (act.type.includes('skiing')) {\n    return ACTIVITY_TYPES.SKIING_TITLE;\n  }\n  return \"\";\n}\n\nconst titleForRun = (run: Activity): string => {\n  if (RICH_TITLE) {\n    // 1. try to use user defined name\n    if (run.name != '') {\n      return run.name;\n    }\n    // 2. try to use location+type if the location is available, eg. 'Shanghai Run'\n    const { city, province } = locationForRun(run);\n    const activity_sport = getActivitySport(run);\n    if (city && city.length > 0 && activity_sport.length > 0) {\n      return `${city} ${activity_sport}`;\n    }\n  }\n  // 3. use time+length if location or type is not available\n  const runDistance = run.distance / 1000;\n  const runHour = +run.start_date_local.slice(11, 13);\n  const start_point = run.location_country;\n  const end_point = run.ending_point_pos;\n  function getPrefix(pos: string | null | undefined) {\n    // 判断输入是否为字符串\n    if (typeof pos !== 'string') {\n      return '';\n    }\n\n    const elements = pos.split(',').map((s) => s.trim());\n    if (!pos.endsWith('中国')) {\n      if (!pos.endsWith('俄罗斯')) {\n        return elements[0];\n      }\n      return '俄罗斯' + elements[elements.length - 4] + elements[0];\n    }\n\n    const directCities = ['北京市', '上海市', '天津市', '重庆市'];\n    let anchorIndex = -1;\n\n    if (elements[0].includes('浙江大学')) {\n      return elements[0];\n    }\n    for (let i = elements.length - 1; i >= 0; i--) {\n      const element = elements[i];\n      if (directCities.includes(element)) {\n        anchorIndex = i;\n        break;\n      } else if (element.includes('省') || element.includes('自治区')) {\n        anchorIndex = i - 1; // 找到省或自治区时设置为前一个元素\n        break;\n      }\n    }\n\n    if (anchorIndex >= 1) {\n      // 确保锚点及其前一个元素存在\n      const ret = elements[anchorIndex] + elements[anchorIndex - 1];\n      if (anchorIndex - 1 !== 0) {\n        // 存在区以下的细分地址\n        return ret + elements[0];\n      } else {\n        return ret; // 只保留到区\n      }\n    }\n\n    return ''; // 如果没有找到符合条件的锚点\n  }\n  const start_prefix = getPrefix(start_point);\n  const end_prefix = getPrefix(end_point);\n  let prefix = '';\n  if (start_prefix && end_prefix) {\n    prefix =\n      start_prefix === end_prefix\n        ? start_prefix\n        : `${start_prefix} → ${end_prefix}`;\n  } else {\n    prefix = start_prefix || end_prefix || '';\n  }\n  if (prefix !== '') {\n    prefix += ' ';\n  }\n  if (runDistance >= 100) {\n    return prefix + '长途奔波';\n  }\n  if (runDistance >= 30) {\n    return prefix + '中长途旅程';\n  }\n  if (runHour >= 0 && runHour <= 10) {\n    return prefix + '清晨';\n  }\n  if (runHour > 10 && runHour <= 14) {\n    return prefix + '中午';\n  }\n  if (runHour > 14 && runHour <= 18) {\n    return prefix + '下午';\n  }\n  if (runHour > 18 && runHour <= 21) {\n    return prefix + '傍晚';\n  }\n  return prefix + '夜间';\n};\n\nexport interface IViewState {\n  longitude?: number;\n  latitude?: number;\n  zoom?: number;\n}\n\nconst getBoundsForGeoData = (\n  geoData: FeatureCollection<LineString>\n): IViewState => {\n  const { features } = geoData;\n  let points: Coordinate[] = [];\n  // find first have data\n  for (const f of features) {\n    if (f.geometry.coordinates.length) {\n      points = f.geometry.coordinates as Coordinate[];\n      break;\n    }\n  }\n  if (points.length === 0) {\n    return { longitude: 20, latitude: 20, zoom: 3 };\n  }\n  if (points.length === 2 && String(points[0]) === String(points[1])) {\n    return { longitude: points[0][0], latitude: points[0][1], zoom: 9 };\n  }\n  // Calculate corner values of bounds\n  const pointsLong = points.map((point) => point[0]) as number[];\n  const pointsLat = points.map((point) => point[1]) as number[];\n  const cornersLongLat: [Coordinate, Coordinate] = [\n    [Math.min(...pointsLong), Math.min(...pointsLat)],\n    [Math.max(...pointsLong), Math.max(...pointsLat)],\n  ];\n  const viewState = new WebMercatorViewport({\n    width: 800,\n    height: 600,\n  }).fitBounds(cornersLongLat, { padding: 200 });\n  let { longitude, latitude, zoom } = viewState;\n  zoom += 0.8; // 调整让缩放大一些\n  return { longitude, latitude, zoom };\n};\n\nconst filterYearRuns = (run: Activity, year: string) => {\n  if (run && run.start_date_local) {\n    return run.start_date_local.slice(0, 4) === year;\n  }\n  return false;\n};\n\nconst filterCityRuns = (run: Activity, city: string) => {\n  if (run && run.location_country) {\n    return run.location_country.includes(city);\n  }\n  return false;\n};\nconst filterTitleRuns = (run: Activity, title: string) =>\n  titleForRun(run) === title;\n\nconst filterAndSortRuns = (\n  activities: Activity[],\n  item: string,\n  filterFunc: (_run: Activity, _bvalue: string) => boolean,\n  sortFunc: (_a: Activity, _b: Activity) => number\n) => {\n  let s = activities;\n  if (item !== 'Total') {\n    s = activities.filter((run) => filterFunc(run, item));\n  }\n  return s.sort(sortFunc);\n};\n\nconst sortDateFunc = (a: Activity, b: Activity) => {\n  return (\n    new Date(b.start_date_local.replace(' ', 'T')).getTime() -\n    new Date(a.start_date_local.replace(' ', 'T')).getTime()\n  );\n};\nconst sortDateFuncReverse = (a: Activity, b: Activity) => sortDateFunc(b, a);\n\nexport {\n  titleForShow,\n  formatPace,\n  scrollToMap,\n  locationForRun,\n  intComma,\n  pathForRun,\n  geoJsonForRuns,\n  geoJsonForMap,\n  titleForRun,\n  filterYearRuns,\n  filterCityRuns,\n  filterTitleRuns,\n  filterAndSortRuns,\n  sortDateFunc,\n  sortDateFuncReverse,\n  getBoundsForGeoData,\n  formatRunTime,\n  convertMovingTime2Sec,\n};\n","import { intComma } from '@/utils/utils';\n\ninterface IStatProperties {\n  value: string | number;\n  description: string;\n  className?: string;\n  citySize?: number;\n  onClick?: () => void;\n}\n\nconst Stat = ({\n  value,\n  description,\n  className = 'pb-2 w-full',\n  citySize,\n  onClick,\n}: IStatProperties) => (\n  <div className={`${className}`} onClick={onClick}>\n    <span className={`text-${citySize || 5}xl font-bold italic`}>\n      {intComma(value.toString())}\n    </span>\n    <span className=\"text-lg font-semibold italic\">{description}</span>\n  </div>\n);\n\nexport default Stat;\n","import { locationForRun, titleForRun } from '@/utils/utils';\nimport activities from '@/static/activities.json';\n\nconst useActivities = () => {\n  const cities: Record<string, number> = {};\n  const runPeriod: Record<string, number> = {};\n  const provinces: Set<string> = new Set();\n  const countries: Set<string> = new Set();\n  let years: Set<string> = new Set();\n  let thisYear = '';\n\n  activities.forEach((run) => {\n    const location = locationForRun(run);\n\n    const periodName = titleForRun(run);\n    if (periodName) {\n      runPeriod[periodName] = runPeriod[periodName]\n        ? runPeriod[periodName] + 1\n        : 1;\n    }\n\n    const { city, province, country } = location;\n    // drop only one char city\n    if (city.length > 1) {\n      cities[city] = cities[city] ? cities[city] + run.distance : run.distance;\n    }\n    if (province) provinces.add(province);\n    if (country) countries.add(country);\n    const year = run.start_date_local.slice(0, 4);\n    years.add(year);\n  });\n\n  let yearsArray = [...years].sort().reverse();\n  if (years) [thisYear] = yearsArray; // set current year as first one of years array\n\n  return {\n    activities,\n    years: yearsArray,\n    countries: [...countries],\n    provinces: [...provinces],\n    cities,\n    runPeriod,\n    thisYear,\n  };\n};\n\nexport default useActivities;\n","import { useState } from 'react';\n\ntype HoverHook = [boolean, { onMouseOver: () => void; onMouseOut: () => void }];\n\nconst useHover = (): HoverHook => {\n  const [hovered, setHovered] = useState(false);\n  const [timer, setTimer] = useState<number>();\n\n  const eventHandlers = {\n    onMouseOver() {\n      setTimer(setTimeout(() => setHovered(true), 500)); // 500ms delay\n    },\n    onMouseOut() {\n      clearTimeout(timer);\n      setHovered(false);\n    },\n  };\n\n  return [hovered, eventHandlers];\n};\n\nexport default useHover;\n","export const yearStats = import.meta.glob('./year_*.svg', { import: 'ReactComponent' })\nexport const totalStat = import.meta.glob(['./github.svg', './grid.svg'], { import: 'ReactComponent' })\n","import { ComponentType } from 'react';\n\ntype SvgComponent = {\n  default: ComponentType<any>;\n};\n\nconst FailedLoadSvg = () => <div>Failed to load SVG</div>;\n\nexport const loadSvgComponent = async (\n  stats: Record<string, () => Promise<unknown>>,\n  path: string\n): Promise<SvgComponent> => {\n  try {\n    const module = await stats[path]();\n    return { default: module as ComponentType<any> };\n  } catch (error) {\n    console.error(error);\n    return { default: FailedLoadSvg };\n  }\n};\n","import { lazy, Suspense } from 'react';\nimport Stat from '@/components/Stat';\nimport useActivities from '@/hooks/useActivities';\nimport { formatPace } from '@/utils/utils';\nimport useHover from '@/hooks/useHover';\nimport { yearStats } from '@assets/index';\nimport { loadSvgComponent } from '@/utils/svgUtils';\nimport { SHOW_ELEVATION_GAIN } from \"@/utils/const\";\n\nconst YearStat = ({\n  year,\n  onClick,\n}: {\n  year: string;\n  onClick: (_year: string) => void;\n}) => {\n  let { activities: runs, years } = useActivities();\n  // for hover\n  const [hovered, eventHandlers] = useHover();\n  // lazy Component\n  const YearSVG = lazy(() => loadSvgComponent(yearStats, `./year_${year}.svg`));\n\n  if (years.includes(year)) {\n    runs = runs.filter((run) => run.start_date_local.slice(0, 4) === year);\n  }\n  let sumDistance = 0;\n  let streak = 0;\n  let sumElevationGain = 0;\n  let pace = 0; // eslint-disable-line no-unused-vars\n  let paceNullCount = 0; // eslint-disable-line no-unused-vars\n  let heartRate = 0;\n  let heartRateNullCount = 0;\n  let totalMetersAvail = 0;\n  let totalSecondsAvail = 0;\n  runs.forEach((run) => {\n    sumDistance += run.distance || 0;\n    sumElevationGain += run.elevation_gain || 0;\n    if (run.average_speed) {\n      pace += run.average_speed;\n      totalMetersAvail += run.distance || 0;\n      totalSecondsAvail += (run.distance || 0) / run.average_speed;\n    } else {\n      paceNullCount++;\n    }\n    if (run.average_heartrate) {\n      heartRate += run.average_heartrate;\n    } else {\n      heartRateNullCount++;\n    }\n    if (run.streak) {\n      streak = Math.max(streak, run.streak);\n    }\n  });\n  sumDistance = parseFloat((sumDistance / 1000.0).toFixed(1));\n  sumElevationGain = (sumElevationGain).toFixed(0);\n  const avgPace = formatPace(totalMetersAvail / totalSecondsAvail);\n  const hasHeartRate = !(heartRate === 0);\n  const avgHeartRate = (heartRate / (runs.length - heartRateNullCount)).toFixed(\n    0\n  );\n  return (\n    <div\n      className=\"cursor-pointer\"\n      onClick={() => onClick(year)}\n      {...eventHandlers}\n    >\n      <section>\n        <Stat value={year} description=\" Journey\" />\n        <Stat value={runs.length} description=\" Runs\" />\n        <Stat value={sumDistance} description=\" KM\" />\n        {SHOW_ELEVATION_GAIN && <Stat value={sumElevationGain} description=\" Elevation Gain\" />}\n        <Stat value={avgPace} description=\" Avg Pace\" />\n        <Stat value={`${streak} day`} description=\" Streak\" />\n        {hasHeartRate && (\n          <Stat value={avgHeartRate} description=\" Avg Heart Rate\" />\n        )}\n      </section>\n      {year !== 'Total' && hovered && (\n        <Suspense fallback=\"loading...\">\n          <YearSVG className=\"my-4 h-4/6 w-4/6 border-0 p-0\" />\n        </Suspense>\n      )}\n      <hr color=\"red\" />\n    </div>\n  );\n};\n\nexport default YearStat;\n","import Stat from '@/components/Stat';\nimport useActivities from '@/hooks/useActivities';\n\n// only support China for now\nconst CitiesStat = ({ onClick }: { onClick: (_city: string) => void }) => {\n  const { cities } = useActivities();\n\n  const citiesArr = Object.entries(cities);\n  citiesArr.sort((a, b) => b[1] - a[1]);\n  return (\n    <div className=\"cursor-pointer\">\n      <section style={{\n        maxHeight: '350px', // 设置最大高度为 400px\n        overflowY: 'auto',  // 当内容超过最大高度时显示垂直滚动条\n        border: '0px solid #ccc', // 为了便于观察，可以添加边框\n        padding: '0px' // 添加一些内边距\n      }}>\n        {citiesArr.map(([city, distance]) => (\n          <Stat\n            key={city}\n            value={city}\n            description={` ${(distance / 1000).toFixed(0)} KM`}\n            citySize={3}\n            onClick={() => onClick(city)}\n          />\n        ))}\n      </section>\n      <hr color=\"red\" />\n    </div>\n  );\n};\n\nexport default CitiesStat;\n","import Stat from '@/components/Stat';\nimport useActivities from '@/hooks/useActivities';\n\n// only support China for now\nconst LocationSummary = () => {\n  const { years, countries, provinces, cities } = useActivities();\n  return (\n    <div className=\"cursor-pointer\">\n      <section>\n        {years ? (\n          <Stat value={`${years.length}`} description=\" 年里我跑过\" />\n        ) : null}\n        {countries ? (\n          <Stat value={countries.length} description=\" 个国家\" />\n        ) : null}\n        {provinces ? (\n          <Stat value={provinces.length} description=\" 个省份\" />\n        ) : null}\n        {cities ? (\n          <Stat value={Object.keys(cities).length} description=\" 个城市\" />\n        ) : null}\n      </section>\n      <hr color=\"red\" />\n    </div>\n  );\n};\n\nexport default LocationSummary;\n","import Stat from '@/components/Stat';\nimport useActivities from '@/hooks/useActivities';\n\nconst PeriodStat = ({ onClick }: { onClick: (_period: string) => void }) => {\n  const { runPeriod } = useActivities();\n\n  const periodArr = Object.entries(runPeriod);\n  periodArr.sort((a, b) => b[1] - a[1]);\n  return (\n    <div className=\"cursor-pointer\">\n      <section style={{\n        maxHeight: '550px', // 设置最大高度为 550px\n        overflowY: 'auto',  // 当内容超过最大高度时显示垂直滚动条\n        border: '0px solid #ccc', // 为了便于观察，可以添加边框\n        padding: '0px' // 添加一些内边距\n      }}>\n        {periodArr.map(([period, times]) => (\n          <Stat\n            key={period}\n            value={period}\n            description={` ${times} Runs`}\n            citySize={3}\n            onClick={() => onClick(period)}\n          />\n        ))}\n      </section>\n      <hr color=\"red\" />\n    </div>\n  );\n};\n\nexport default PeriodStat;\n","import YearStat from '@/components/YearStat';\nimport {\n  CHINESE_LOCATION_INFO_MESSAGE_FIRST,\n  CHINESE_LOCATION_INFO_MESSAGE_SECOND,\n} from '@/utils/const';\nimport CitiesStat from './CitiesStat';\nimport LocationSummary from './LocationSummary';\nimport PeriodStat from './PeriodStat';\n\ninterface ILocationStatProps {\n  changeYear: (_year: string) => void;\n  changeCity: (_city: string) => void;\n  changeTitle: (_title: string) => void;\n}\n\nconst LocationStat = ({\n  changeYear,\n  changeCity,\n  changeTitle,\n}: ILocationStatProps) => (\n  <div className=\"w-full pb-16 lg:w-full lg:pr-16\">\n    <section className=\"pb-0\">\n      <p className=\"leading-relaxed\">\n        {CHINESE_LOCATION_INFO_MESSAGE_FIRST}\n        <br />\n        <br />\n        {CHINESE_LOCATION_INFO_MESSAGE_SECOND}\n        <br />\n        <br />\n        Что такое Crush?\n      </p>\n    </section>\n    <hr color=\"red\" />\n    <LocationSummary />\n    <CitiesStat onClick={changeCity} />\n    <PeriodStat onClick={changeTitle} />\n    <YearStat year=\"Total\" onClick={changeYear} />\n  </div>\n);\n\nexport default LocationStat;\n","export default \"__VITE_ASSET__2124ac2c__\"","export default \"__VITE_ASSET__28771261__\"","import { ReactComponent as EndSvg } from '@assets/end.svg';\nimport { ReactComponent as StartSvg } from '@assets/start.svg';\nimport { Marker } from 'react-map-gl';\nimport styles from './style.module.css';\n\ninterface IRunMarkerProperties {\n  startLon: number;\n  startLat: number;\n  endLon: number;\n  endLat: number;\n}\n\nconst RunMarker = ({\n  startLon,\n  startLat,\n  endLon,\n  endLat,\n}: IRunMarkerProperties) => {\n  const size = 5;\n  return (\n    <>\n      <Marker\n        key=\"maker_start\"\n        longitude={startLon}\n        latitude={startLat}\n        pitchAlignment=\"viewport\"\n      >\n        <div\n          style={{\n            transform: `translate(${-size / 2}px,${-size}px)`,\n            maxWidth: '25px',\n          }}\n        >\n          <StartSvg className={styles.locationSVG} />\n        </div>\n      </Marker>\n      <Marker key=\"maker_end\" longitude={endLon} latitude={endLat}>\n        <div\n          style={{\n            transform: `translate(${-size / 2}px,${-size}px)`,\n            maxWidth: '25px',\n          }}\n        >\n          <EndSvg className={styles.locationSVG} />\n        </div>\n      </Marker>\n    </>\n  );\n};\n\nexport default RunMarker;\n","import useActivities from '@/hooks/useActivities';\nimport styles from './style.module.css';\n\nconst RunMapButtons = ({\n  changeYear,\n  thisYear,\n}: {\n  changeYear: (_year: string) => void;\n  thisYear: string;\n}) => {\n  const { years } = useActivities();\n  const yearsButtons = years.slice();\n  yearsButtons.push('Total');\n\n  return (\n    <ul className={styles.buttons}>\n      {yearsButtons.map((year) => (\n        <li\n          key={`${year}button`}\n          className={\n            styles.button + ` ${year === thisYear ? styles.selected : ''}`\n          }\n          onClick={() => {\n            changeYear(year);\n          }}\n        >\n          {year}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default RunMapButtons;\n","import styles from './style.module.css';\n\ninterface ILightsProps {\n  setLights: (_lights: boolean) => void;\n  lights: boolean;\n}\n\nconst LightsControl = ({ setLights, lights }: ILightsProps) => {\n  return (\n    <div className={'mapboxgl-ctrl mapboxgl-ctrl-group  ' + styles.lights}>\n      <button\n        className={`${lights ? styles.lightsOn : styles.lightsOff}`}\n        onClick={() => setLights(!lights)}\n      >\n        <span\n          className=\"mapboxgl-ctrl-icon\"\n          aria-hidden=\"true\"\n          title={'Turn ' + `${lights ? 'off' : 'on'}` + ' the Light'}\n        ></span>\n      </button>\n    </div>\n  );\n};\n\nexport default LightsControl;\n","import maplibregl from 'maplibre-gl';\nimport React, { useRef, useCallback, useState, useEffect } from 'react';\nimport Map, {\n  Layer,\n  Source,\n  FullscreenControl,\n  NavigationControl,\n  MapRef,\n} from 'react-map-gl';\nimport { MapInstance } from 'react-map-gl/src/types/lib';\nimport useActivities from '@/hooks/useActivities';\nimport {\n  MAP_LAYER_LIST,\n  IS_CHINESE,\n  ROAD_LABEL_DISPLAY,\n  PROVINCE_FILL_COLOR,\n  COUNTRY_FILL_COLOR,\n  USE_DASH_LINE,\n  LINE_OPACITY,\n  MAP_HEIGHT,\n  PRIVACY_MODE,\n  LIGHTS_ON,\n  ZOOM_BIGMAP_LEVEL,\n} from '@/utils/const';\nimport { Coordinate, IViewState, geoJsonForMap } from '@/utils/utils';\nimport RunMarker from './RunMarker';\nimport RunMapButtons from './RunMapButtons';\nimport styles from './style.module.css';\nimport { FeatureCollection } from 'geojson';\nimport { RPGeometry } from '@/static/run_countries';\nimport './mapbox.css';\nimport LightsControl from '@/components/RunMap/LightsControl';\nimport 'maplibre-gl/dist/maplibre-gl.css';\n\ninterface IRunMapProps {\n  title: string;\n  viewState: IViewState;\n  setViewState: (_viewState: IViewState) => void;\n  changeYear: (_year: string) => void;\n  geoData: FeatureCollection<RPGeometry>;\n  thisYear: string;\n  isYearlyView: boolean;\n}\n\nconst RunMap = ({\n  title,\n  viewState,\n  setViewState,\n  changeYear,\n  geoData,\n  thisYear,\n  isYearlyView,\n}: IRunMapProps) => {\n  const { countries, provinces } = useActivities();\n  const mapRef = useRef<MapRef>();\n  const [lights, setLights] = useState(PRIVACY_MODE ? false : LIGHTS_ON);\n  const keepWhenLightsOff = ['runs2'];\n  function switchLayerVisibility(map: MapInstance, lights: boolean) {\n    const styleJson = map.getStyle();\n    styleJson.layers.forEach((it: { id: string }) => {\n      if (!keepWhenLightsOff.includes(it.id)) {\n        if (lights) map.setLayoutProperty(it.id, 'visibility', 'visible');\n        else map.setLayoutProperty(it.id, 'visibility', 'none');\n      }\n    });\n  }\n  const mapRefCallback = useCallback(\n    (ref: MapRef) => {\n      if (ref !== null) {\n        const map = ref.getMap();\n\n        // all style resources have been downloaded\n        // and the first visually complete rendering of the base style has occurred.\n        map.on('style.load', () => {\n          if (!ROAD_LABEL_DISPLAY) {\n            MAP_LAYER_LIST.forEach((layerId) => {\n              map.removeLayer(layerId);\n            });\n          }\n          mapRef.current = ref;\n          switchLayerVisibility(map, lights);\n        });\n      }\n      if (mapRef.current) {\n        const map = mapRef.current.getMap();\n        switchLayerVisibility(map, lights);\n      }\n    },\n    [mapRef, lights]\n  );\n  const filterProvinces = provinces.slice();\n  const filterCountries = countries.slice();\n  // for geojson format\n  filterProvinces.unshift('in', 'name');\n  filterCountries.unshift('in', 'name');\n\n  const initGeoDataLength = geoData.features.length;\n  const isBigMap = (viewState.zoom ?? 0) <= ZOOM_BIGMAP_LEVEL;\n  if (isBigMap && IS_CHINESE) {\n    // Show boundary and line together, combine geoData(only when not combine yet)\n    if (geoData.features.length === initGeoDataLength) {\n      geoData = {\n        type: 'FeatureCollection',\n        features: geoData.features.concat(geoJsonForMap().features),\n      };\n    }\n  }\n\n  const isSingleRun =\n    geoData.features.length === 1 &&\n    geoData.features[0].geometry.coordinates.length;\n  let startLon = 0;\n  let startLat = 0;\n  let endLon = 0;\n  let endLat = 0;\n  if (isSingleRun) {\n    const points = geoData.features[0].geometry.coordinates as Coordinate[];\n    [startLon, startLat] = points[0];\n    [endLon, endLat] = points[points.length - 1];\n  }\n  let dash = USE_DASH_LINE && !isSingleRun && !isBigMap ? [2, 2] : [2, 0];\n  const onMove = React.useCallback(\n    ({ viewState }: { viewState: IViewState }) => {\n      setViewState(viewState);\n    },\n    []\n  );\n  const style: React.CSSProperties = {\n    width: '100%',\n    height: MAP_HEIGHT,\n  };\n  const fullscreenButton: React.CSSProperties = {\n    position: 'absolute',\n    marginTop: '29.2px',\n    right: '0px',\n    opacity: 0.3,\n  };\n\n  useEffect(() => {\n    const handleFullscreenChange = () => {\n      if (mapRef.current) {\n        mapRef.current.getMap().resize();\n      }\n    };\n    document.addEventListener('fullscreenchange', handleFullscreenChange);\n    return () => {\n      document.removeEventListener('fullscreenchange', handleFullscreenChange);\n    };\n  }, []);\n\n  return (\n    <Map\n      {...viewState}\n      onMove={onMove}\n      style={style}\n      mapStyle=\"https://basemaps.cartocdn.com/gl/dark-matter-gl-style/style.json\"\n      ref={mapRefCallback}\n      mapLib={maplibregl}\n    >\n      <RunMapButtons changeYear={changeYear} thisYear={thisYear} />\n      <Source id=\"data\" type=\"geojson\" data={geoData}>\n        <Layer\n          id=\"province\"\n          type=\"fill\"\n          paint={{\n            'fill-color': PROVINCE_FILL_COLOR,\n          }}\n          filter={filterProvinces}\n        />\n        <Layer\n          id=\"countries\"\n          type=\"fill\"\n          paint={{\n            'fill-color': COUNTRY_FILL_COLOR,\n            // in China, fill a bit lighter while already filled provinces\n            'fill-opacity': ['case', ['==', ['get', 'name'], '中国'], 0.1, 0.5],\n          }}\n          filter={filterCountries}\n        />\n        <Layer\n          id=\"runs2\"\n          type=\"line\"\n          paint={{\n            'line-color': ['get', 'color'],\n            'line-width': isBigMap && lights ? 1 : 2,\n            'line-dasharray': dash,\n            'line-opacity':\n              isSingleRun || isBigMap || !lights ? 1 : LINE_OPACITY,\n            'line-blur': 1,\n          }}\n          layout={{\n            'line-join': 'round',\n            'line-cap': 'round',\n          }}\n        />\n      </Source>\n      {isSingleRun && !isYearlyView && (\n        <RunMarker\n          startLat={startLat}\n          startLon={startLon}\n          endLat={endLat}\n          endLon={endLon}\n        />\n      )}\n      <span className={styles.runTitle}>{title}</span>\n      <FullscreenControl style={fullscreenButton} />\n      {!PRIVACY_MODE && <LightsControl setLights={setLights} lights={lights} />}\n      <NavigationControl\n        showCompass={false}\n        position={'bottom-right'}\n        style={{ opacity: 0.3 }}\n      />\n    </Map>\n  );\n};\n\nexport default RunMap;\n","import { formatPace, titleForRun, formatRunTime, Activity, RunIds } from '@/utils/utils';\nimport { SHOW_ELEVATION_GAIN } from '@/utils/const';\nimport styles from './style.module.css';\n\ninterface IRunRowProperties {\n  elementIndex: number;\n  locateActivity: (_runIds: RunIds) => void;\n  run: Activity;\n  runIndex: number;\n  setRunIndex: (_ndex: number) => void;\n}\n\nconst RunRow = ({\n  elementIndex,\n  locateActivity,\n  run,\n  runIndex,\n  setRunIndex,\n}: IRunRowProperties) => {\n  const distance = (run.distance / 1000.0).toFixed(2);\n  const elevation_gain = run.elevation_gain?.toFixed(0);\n  const paceParts = run.average_speed ? formatPace(run.average_speed) : null;\n  const heartRate = run.average_heartrate;\n  const runTime = formatRunTime(run.moving_time);\n  const handleClick = () => {\n    if (runIndex === elementIndex) {\n      setRunIndex(-1);\n      locateActivity([]);\n      return;\n    }\n    setRunIndex(elementIndex);\n    locateActivity([run.run_id]);\n  };\n\n  return (\n    <tr\n      className={`${styles.runRow} ${runIndex === elementIndex ? styles.selected : ''}`}\n      key={run.start_date_local}\n      onClick={handleClick}\n    >\n      <td>{titleForRun(run)}</td>\n      <td>{distance}</td>\n      {SHOW_ELEVATION_GAIN && <td>{elevation_gain}</td>}\n      {paceParts && <td>{paceParts}</td>}\n      <td>{heartRate && heartRate.toFixed(0)}</td>\n      <td>{runTime}</td>\n      <td className={styles.runDate}>{run.start_date_local}</td>\n    </tr>\n  );\n};\n\nexport default RunRow;\n","import React, { useState } from 'react';\nimport {\n  sortDateFunc,\n  sortDateFuncReverse,\n  convertMovingTime2Sec,\n  Activity,\n  RunIds,\n} from '@/utils/utils';\nimport { SHOW_ELEVATION_GAIN } from \"@/utils/const\";\n\nimport RunRow from './RunRow';\nimport styles from './style.module.css';\n\ninterface IRunTableProperties {\n  runs: Activity[];\n  locateActivity: (_runIds: RunIds) => void;\n  setActivity: (_runs: Activity[]) => void;\n  runIndex: number;\n  setRunIndex: (_index: number) => void;\n}\n\ntype SortFunc = (_a: Activity, _b: Activity) => number;\n\nconst RunTable = ({\n  runs,\n  locateActivity,\n  setActivity,\n  runIndex,\n  setRunIndex,\n}: IRunTableProperties) => {\n  const [sortFuncInfo, setSortFuncInfo] = useState('');\n  // TODO refactor?\n  const sortKMFunc: SortFunc = (a, b) =>\n    sortFuncInfo === 'KM' ? a.distance - b.distance : b.distance - a.distance;\n  const sortElevationGainFunc: SortFunc = (a, b) =>\n    sortFuncInfo === 'Elevation Gain'\n      ? (a.elevation_gain ?? 0) - (b.elevation_gain ?? 0)\n      : (b.elevation_gain ?? 0) - (a.elevation_gain ?? 0);\n  const sortPaceFunc: SortFunc = (a, b) =>\n    sortFuncInfo === 'Pace'\n      ? a.average_speed - b.average_speed\n      : b.average_speed - a.average_speed;\n  const sortBPMFunc: SortFunc = (a, b) => {\n    return sortFuncInfo === 'BPM'\n      ? (a.average_heartrate ?? 0) - (b.average_heartrate ?? 0)\n      : (b.average_heartrate ?? 0) - (a.average_heartrate ?? 0);\n  };\n  const sortRunTimeFunc: SortFunc = (a, b) => {\n    const aTotalSeconds = convertMovingTime2Sec(a.moving_time);\n    const bTotalSeconds = convertMovingTime2Sec(b.moving_time);\n    return sortFuncInfo === 'Time'\n      ? aTotalSeconds - bTotalSeconds\n      : bTotalSeconds - aTotalSeconds;\n  };\n  const sortDateFuncClick =\n    sortFuncInfo === 'Date' ? sortDateFunc : sortDateFuncReverse;\n  const sortFuncMap = new Map([\n    ['KM', sortKMFunc],\n    ['Elevation Gain', sortElevationGainFunc],\n    ['Pace', sortPaceFunc],\n    ['BPM', sortBPMFunc],\n    ['Time', sortRunTimeFunc],\n    ['Date', sortDateFuncClick],\n  ]);\n  if (!SHOW_ELEVATION_GAIN){\n    sortFuncMap.delete('Elevation Gain')\n  }\n\n  const handleClick: React.MouseEventHandler<HTMLElement> = (e) => {\n    const funcName = (e.target as HTMLElement).innerHTML;\n    const f = sortFuncMap.get(funcName);\n\n    setRunIndex(-1);\n    setSortFuncInfo(sortFuncInfo === funcName ? '' : funcName);\n    setActivity(runs.sort(f));\n  };\n\n  return (\n    <div className={styles.tableContainer} style={{ maxHeight: '550px', overflowY: 'auto' }}>\n      <table className={styles.runTable} cellSpacing=\"0\" cellPadding=\"0\">\n        <thead>\n          <tr>\n            <th />\n            {Array.from(sortFuncMap.keys()).map((k) => (\n              <th key={k} onClick={handleClick}>\n                {k}\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {runs.map((run, elementIndex) => (\n            <RunRow\n              key={run.run_id}\n              elementIndex={elementIndex}\n              locateActivity={locateActivity}\n              run={run}\n              runIndex={runIndex}\n              setRunIndex={setRunIndex}\n            />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default RunTable;\n","import { lazy, Suspense } from 'react';\nimport { totalStat } from '@assets/index';\nimport { loadSvgComponent } from '@/utils/svgUtils';\n\n// Lazy load both github.svg and grid.svg\nconst GithubSvg = lazy(() => loadSvgComponent(totalStat, './github.svg'));\n\nconst GridSvg = lazy(() => loadSvgComponent(totalStat, './grid.svg'));\n\nconst SVGStat = () => (\n  <div id=\"svgStat\">\n    <Suspense fallback={<div className=\"text-center\">Loading...</div>}>\n      <GithubSvg className=\"mt-4 h-auto w-full\" />\n      <GridSvg className=\"mt-4 h-auto w-full\" />\n    </Suspense>\n  </div>\n);\n\nexport default SVGStat;\n","import YearStat from '@/components/YearStat';\nimport useActivities from '@/hooks/useActivities';\nimport { INFO_MESSAGE } from '@/utils/const';\n\nconst YearsStat = ({\n  year,\n  onClick,\n}: {\n  year: string;\n  onClick: (_year: string) => void;\n}) => {\n  const { years } = useActivities();\n  // make sure the year click on front\n  let yearsArrayUpdate = years.slice();\n  yearsArrayUpdate.push('Total');\n  yearsArrayUpdate = yearsArrayUpdate.filter((x) => x !== year);\n  yearsArrayUpdate.unshift(year);\n\n  // for short solution need to refactor\n  return (\n    <div className=\"w-full pb-16 pr-16 lg:w-full lg:pr-16\" style={{\n      maxHeight: '977px', // 设置最大高度为 550px\n      overflowY: 'auto',  // 当内容超过最大高度时显示垂直滚动条\n      border: '0px solid #ccc', // 为了便于观察，可以添加边框\n      paddingRight: '5px', // 添加一些内边距\n    }}>\n      <section className=\"pb-0\">\n        <p className=\"leading-relaxed\">\n          {INFO_MESSAGE(years.length, year)}\n          <br />\n        </p>\n      </section>\n      <hr color=\"red\" />\n      {yearsArrayUpdate.map((year) => (\n        <YearStat key={year} year={year} onClick={onClick} />\n      ))}\n      {\n        // eslint-disable-next-line no-prototype-builtins\n        yearsArrayUpdate.hasOwnProperty('Total') ? (\n          <YearStat key=\"Total\" year=\"Total\" onClick={onClick} />\n        ) : (\n          <div />\n        )\n      }\n    </div>\n  );\n};\n\nexport default YearsStat;\n","import { useEffect, useState } from 'react';\nimport React, { useReducer } from 'react';\nimport { Analytics } from '@vercel/analytics/react';\nimport Layout from '@/components/Layout';\nimport LocationStat from '@/components/LocationStat';\nimport RunMap from '@/components/RunMap';\nimport RunTable from '@/components/RunTable';\nimport SVGStat from '@/components/SVGStat';\nimport YearsStat from '@/components/YearsStat';\nimport useActivities from '@/hooks/useActivities';\nimport useSiteMetadata from '@/hooks/useSiteMetadata';\nimport { IS_CHINESE, ZOOM_BIGMAP_LEVEL } from '@/utils/const';\nimport {\n  Activity,\n  IViewState,\n  filterAndSortRuns,\n  filterCityRuns,\n  filterTitleRuns,\n  filterYearRuns,\n  geoJsonForRuns,\n  getBoundsForGeoData,\n  scrollToMap,\n  sortDateFunc,\n  titleForShow,\n  RunIds,\n} from '@/utils/utils';\n\nconst SHOW_LOCATION_STAT = 'SHOW_LOCATION_STAT';\nconst SHOW_YEARS_STAT = 'SHOW_YEARS_STAT';\nconst reducer = (state: any, action: { type: any }) => {\n  switch (action.type) {\n    case SHOW_LOCATION_STAT:\n      return { showLocationStat: true };\n    case SHOW_YEARS_STAT:\n      return { showLocationStat: false };\n    default:\n      return state;\n  }\n};\nconst Index = () => {\n  const { siteTitle } = useSiteMetadata();\n  const { activities, thisYear } = useActivities();\n  const [year, setYear] = useState(thisYear);\n  const [isYearlyView, setIsYearlyView] = useState(true);\n  const [runIndex, setRunIndex] = useState(-1);\n  const [runs, setActivity] = useState(\n    filterAndSortRuns(activities, year, filterYearRuns, sortDateFunc)\n  );\n  const [title, setTitle] = useState('');\n  const [geoData, setGeoData] = useState(geoJsonForRuns(runs));\n  // for auto zoom\n  const bounds = getBoundsForGeoData(geoData);\n  const [intervalId, setIntervalId] = useState<number>();\n\n  const [viewState, setViewState] = useState<IViewState>({\n    ...bounds,\n  });\n\n  useEffect(() => {\n    console.log(title);\n  }, [title]);\n\n  const changeByItem = (\n    item: string,\n    name: string,\n    func: (_run: Activity, _value: string) => boolean\n  ) => {\n    scrollToMap();\n    if (name != 'Year') {\n      setYear(thisYear);\n    }\n    setIsYearlyView(true);\n    setActivity(filterAndSortRuns(activities, item, func, sortDateFunc));\n    setRunIndex(-1);\n    setTitle(`${item} ${name} Running Heatmap`);\n  };\n\n  const changeYear = (y: string) => {\n    // default year\n    setYear(y);\n\n    if ((viewState.zoom ?? 0) > ZOOM_BIGMAP_LEVEL && bounds) {\n      setViewState({\n        ...bounds,\n      });\n    }\n\n    changeByItem(y, 'Year', filterYearRuns);\n    clearInterval(intervalId);\n  };\n\n  const changeCity = (city: string) => {\n    changeByItem(city, 'City', filterCityRuns);\n  };\n\n  const changeTitle = (title: string) => {\n    changeByItem(title, 'Title', filterTitleRuns);\n  };\n\n  const locateActivity = (runIds: RunIds) => {\n    const ids = new Set(runIds);\n    \n    \n    const selectedRuns = !runIds.length\n    ? runs\n    : runs.filter((r: any) => ids.has(r.run_id));\n    \n    if (!runIds.length) {\n      setIsYearlyView(true);\n    } else {\n      setIsYearlyView(false);\n    }\n    \n    if (!selectedRuns.length) {\n      return;\n    }\n\n    const lastRun = selectedRuns.sort(sortDateFunc)[0];\n\n    if (!lastRun) {\n      return;\n    }\n    setGeoData(geoJsonForRuns(selectedRuns));\n    setTitle(titleForShow(lastRun));\n    clearInterval(intervalId);\n    scrollToMap();\n  };\n\n  useEffect(() => {\n    setViewState({\n      ...bounds,\n    });\n  }, [geoData]);\n\n  useEffect(() => {\n    const runsNum = runs.length;\n    // maybe change 20 ?\n    const sliceNume = runsNum >= 20 ? runsNum / 20 : 1;\n    let i = sliceNume;\n    const id = setInterval(() => {\n      if (i >= runsNum) {\n        clearInterval(id);\n      }\n\n      const tempRuns = runs.slice(0, i);\n      setGeoData(geoJsonForRuns(tempRuns));\n      i += sliceNume;\n    }, 100);\n    setIntervalId(id);\n  }, [runs]);\n\n  useEffect(() => {\n    if (year !== 'Total') {\n      return;\n    }\n\n    let svgStat = document.getElementById('svgStat');\n    if (!svgStat) {\n      return;\n    }\n\n    const handleClick = (e: Event) => {\n      const target = e.target as HTMLElement;\n      if (target.tagName.toLowerCase() === 'path') {\n        // Use querySelector to get the <desc> element and the <title> element.\n        const descEl = target.querySelector('desc');\n        if (descEl) {\n          // If the runId exists in the <desc> element, it means that a running route has been clicked.\n          const runId = Number(descEl.innerHTML);\n          if (!runId) {\n            return;\n          }\n          locateActivity([runId]);\n          return;\n        }\n\n        const titleEl = target.querySelector('title');\n        if (titleEl) {\n          // If the runDate exists in the <title> element, it means that a date square has been clicked.\n          const [runDate] = titleEl.innerHTML.match(\n            /\\d{4}-\\d{1,2}-\\d{1,2}/\n          ) || [`${+thisYear + 1}`];\n          const runIDsOnDate = runs\n            .filter((r) => r.start_date_local.slice(0, 10) === runDate)\n            .map((r) => r.run_id);\n          if (!runIDsOnDate.length) {\n            return;\n          }\n          locateActivity(runIDsOnDate);\n        }\n      }\n    };\n    svgStat.addEventListener('click', handleClick);\n    return () => {\n      svgStat && svgStat.removeEventListener('click', handleClick);\n    };\n  }, [year]);\n\n  // 初始化 state 和 dispatch 函数\n  const [state, dispatch] = useReducer(reducer, { showLocationStat: false });\n  // 切换显示组件的函数\n  const handleToggle = () => {\n    if (state.showLocationStat) {\n      dispatch({ type: SHOW_YEARS_STAT });\n    } else {\n      dispatch({ type: SHOW_LOCATION_STAT });\n    }\n  };\n  const buttonStyle = {\n    backgroundColor: '#595959', // 背景色\n    color: 'rgb(224 237 94)', // 文字颜色\n    border: 'none', // 去除边框\n    borderRadius: '4px', // 圆角\n    padding: '10px 20px', // 内边距\n    fontSize: '16px', // 字体大小\n    cursor: 'pointer', // 鼠标指针样式\n    marginBottom: '20px', // 底部外边距\n  };\n\n  return (\n    <Layout>\n      <div className=\"w-full lg:w-1/3\">\n        <h1 className=\"my-12 text-5xl font-extrabold italic\">\n          <a href=\"/\">{siteTitle}</a>\n        </h1>\n        <button onClick={handleToggle} style={buttonStyle}>\n          {state.showLocationStat ? '切换至年份统计' : '切换至地点统计'}\n        </button>\n        {state.showLocationStat ? (\n          <LocationStat\n            changeYear={changeYear}\n            changeCity={changeCity}\n            changeTitle={changeTitle}\n          />\n        ) : (\n          <YearsStat\n            year={year}\n            onClick={changeYear}\n          />\n        )}\n      </div>\n      <div className=\"w-full lg:w-2/3\" style={{\n        marginLeft: '10px',\n      }}>\n        <RunMap\n          title={title}\n          viewState={viewState}\n          geoData={geoData}\n          setViewState={setViewState}\n          changeYear={changeYear}\n          thisYear={year}\n          isYearlyView={isYearlyView}\n        />\n        {year === 'Total' ? (\n          <SVGStat />\n        ) : (\n          <RunTable\n            runs={runs}\n            locateActivity={locateActivity}\n            setActivity={setActivity}\n            runIndex={runIndex}\n            setRunIndex={setRunIndex}\n          />\n        )}\n      </div>\n      {/* Enable Audiences in Vercel Analytics: https://vercel.com/docs/concepts/analytics/audiences/quickstart */}\n      {import.meta.env.VERCEL && <Analytics />}\n    </Layout>\n  );\n};\n\nexport default Index;\n","import Layout from '@/components/Layout';\nimport useSiteMetadata from '@/hooks/useSiteMetadata';\n\nconst NotFoundPage = () => {\n  const { siteUrl } = useSiteMetadata();\n  return (\n    <Layout>\n      <h1 className=\"my-2.5 text-5xl font-bold italic\">404</h1>\n      <p>This page doesn&#39;t exist.</p>\n      <p className=\"text-gray-400\">\n        If you wanna more message, you could visit{' '}\n        <a className=\"font-bold text-gray-400\" href={siteUrl}>\n          {siteUrl}\n        </a>\n      </p>\n    </Layout>\n  );\n};\n\nexport default NotFoundPage;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport { HelmetProvider } from 'react-helmet-async';\nimport Index from './pages';\nimport NotFound from './pages/404';\nimport HomePage from \"@/pages/total\";\nimport '@/styles/index.css';\n\n// 根据环境变量动态设置 basename\nconst basename = process.env.NODE_ENV === 'production' ? '/i_drive' : '/';\n\nReactDOM.createRoot(document.getElementById('root')!).render(\n  <React.StrictMode>\n    <HelmetProvider>\n      <BrowserRouter basename={basename}>\n        <Routes>\n          <Route path=\"/\" element={<Index />} />\n          <Route path=\"/summary\" element={<HomePage />} />\n          <Route path=\"*\" element={<NotFound />} />\n        </Routes>\n      </BrowserRouter>\n    </HelmetProvider>\n  </React.StrictMode>\n);"],"file":"assets/main-b4c19b78.js"}
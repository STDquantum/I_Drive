import os
import json
import xml.etree.ElementTree as ET
from datetime import datetime, timedelta

# 源文件夹路径
source_folder = r"E:\download\com.autonavi.minimap\files\autonavi\trackInfo"
# 目标保存路径
output_folder = os.path.join(".", "gpx_output_tracks")

# 确保目标文件夹存在
os.makedirs(output_folder, exist_ok=True)

# 遍历源文件夹里的所有文件
for filename in os.listdir(source_folder):
    full_path = os.path.join(source_folder, filename)

    if os.path.isfile(full_path):
        with open(full_path, 'r', encoding='utf-8') as f:
            content = f.read()

        try:
            # 解析文件内容
            points_list = json.loads(content)
            points = []
            for item in points_list:
                lon, lat = map(float, item.strip('"').split(','))
                points.append((lat, lon))
            

            # 创建GPX文件结构
            gpx = ET.Element('gpx', version="1.1", creator="Generated by Script", xmlns="http://www.topografix.com/GPX/1/1")
            trk = ET.SubElement(gpx, 'trk')
            trkseg = ET.SubElement(trk, 'trkseg')

            for idx, (lat, lon) in enumerate(points):
                trkpt = ET.SubElement(trkseg, 'trkpt', lat=str(lat), lon=str(lon))

            # 输出到新的文件夹，文件名跟原文件名一样，加.gpx
            output_file = os.path.join(output_folder, filename + ".gpx")
            tree = ET.ElementTree(gpx)
            tree.write(output_file, encoding='utf-8', xml_declaration=True)

            print(f"成功生成GPX文件：{output_file}")

        except Exception as e:
            print(f"处理文件 {filename} 出错：{e}")
